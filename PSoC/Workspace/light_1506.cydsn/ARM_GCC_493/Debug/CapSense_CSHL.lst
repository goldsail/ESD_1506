ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	CapSense_sensorBaseline,14,4
  19              		.comm	CapSense_sensorBaselineLow,7,4
  20              		.comm	CapSense_sensorSignal,7,4
  21              		.comm	CapSense_sensorOnMask,1,4
  22              		.comm	CapSense_lowBaselineResetCnt,7,4
  23              		.global	CapSense_fingerThreshold
  24              		.data
  25              		.align	2
  26              		.type	CapSense_fingerThreshold, %object
  27              		.size	CapSense_fingerThreshold, 3
  28              	CapSense_fingerThreshold:
  29 0000 19       		.byte	25
  30 0001 50       		.byte	80
  31 0002 50       		.byte	80
  32              		.global	CapSense_noiseThreshold
  33 0003 00       		.align	2
  34              		.type	CapSense_noiseThreshold, %object
  35              		.size	CapSense_noiseThreshold, 3
  36              	CapSense_noiseThreshold:
  37 0004 0A       		.byte	10
  38 0005 3C       		.byte	60
  39 0006 3C       		.byte	60
  40              		.global	CapSense_hysteresis
  41 0007 00       		.align	2
  42              		.type	CapSense_hysteresis, %object
  43              		.size	CapSense_hysteresis, 3
  44              	CapSense_hysteresis:
  45 0008 00       		.byte	0
  46 0009 05       		.byte	5
  47 000a 05       		.byte	5
  48              		.global	CapSense_debounce
  49 000b 00       		.align	2
  50              		.type	CapSense_debounce, %object
  51              		.size	CapSense_debounce, 3
  52              	CapSense_debounce:
  53 000c 01       		.byte	1
  54 000d 03       		.byte	3
  55 000e 03       		.byte	3
  56              		.global	CapSense_debounceCounter
  57 000f 00       		.bss
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 2


  58              		.align	2
  59              		.type	CapSense_debounceCounter, %object
  60              		.size	CapSense_debounceCounter, 3
  61              	CapSense_debounceCounter:
  62 0000 000000   		.space	3
  63              		.global	CapSense_rawDataIndex
  64              		.section	.rodata
  65              		.align	2
  66              		.type	CapSense_rawDataIndex, %object
  67              		.size	CapSense_rawDataIndex, 3
  68              	CapSense_rawDataIndex:
  69 0000 02       		.byte	2
  70 0001 00       		.byte	0
  71 0002 01       		.byte	1
  72              		.global	CapSense_numberOfSensors
  73 0003 00       		.align	2
  74              		.type	CapSense_numberOfSensors, %object
  75              		.size	CapSense_numberOfSensors, 3
  76              	CapSense_numberOfSensors:
  77 0004 05       		.byte	5
  78 0005 01       		.byte	1
  79 0006 01       		.byte	1
  80              		.global	CapSense_centroidMult
  81 0007 00       		.align	2
  82              		.type	CapSense_centroidMult, %object
  83              		.size	CapSense_centroidMult, 2
  84              	CapSense_centroidMult:
  85 0008 0019     		.short	6400
  86 000a 0000     		.section	.text.CapSense_BaseInit,"ax",%progbits
  87              		.align	2
  88              		.global	CapSense_BaseInit
  89              		.thumb
  90              		.thumb_func
  91              		.type	CapSense_BaseInit, %function
  92              	CapSense_BaseInit:
  93              	.LFB0:
  94              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.40
   4:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 3


  21:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  32:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     25u, 80u, 80u, 
  50:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     10u, 60u, 60u, 
  54:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 5u, 5u, 
  58:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 3u, 3u, 
  62:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* LinearSlider0__LS */
  70:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  71:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  72:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  74:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  75:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  76:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* LinearSlider0__LS */
  77:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 4


  78:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  79:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  81:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  82:.\Generated_Source\PSoC5/CapSense_CSHL.c **** const uint16 CYCODE CapSense_centroidMult[] = {
  83:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     6400u, 
  84:.\Generated_Source\PSoC5/CapSense_CSHL.c **** };
  85:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  86:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  87:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  88:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
  89:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
  91:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
  93:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
  94:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
  95:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
  96:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
  97:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
  98:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
  99:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 100:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 101:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 102:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 103:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 104:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 105:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 106:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 107:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 108:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 109:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 110:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 111:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 112:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 113:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 114:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 115:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 116:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 117:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 118:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 119:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 120:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 121:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 122:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 123:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 124:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 125:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 126:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 127:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 128:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 129:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 130:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
  95              		.loc 1 130 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 16
  98              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 5


  99              		@ link register save eliminated.
 100 0000 80B4     		push	{r7}
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 85B0     		sub	sp, sp, #20
 104              		.cfi_def_cfa_offset 24
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 107 0006 0346     		mov	r3, r0
 108 0008 FB71     		strb	r3, [r7, #7]
 131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 109              		.loc 1 133 0
 110 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 111 000c 104A     		ldr	r2, .L3
 112 000e D35C     		ldrb	r3, [r2, r3]
 113 0010 FB73     		strb	r3, [r7, #15]
 134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 138:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 146:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 114              		.loc 1 147 0
 115 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 116 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 117 0016 0F49     		ldr	r1, .L3+4
 118 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 119 001c 0E4A     		ldr	r2, .L3+8
 120 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 121              		.loc 1 148 0
 122 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 123 0024 0D4A     		ldr	r2, .L3+12
 124 0026 0021     		movs	r1, #0
 125 0028 D154     		strb	r1, [r2, r3]
 149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 126              		.loc 1 149 0
 127 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 128 002c 0C4A     		ldr	r2, .L3+16
 129 002e 0021     		movs	r1, #0
 130 0030 D154     		strb	r1, [r2, r3]
 150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
 131              		.loc 1 151 0
 132 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 133 0034 002B     		cmp	r3, #0
 134 0036 06D0     		beq	.L1
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 6


 152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSense_deboun
 135              		.loc 1 153 0
 136 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 137 003a 013B     		subs	r3, r3, #1
 138 003c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 139 003e 0949     		ldr	r1, .L3+20
 140 0040 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 141 0042 094A     		ldr	r2, .L3+24
 142 0044 D154     		strb	r1, [r2, r3]
 143              	.L1:
 154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 155:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 159:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 163:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 171:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 173:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 175:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 176:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 179:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 180:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 181:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 144              		.loc 1 181 0
 145 0046 1437     		adds	r7, r7, #20
 146              		.cfi_def_cfa_offset 4
 147 0048 BD46     		mov	sp, r7
 148              		.cfi_def_cfa_register 13
 149              		@ sp needed
 150 004a 5DF8047B 		ldr	r7, [sp], #4
 151              		.cfi_restore 7
 152              		.cfi_def_cfa_offset 0
 153 004e 7047     		bx	lr
 154              	.L4:
 155              		.align	2
 156              	.L3:
 157 0050 00000000 		.word	CapSense_widgetNumber
 158 0054 00000000 		.word	CapSense_sensorRaw
 159 0058 00000000 		.word	CapSense_sensorBaseline
 160 005c 00000000 		.word	CapSense_sensorBaselineLow
 161 0060 00000000 		.word	CapSense_sensorSignal
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 7


 162 0064 00000000 		.word	CapSense_debounce
 163 0068 00000000 		.word	CapSense_debounceCounter
 164              		.cfi_endproc
 165              	.LFE0:
 166              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 167              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_InitializeSensorBaseline
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_InitializeSensorBaseline, %function
 173              	CapSense_InitializeSensorBaseline:
 174              	.LFB1:
 182:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 183:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 184:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 185:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 186:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 187:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 188:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 189:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 190:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 191:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 192:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 193:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 194:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 195:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 196:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 197:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 198:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 199:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 200:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 201:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 202:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 203:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 204:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 205:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 207:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 175              		.loc 1 207 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
 184              		.cfi_def_cfa_offset 16
 185 0004 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 187 0006 0346     		mov	r3, r0
 188 0008 FB71     		strb	r3, [r7, #7]
 208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 189              		.loc 1 209 0
 190 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 8


 191 000c 1846     		mov	r0, r3
 192 000e FFF7FEFF 		bl	CapSense_ScanSensor
 210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 193              		.loc 1 210 0
 194 0012 00BF     		nop
 195              	.L6:
 196              		.loc 1 210 0 is_stmt 0 discriminator 1
 197 0014 FFF7FEFF 		bl	CapSense_IsBusy
 198 0018 0346     		mov	r3, r0
 199 001a 002B     		cmp	r3, #0
 200 001c FAD1     		bne	.L6
 211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 201              		.loc 1 217 0 is_stmt 1
 202 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 203 0020 1846     		mov	r0, r3
 204 0022 FFF7FEFF 		bl	CapSense_BaseInit
 218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 230:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 234:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 205              		.loc 1 234 0
 206 0026 0837     		adds	r7, r7, #8
 207              		.cfi_def_cfa_offset 8
 208 0028 BD46     		mov	sp, r7
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 002a 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE1:
 214              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 215              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 216              		.align	2
 217              		.global	CapSense_InitializeAllBaselines
 218              		.thumb
 219              		.thumb_func
 220              		.type	CapSense_InitializeAllBaselines, %function
 221              	CapSense_InitializeAllBaselines:
 222              	.LFB2:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 9


 235:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 236:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 237:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 238:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 239:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 240:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 241:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 242:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 243:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 244:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 245:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 246:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 247:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 248:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 249:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 250:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 251:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 252:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 253:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 254:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 255:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 256:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 257:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 258:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 259:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 223              		.loc 1 259 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
 260:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 261:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 262:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 235              		.loc 1 263 0
 236 0006 0023     		movs	r3, #0
 237 0008 FB71     		strb	r3, [r7, #7]
 238 000a 06E0     		b	.L8
 239              	.L9:
 264:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 265:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 240              		.loc 1 265 0 discriminator 3
 241 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 242 000e 1846     		mov	r0, r3
 243 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 244              		.loc 1 263 0 discriminator 3
 245 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 246 0016 0133     		adds	r3, r3, #1
 247 0018 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 10


 248              	.L8:
 263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 249              		.loc 1 263 0 is_stmt 0 discriminator 1
 250 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 251 001c 062B     		cmp	r3, #6
 252 001e F5D9     		bls	.L9
 266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 267:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 253              		.loc 1 267 0 is_stmt 1
 254 0020 0837     		adds	r7, r7, #8
 255              		.cfi_def_cfa_offset 8
 256 0022 BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 0024 80BD     		pop	{r7, pc}
 260              		.cfi_endproc
 261              	.LFE2:
 262              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 263 0026 00BF     		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_InitializeEnabledBaselines
 266              		.thumb
 267              		.thumb_func
 268              		.type	CapSense_InitializeEnabledBaselines, %function
 269              	CapSense_InitializeEnabledBaselines:
 270              	.LFB3:
 268:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 269:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 270:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 271:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 272:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 273:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 274:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 275:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 276:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 277:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 278:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 279:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 280:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 281:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 282:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 283:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 284:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 285:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 286:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 287:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 288:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 289:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 292:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 271              		.loc 1 292 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275 0000 80B5     		push	{r7, lr}
 276              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 11


 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 82B0     		sub	sp, sp, #8
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 297:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 283              		.loc 1 297 0
 284 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 285              		.loc 1 298 0
 286 000a 00BF     		nop
 287              	.L11:
 288              		.loc 1 298 0 is_stmt 0 discriminator 1
 289 000c FFF7FEFF 		bl	CapSense_IsBusy
 290 0010 0346     		mov	r3, r0
 291 0012 002B     		cmp	r3, #0
 292 0014 FAD1     		bne	.L11
 299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 293              		.loc 1 303 0 is_stmt 1
 294 0016 0023     		movs	r3, #0
 295 0018 FB71     		strb	r3, [r7, #7]
 296 001a 1DE0     		b	.L12
 297              	.L14:
 304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 298              		.loc 1 305 0
 299 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 300 001e DB08     		lsrs	r3, r3, #3
 301 0020 BB71     		strb	r3, [r7, #6]
 306:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 302              		.loc 1 306 0
 303 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 304 0024 03F00703 		and	r3, r3, #7
 305 0028 0122     		movs	r2, #1
 306 002a 02FA03F3 		lsl	r3, r2, r3
 307 002e 7B71     		strb	r3, [r7, #5]
 307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 308              		.loc 1 309 0
 309 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 310 0032 0C4A     		ldr	r2, .L15
 311 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 312 0036 7B79     		ldrb	r3, [r7, #5]
 313 0038 1340     		ands	r3, r3, r2
 314 003a DBB2     		uxtb	r3, r3
 315 003c 002B     		cmp	r3, #0
 316 003e 04D1     		bne	.L13
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 12


 310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 317              		.loc 1 311 0
 318 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 319 0042 094A     		ldr	r2, .L15+4
 320 0044 0021     		movs	r1, #0
 321 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 322              	.L13:
 312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 313:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 314:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 323              		.loc 1 315 0 discriminator 2
 324 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 325 004c 1846     		mov	r0, r3
 326 004e FFF7FEFF 		bl	CapSense_BaseInit
 303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 327              		.loc 1 303 0 discriminator 2
 328 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 329 0054 0133     		adds	r3, r3, #1
 330 0056 FB71     		strb	r3, [r7, #7]
 331              	.L12:
 303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 332              		.loc 1 303 0 is_stmt 0 discriminator 1
 333 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 334 005a 062B     		cmp	r3, #6
 335 005c DED9     		bls	.L14
 316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 317:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 336              		.loc 1 317 0 is_stmt 1
 337 005e 0837     		adds	r7, r7, #8
 338              		.cfi_def_cfa_offset 8
 339 0060 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 0062 80BD     		pop	{r7, pc}
 343              	.L16:
 344              		.align	2
 345              	.L15:
 346 0064 00000000 		.word	CapSense_sensorEnableMask
 347 0068 00000000 		.word	CapSense_sensorRaw
 348              		.cfi_endproc
 349              	.LFE3:
 350              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 351              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 352              		.align	2
 353              		.global	CapSense_UpdateSensorBaseline
 354              		.thumb
 355              		.thumb_func
 356              		.type	CapSense_UpdateSensorBaseline, %function
 357              	CapSense_UpdateSensorBaseline:
 358              	.LFB4:
 318:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 319:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 320:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 321:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 322:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 13


 323:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 324:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 325:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 326:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 327:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 328:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 329:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 330:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 331:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 332:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 333:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 334:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 335:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 336:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 337:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 338:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 339:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 340:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 341:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 343:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 344:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 345:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 346:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 347:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 348:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 349:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 350:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 351:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 352:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 353:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 354:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 355:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 356:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 359:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 359              		.loc 1 359 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 24
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 86B0     		sub	sp, sp, #24
 368              		.cfi_def_cfa_offset 32
 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 0346     		mov	r3, r0
 372 0008 FB71     		strb	r3, [r7, #7]
 360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 373              		.loc 1 363 0
 374 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 14


 375 000c 494A     		ldr	r2, .L29
 376 000e D35C     		ldrb	r3, [r2, r3]
 377 0010 7B75     		strb	r3, [r7, #21]
 364:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 noiseThreshold = CapSense_noiseThreshold[widget];
 378              		.loc 1 364 0
 379 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 380 0014 484A     		ldr	r2, .L29+4
 381 0016 D35C     		ldrb	r3, [r2, r3]
 382 0018 3B75     		strb	r3, [r7, #20]
 365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 370:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 383              		.loc 1 372 0
 384 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 001c 474A     		ldr	r2, .L29+8
 386 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 387 0022 7B82     		strh	r3, [r7, #18]	@ movhi
 373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 384:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 388:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 389:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 390:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 392:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 393:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 394:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             
 396:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 397:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 398:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 400:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 401:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 402:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 404:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 405:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 406:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 15


 408:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 409:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 410:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 412:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 413:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 414:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 415:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 416:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 417:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 418:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 419:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 388              		.loc 1 419 0
 389 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 390 0026 464A     		ldr	r2, .L29+12
 391 0028 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 392 002c 7A8A     		ldrh	r2, [r7, #18]
 393 002e 9A42     		cmp	r2, r3
 394 0030 09D3     		bcc	.L18
 420:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 421:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 395              		.loc 1 421 0
 396 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 397 0034 424A     		ldr	r2, .L29+12
 398 0036 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 399 003a 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 400 003c D31A     		subs	r3, r2, r3
 401 003e FB82     		strh	r3, [r7, #22]	@ movhi
 422:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 402              		.loc 1 422 0
 403 0040 0123     		movs	r3, #1
 404 0042 7B75     		strb	r3, [r7, #21]
 405 0044 08E0     		b	.L19
 406              	.L18:
 423:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 424:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 425:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 426:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 407              		.loc 1 426 0
 408 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 409 0048 3D4A     		ldr	r2, .L29+12
 410 004a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 411 004e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 412 0050 D31A     		subs	r3, r2, r3
 413 0052 FB82     		strh	r3, [r7, #22]	@ movhi
 427:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 414              		.loc 1 427 0
 415 0054 0023     		movs	r3, #0
 416 0056 7B75     		strb	r3, [r7, #21]
 417              	.L19:
 428:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 429:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 430:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 418              		.loc 1 430 0
 419 0058 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 420 005a 002B     		cmp	r3, #0
 421 005c 18D1     		bne	.L20
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 16


 422              		.loc 1 430 0 is_stmt 0 discriminator 1
 423 005e FB8A     		ldrh	r3, [r7, #22]
 424 0060 142B     		cmp	r3, #20
 425 0062 15D9     		bls	.L20
 431:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 426              		.loc 1 432 0 is_stmt 1
 427 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 428 0066 374A     		ldr	r2, .L29+16
 429 0068 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 430 006a 042B     		cmp	r3, #4
 431 006c 08D9     		bls	.L21
 433:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 434:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 432              		.loc 1 434 0
 433 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434 0070 1846     		mov	r0, r3
 435 0072 FFF7FEFF 		bl	CapSense_BaseInit
 435:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 436              		.loc 1 435 0
 437 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 0078 324A     		ldr	r2, .L29+16
 439 007a 0021     		movs	r1, #0
 440 007c D154     		strb	r1, [r2, r3]
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 441              		.loc 1 432 0
 442 007e 3BE0     		b	.L23
 443              	.L21:
 436:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 437:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 438:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 439:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 444              		.loc 1 439 0
 445 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 446 0082 304A     		ldr	r2, .L29+16
 447 0084 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 448 0086 0132     		adds	r2, r2, #1
 449 0088 D1B2     		uxtb	r1, r2
 450 008a 2E4A     		ldr	r2, .L29+16
 451 008c D154     		strb	r1, [r2, r3]
 432:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 452              		.loc 1 432 0
 453 008e 33E0     		b	.L23
 454              	.L20:
 440:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 441:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 442:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 443:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 444:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 445:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 446:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 455              		.loc 1 446 0
 456 0090 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 457 0092 9BB2     		uxth	r3, r3
 458 0094 FA8A     		ldrh	r2, [r7, #22]
 459 0096 9A42     		cmp	r2, r3
 460 0098 05D9     		bls	.L24
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 17


 461              		.loc 1 446 0 is_stmt 0 discriminator 1
 462 009a FB8A     		ldrh	r3, [r7, #22]
 463 009c 132B     		cmp	r3, #19
 464 009e 2BD8     		bhi	.L23
 447:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 448:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 465              		.loc 1 448 0 is_stmt 1
 466 00a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 467 00a2 002B     		cmp	r3, #0
 468 00a4 28D1     		bne	.L23
 469              	.L24:
 449:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 450:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 451:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 452:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 470              		.loc 1 452 0
 471 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 472 00a8 254A     		ldr	r2, .L29+12
 473 00aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 474 00ae 1B02     		lsls	r3, r3, #8
 475 00b0 FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 476              		.loc 1 453 0
 477 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 478 00b4 244A     		ldr	r2, .L29+20
 479 00b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 480 00b8 1A46     		mov	r2, r3
 481 00ba FB68     		ldr	r3, [r7, #12]
 482 00bc 1343     		orrs	r3, r3, r2
 483 00be FB60     		str	r3, [r7, #12]
 454:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 455:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 456:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 484              		.loc 1 456 0
 485 00c0 7B8A     		ldrh	r3, [r7, #18]
 486 00c2 FA68     		ldr	r2, [r7, #12]
 487 00c4 1344     		add	r3, r3, r2
 488 00c6 FB60     		str	r3, [r7, #12]
 457:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 458:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 459:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 489              		.loc 1 459 0
 490 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 491 00ca 1D4A     		ldr	r2, .L29+12
 492 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 493 00d0 1A46     		mov	r2, r3
 494 00d2 FB68     		ldr	r3, [r7, #12]
 495 00d4 9B1A     		subs	r3, r3, r2
 496 00d6 FB60     		str	r3, [r7, #12]
 460:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 461:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 462:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 497              		.loc 1 462 0
 498 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 499 00da FA68     		ldr	r2, [r7, #12]
 500 00dc 120A     		lsrs	r2, r2, #8
 501 00de 91B2     		uxth	r1, r2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 18


 502 00e0 174A     		ldr	r2, .L29+12
 503 00e2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 463:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 504              		.loc 1 463 0
 505 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 506 00e8 FA68     		ldr	r2, [r7, #12]
 507 00ea D1B2     		uxtb	r1, r2
 508 00ec 164A     		ldr	r2, .L29+20
 509 00ee D154     		strb	r1, [r2, r3]
 464:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 465:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 510              		.loc 1 465 0
 511 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 512 00f2 144A     		ldr	r2, .L29+16
 513 00f4 0021     		movs	r1, #0
 514 00f6 D154     		strb	r1, [r2, r3]
 515              	.L23:
 466:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 467:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 468:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 469:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 470:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 471:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 472:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 516              		.loc 1 472 0
 517 00f8 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 518 00fa 9BB2     		uxth	r3, r3
 519 00fc FA8A     		ldrh	r2, [r7, #22]
 520 00fe 9A42     		cmp	r2, r3
 521 0100 10D9     		bls	.L25
 522              		.loc 1 472 0 is_stmt 0 discriminator 1
 523 0102 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 524 0104 002B     		cmp	r3, #0
 525 0106 0DD0     		beq	.L25
 473:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 474:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 475:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 526              		.loc 1 476 0 is_stmt 1
 527 0108 FB8A     		ldrh	r3, [r7, #22]
 528 010a FF2B     		cmp	r3, #255
 529 010c 04D9     		bls	.L26
 477:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 478:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 530              		.loc 1 478 0
 531 010e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 532 0110 0E4A     		ldr	r2, .L29+24
 533 0112 FF21     		movs	r1, #255
 534 0114 D154     		strb	r1, [r2, r3]
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 535              		.loc 1 476 0
 536 0116 09E0     		b	.L17
 537              	.L26:
 479:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 480:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 481:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 482:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 19


 538              		.loc 1 482 0
 539 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 540 011a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 541 011c D1B2     		uxtb	r1, r2
 542 011e 0B4A     		ldr	r2, .L29+24
 543 0120 D154     		strb	r1, [r2, r3]
 476:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 544              		.loc 1 476 0
 545 0122 03E0     		b	.L17
 546              	.L25:
 483:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 484:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 485:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 486:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 487:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 488:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 489:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 490:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 491:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 547              		.loc 1 491 0
 548 0124 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 549 0126 094A     		ldr	r2, .L29+24
 550 0128 0021     		movs	r1, #0
 551 012a D154     		strb	r1, [r2, r3]
 552              	.L17:
 492:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 493:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 494:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 495:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 496:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 497:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 498:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 553              		.loc 1 498 0
 554 012c 1837     		adds	r7, r7, #24
 555              		.cfi_def_cfa_offset 8
 556 012e BD46     		mov	sp, r7
 557              		.cfi_def_cfa_register 13
 558              		@ sp needed
 559 0130 80BD     		pop	{r7, pc}
 560              	.L30:
 561 0132 00BF     		.align	2
 562              	.L29:
 563 0134 00000000 		.word	CapSense_widgetNumber
 564 0138 00000000 		.word	CapSense_noiseThreshold
 565 013c 00000000 		.word	CapSense_sensorRaw
 566 0140 00000000 		.word	CapSense_sensorBaseline
 567 0144 00000000 		.word	CapSense_lowBaselineResetCnt
 568 0148 00000000 		.word	CapSense_sensorBaselineLow
 569 014c 00000000 		.word	CapSense_sensorSignal
 570              		.cfi_endproc
 571              	.LFE4:
 572              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 573              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 574              		.align	2
 575              		.global	CapSense_UpdateEnabledBaselines
 576              		.thumb
 577              		.thumb_func
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 20


 578              		.type	CapSense_UpdateEnabledBaselines, %function
 579              	CapSense_UpdateEnabledBaselines:
 580              	.LFB5:
 499:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 500:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 501:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 502:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 503:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 504:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 505:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 506:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 507:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 508:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 509:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 510:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 511:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 512:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 513:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 514:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 515:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 516:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 517:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 518:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 519:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 520:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 521:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 522:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 523:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 524:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 525:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 526:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 527:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 528:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 529:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 530:.\Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 531:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 532:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 581              		.loc 1 532 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585 0000 80B5     		push	{r7, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 82B0     		sub	sp, sp, #8
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 533:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 534:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 535:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 536:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 593              		.loc 1 537 0
 594 0006 0023     		movs	r3, #0
 595 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 21


 596 000a 18E0     		b	.L32
 597              	.L34:
 538:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 539:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 598              		.loc 1 539 0
 599 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 600 000e DB08     		lsrs	r3, r3, #3
 601 0010 BB71     		strb	r3, [r7, #6]
 540:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 602              		.loc 1 540 0
 603 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 604 0014 03F00703 		and	r3, r3, #7
 605 0018 0122     		movs	r2, #1
 606 001a 02FA03F3 		lsl	r3, r2, r3
 607 001e 7B71     		strb	r3, [r7, #5]
 541:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 608              		.loc 1 541 0
 609 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 610 0022 0A4A     		ldr	r2, .L35
 611 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 612 0026 7B79     		ldrb	r3, [r7, #5]
 613 0028 1340     		ands	r3, r3, r2
 614 002a DBB2     		uxtb	r3, r3
 615 002c 002B     		cmp	r3, #0
 616 002e 03D0     		beq	.L33
 542:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 543:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 617              		.loc 1 543 0
 618 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 619 0032 1846     		mov	r0, r3
 620 0034 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 621              	.L33:
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 622              		.loc 1 537 0 discriminator 2
 623 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 624 003a 0133     		adds	r3, r3, #1
 625 003c FB71     		strb	r3, [r7, #7]
 626              	.L32:
 537:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 627              		.loc 1 537 0 is_stmt 0 discriminator 1
 628 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 629 0040 062B     		cmp	r3, #6
 630 0042 E3D9     		bls	.L34
 544:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 545:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 546:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 631              		.loc 1 546 0 is_stmt 1
 632 0044 0837     		adds	r7, r7, #8
 633              		.cfi_def_cfa_offset 8
 634 0046 BD46     		mov	sp, r7
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 0048 80BD     		pop	{r7, pc}
 638              	.L36:
 639 004a 00BF     		.align	2
 640              	.L35:
 641 004c 00000000 		.word	CapSense_sensorEnableMask
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 22


 642              		.cfi_endproc
 643              	.LFE5:
 644              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 645              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 646              		.align	2
 647              		.global	CapSense_CheckIsSensorActive
 648              		.thumb
 649              		.thumb_func
 650              		.type	CapSense_CheckIsSensorActive, %function
 651              	CapSense_CheckIsSensorActive:
 652              	.LFB6:
 547:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 548:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 549:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 550:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 551:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 552:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 553:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 554:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 555:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 556:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 557:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 558:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 559:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 560:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 561:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 562:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 563:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 564:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 565:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 566:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 567:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 568:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 569:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 570:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 571:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 572:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 573:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 574:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 575:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 576:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 577:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 578:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 579:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 580:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 581:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 582:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 583:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 584:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 585:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 586:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 587:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 588:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 589:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 590:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 653              		.loc 1 590 0
 654              		.cfi_startproc
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 23


 655              		@ args = 0, pretend = 0, frame = 16
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658 0000 80B4     		push	{r7}
 659              		.cfi_def_cfa_offset 4
 660              		.cfi_offset 7, -4
 661 0002 85B0     		sub	sp, sp, #20
 662              		.cfi_def_cfa_offset 24
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 665 0006 0346     		mov	r3, r0
 666 0008 FB71     		strb	r3, [r7, #7]
 591:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 592:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 593:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 667              		.loc 1 593 0
 668 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 669 000c DB08     		lsrs	r3, r3, #3
 670 000e BB73     		strb	r3, [r7, #14]
 594:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 671              		.loc 1 594 0
 672 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 673 0012 03F00703 		and	r3, r3, #7
 674 0016 0122     		movs	r2, #1
 675 0018 02FA03F3 		lsl	r3, r2, r3
 676 001c 7B73     		strb	r3, [r7, #13]
 595:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 596:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 677              		.loc 1 596 0
 678 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 679 0020 384A     		ldr	r2, .L48
 680 0022 D35C     		ldrb	r3, [r2, r3]
 681 0024 3B73     		strb	r3, [r7, #12]
 597:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 fingerThreshold = CapSense_fingerThreshold[widget];
 682              		.loc 1 597 0
 683 0026 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 684 0028 374A     		ldr	r2, .L48+4
 685 002a D35C     		ldrb	r3, [r2, r3]
 686 002c FB72     		strb	r3, [r7, #11]
 598:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 hysteresis = CapSense_hysteresis[widget];
 687              		.loc 1 598 0
 688 002e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 689 0030 364A     		ldr	r2, .L48+8
 690 0032 D35C     		ldrb	r3, [r2, r3]
 691 0034 BB72     		strb	r3, [r7, #10]
 599:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 692              		.loc 1 599 0
 693 0036 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 694 0038 354A     		ldr	r2, .L48+12
 695 003a D35C     		ldrb	r3, [r2, r3]
 696 003c 7B72     		strb	r3, [r7, #9]
 600:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 601:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 697              		.loc 1 601 0
 698 003e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 699 0040 002B     		cmp	r3, #0
 700 0042 06D1     		bne	.L38
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 24


 602:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 603:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
 701              		.loc 1 603 0
 702 0044 0223     		movs	r3, #2
 703 0046 FB73     		strb	r3, [r7, #15]
 604:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 704              		.loc 1 604 0
 705 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 706 004a 324A     		ldr	r2, .L48+16
 707 004c 0121     		movs	r1, #1
 708 004e D154     		strb	r1, [r2, r3]
 709 0050 02E0     		b	.L39
 710              	.L38:
 605:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 606:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 607:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 608:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1);
 711              		.loc 1 608 0
 712 0052 3B7B     		ldrb	r3, [r7, #12]
 713 0054 013B     		subs	r3, r3, #1
 714 0056 FB73     		strb	r3, [r7, #15]
 715              	.L39:
 609:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 610:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 611:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 612:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 613:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 716              		.loc 1 613 0
 717 0058 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 718 005a 2F4A     		ldr	r2, .L48+20
 719 005c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 720 005e 7B7B     		ldrb	r3, [r7, #13]
 721 0060 1340     		ands	r3, r3, r2
 722 0062 DBB2     		uxtb	r3, r3
 723 0064 002B     		cmp	r3, #0
 724 0066 18D0     		beq	.L40
 614:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 615:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 616:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 725              		.loc 1 616 0
 726 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 727 006a 2C4A     		ldr	r2, .L48+24
 728 006c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 729 006e 1946     		mov	r1, r3
 730 0070 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 731 0072 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 732 0074 D31A     		subs	r3, r2, r3
 733 0076 9942     		cmp	r1, r3
 734 0078 32DA     		bge	.L42
 617:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 618:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 735              		.loc 1 618 0
 736 007a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 737 007c BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 738 007e 2649     		ldr	r1, .L48+20
 739 0080 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 740 0082 7A7B     		ldrb	r2, [r7, #13]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 25


 741 0084 D243     		mvns	r2, r2
 742 0086 D2B2     		uxtb	r2, r2
 743 0088 0A40     		ands	r2, r2, r1
 744 008a D1B2     		uxtb	r1, r2
 745 008c 224A     		ldr	r2, .L48+20
 746 008e D154     		strb	r1, [r2, r3]
 619:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 747              		.loc 1 619 0
 748 0090 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 749 0092 2049     		ldr	r1, .L48+16
 750 0094 7A7A     		ldrb	r2, [r7, #9]
 751 0096 CA54     		strb	r2, [r1, r3]
 752 0098 22E0     		b	.L42
 753              	.L40:
 620:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 621:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 622:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 623:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 624:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 625:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 754              		.loc 1 625 0
 755 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 756 009c 1F4A     		ldr	r2, .L48+24
 757 009e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 758 00a0 1946     		mov	r1, r3
 759 00a2 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 760 00a4 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 761 00a6 1344     		add	r3, r3, r2
 762 00a8 9942     		cmp	r1, r3
 763 00aa 15DD     		ble	.L43
 626:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 627:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 628:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 764              		.loc 1 628 0
 765 00ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 766 00ae 194A     		ldr	r2, .L48+16
 767 00b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 768 00b2 012B     		cmp	r3, #1
 769 00b4 08D8     		bhi	.L44
 629:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 630:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 770              		.loc 1 630 0
 771 00b6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 772 00b8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 773 00ba 1749     		ldr	r1, .L48+20
 774 00bc 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 775 00be 7A7B     		ldrb	r2, [r7, #13]
 776 00c0 0A43     		orrs	r2, r2, r1
 777 00c2 D1B2     		uxtb	r1, r2
 778 00c4 144A     		ldr	r2, .L48+20
 779 00c6 D154     		strb	r1, [r2, r3]
 780              	.L44:
 631:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 632:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 781              		.loc 1 632 0
 782 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 783 00ca 124A     		ldr	r2, .L48+16
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 26


 784 00cc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 785 00ce 013A     		subs	r2, r2, #1
 786 00d0 D1B2     		uxtb	r1, r2
 787 00d2 104A     		ldr	r2, .L48+16
 788 00d4 D154     		strb	r1, [r2, r3]
 789 00d6 03E0     		b	.L42
 790              	.L43:
 633:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 634:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 635:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 636:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 637:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 791              		.loc 1 637 0
 792 00d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 793 00da 0E49     		ldr	r1, .L48+16
 794 00dc 7A7A     		ldrb	r2, [r7, #9]
 795 00de CA54     		strb	r2, [r1, r3]
 796              	.L42:
 638:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 639:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 640:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 641:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 797              		.loc 1 641 0
 798 00e0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 799 00e2 0D4A     		ldr	r2, .L48+20
 800 00e4 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 801 00e6 7B7B     		ldrb	r3, [r7, #13]
 802 00e8 1340     		ands	r3, r3, r2
 803 00ea DBB2     		uxtb	r3, r3
 804 00ec 002B     		cmp	r3, #0
 805 00ee 01D0     		beq	.L45
 806              		.loc 1 641 0 is_stmt 0 discriminator 1
 807 00f0 0123     		movs	r3, #1
 808 00f2 00E0     		b	.L46
 809              	.L45:
 810              		.loc 1 641 0 discriminator 2
 811 00f4 0023     		movs	r3, #0
 812              	.L46:
 642:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 813              		.loc 1 642 0 is_stmt 1 discriminator 4
 814 00f6 1846     		mov	r0, r3
 815 00f8 1437     		adds	r7, r7, #20
 816              		.cfi_def_cfa_offset 4
 817 00fa BD46     		mov	sp, r7
 818              		.cfi_def_cfa_register 13
 819              		@ sp needed
 820 00fc 5DF8047B 		ldr	r7, [sp], #4
 821              		.cfi_restore 7
 822              		.cfi_def_cfa_offset 0
 823 0100 7047     		bx	lr
 824              	.L49:
 825 0102 00BF     		.align	2
 826              	.L48:
 827 0104 00000000 		.word	CapSense_widgetNumber
 828 0108 00000000 		.word	CapSense_fingerThreshold
 829 010c 00000000 		.word	CapSense_hysteresis
 830 0110 00000000 		.word	CapSense_debounce
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 27


 831 0114 00000000 		.word	CapSense_debounceCounter
 832 0118 00000000 		.word	CapSense_sensorOnMask
 833 011c 00000000 		.word	CapSense_sensorSignal
 834              		.cfi_endproc
 835              	.LFE6:
 836              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 837              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 838              		.align	2
 839              		.global	CapSense_CheckIsWidgetActive
 840              		.thumb
 841              		.thumb_func
 842              		.type	CapSense_CheckIsWidgetActive, %function
 843              	CapSense_CheckIsWidgetActive:
 844              	.LFB7:
 643:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 644:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 645:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 646:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 647:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 648:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 649:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 650:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 651:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 652:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 653:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 654:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 655:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 656:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 657:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 658:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 659:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 660:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 661:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 662:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 663:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 664:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 665:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 666:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 667:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 668:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 669:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 670:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 845              		.loc 1 670 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 16
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 84B0     		sub	sp, sp, #16
 854              		.cfi_def_cfa_offset 24
 855 0004 00AF     		add	r7, sp, #0
 856              		.cfi_def_cfa_register 7
 857 0006 0346     		mov	r3, r0
 858 0008 FB71     		strb	r3, [r7, #7]
 671:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 28


 859              		.loc 1 671 0
 860 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 861 000c 0F4A     		ldr	r2, .L54
 862 000e D35C     		ldrb	r3, [r2, r3]
 863 0010 FB73     		strb	r3, [r7, #15]
 672:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 864              		.loc 1 672 0
 865 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 866 0014 0E4A     		ldr	r2, .L54+4
 867 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 868 0018 FB7B     		ldrb	r3, [r7, #15]
 869 001a 1344     		add	r3, r3, r2
 870 001c 7B73     		strb	r3, [r7, #13]
 673:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 871              		.loc 1 673 0
 872 001e 0023     		movs	r3, #0
 873 0020 BB73     		strb	r3, [r7, #14]
 874              	.L52:
 674:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 675:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 676:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 677:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 678:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 875              		.loc 1 678 0
 876 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 877 0024 1846     		mov	r0, r3
 878 0026 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 879 002a 0346     		mov	r3, r0
 880 002c 002B     		cmp	r3, #0
 881 002e 01D0     		beq	.L51
 679:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 680:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 882              		.loc 1 680 0
 883 0030 0123     		movs	r3, #1
 884 0032 BB73     		strb	r3, [r7, #14]
 885              	.L51:
 681:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 682:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 886              		.loc 1 682 0
 887 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 888 0036 0133     		adds	r3, r3, #1
 889 0038 FB73     		strb	r3, [r7, #15]
 683:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 684:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 890              		.loc 1 684 0
 891 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 892 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 893 003e 9A42     		cmp	r2, r3
 894 0040 EFD3     		bcc	.L52
 685:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 686:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 687:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 688:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 895              		.loc 1 688 0
 896 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 689:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 897              		.loc 1 689 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 29


 898 0044 1846     		mov	r0, r3
 899 0046 1037     		adds	r7, r7, #16
 900              		.cfi_def_cfa_offset 8
 901 0048 BD46     		mov	sp, r7
 902              		.cfi_def_cfa_register 13
 903              		@ sp needed
 904 004a 80BD     		pop	{r7, pc}
 905              	.L55:
 906              		.align	2
 907              	.L54:
 908 004c 00000000 		.word	CapSense_rawDataIndex
 909 0050 00000000 		.word	CapSense_numberOfSensors
 910              		.cfi_endproc
 911              	.LFE7:
 912              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 913              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 914              		.align	2
 915              		.global	CapSense_CheckIsAnyWidgetActive
 916              		.thumb
 917              		.thumb_func
 918              		.type	CapSense_CheckIsAnyWidgetActive, %function
 919              	CapSense_CheckIsAnyWidgetActive:
 920              	.LFB8:
 690:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 691:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 692:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 693:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 694:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 695:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 696:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 697:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 698:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 699:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 700:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 701:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 702:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 703:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 704:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 705:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 706:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 707:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 708:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 709:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 710:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 711:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 712:.\Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 713:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 714:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 921              		.loc 1 714 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 8
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925 0000 80B5     		push	{r7, lr}
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 30


 930              		.cfi_def_cfa_offset 16
 931 0004 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 716:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 933              		.loc 1 716 0
 934 0006 0023     		movs	r3, #0
 935 0008 BB71     		strb	r3, [r7, #6]
 717:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 936              		.loc 1 718 0
 937 000a 0023     		movs	r3, #0
 938 000c FB71     		strb	r3, [r7, #7]
 939 000e 0BE0     		b	.L57
 940              	.L59:
 719:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 720:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 941              		.loc 1 720 0
 942 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 943 0012 1846     		mov	r0, r3
 944 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 945 0018 0346     		mov	r3, r0
 946 001a 002B     		cmp	r3, #0
 947 001c 01D0     		beq	.L58
 721:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 722:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 948              		.loc 1 722 0
 949 001e 0123     		movs	r3, #1
 950 0020 BB71     		strb	r3, [r7, #6]
 951              	.L58:
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 952              		.loc 1 718 0 discriminator 2
 953 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 954 0024 0133     		adds	r3, r3, #1
 955 0026 FB71     		strb	r3, [r7, #7]
 956              	.L57:
 718:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 957              		.loc 1 718 0 is_stmt 0 discriminator 1
 958 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 959 002a 022B     		cmp	r3, #2
 960 002c F0D9     		bls	.L59
 723:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 724:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 725:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 726:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 727:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 961              		.loc 1 727 0 is_stmt 1
 962 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 728:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 963              		.loc 1 728 0
 964 0030 1846     		mov	r0, r3
 965 0032 0837     		adds	r7, r7, #8
 966              		.cfi_def_cfa_offset 8
 967 0034 BD46     		mov	sp, r7
 968              		.cfi_def_cfa_register 13
 969              		@ sp needed
 970 0036 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 31


 971              		.cfi_endproc
 972              	.LFE8:
 973              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 974              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 975              		.align	2
 976              		.global	CapSense_EnableWidget
 977              		.thumb
 978              		.thumb_func
 979              		.type	CapSense_EnableWidget, %function
 980              	CapSense_EnableWidget:
 981              	.LFB9:
 729:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 730:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 731:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 732:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 733:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 734:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 735:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 736:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 737:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 738:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 739:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 740:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 741:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 742:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 743:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 744:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 745:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 746:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 747:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 748:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 749:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 750:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 751:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 752:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 753:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 754:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 755:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 756:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 757:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 758:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 759:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 760:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 982              		.loc 1 760 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 16
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986              		@ link register save eliminated.
 987 0000 80B4     		push	{r7}
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 7, -4
 990 0002 85B0     		sub	sp, sp, #20
 991              		.cfi_def_cfa_offset 24
 992 0004 00AF     		add	r7, sp, #0
 993              		.cfi_def_cfa_register 7
 994 0006 0346     		mov	r3, r0
 995 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 32


 761:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 762:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 763:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 996              		.loc 1 763 0
 997 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 000c 134A     		ldr	r2, .L63
 999 000e D35C     		ldrb	r3, [r2, r3]
 1000 0010 FB73     		strb	r3, [r7, #15]
 764:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1001              		.loc 1 764 0
 1002 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1003 0014 124A     		ldr	r2, .L63+4
 1004 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1005 0018 FB7B     		ldrb	r3, [r7, #15]
 1006 001a 1344     		add	r3, r3, r2
 1007 001c BB73     		strb	r3, [r7, #14]
 1008              	.L62:
 765:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 766:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 767:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 768:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 769:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1009              		.loc 1 769 0 discriminator 1
 1010 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1011 0020 DB08     		lsrs	r3, r3, #3
 1012 0022 7B73     		strb	r3, [r7, #13]
 770:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1013              		.loc 1 770 0 discriminator 1
 1014 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1015 0026 03F00703 		and	r3, r3, #7
 1016 002a 0122     		movs	r2, #1
 1017 002c 02FA03F3 		lsl	r3, r2, r3
 1018 0030 3B73     		strb	r3, [r7, #12]
 771:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 772:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 1019              		.loc 1 772 0 discriminator 1
 1020 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1021 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1022 0036 0B49     		ldr	r1, .L63+8
 1023 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1024 003a 3A7B     		ldrb	r2, [r7, #12]
 1025 003c 0A43     		orrs	r2, r2, r1
 1026 003e D1B2     		uxtb	r1, r2
 1027 0040 084A     		ldr	r2, .L63+8
 1028 0042 D154     		strb	r1, [r2, r3]
 773:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1029              		.loc 1 773 0 discriminator 1
 1030 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1031 0046 0133     		adds	r3, r3, #1
 1032 0048 FB73     		strb	r3, [r7, #15]
 774:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 775:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1033              		.loc 1 775 0 discriminator 1
 1034 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1035 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1036 004e 9A42     		cmp	r2, r3
 1037 0050 E5D3     		bcc	.L62
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 33


 776:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 777:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 778:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1038              		.loc 1 778 0
 1039 0052 1437     		adds	r7, r7, #20
 1040              		.cfi_def_cfa_offset 4
 1041 0054 BD46     		mov	sp, r7
 1042              		.cfi_def_cfa_register 13
 1043              		@ sp needed
 1044 0056 5DF8047B 		ldr	r7, [sp], #4
 1045              		.cfi_restore 7
 1046              		.cfi_def_cfa_offset 0
 1047 005a 7047     		bx	lr
 1048              	.L64:
 1049              		.align	2
 1050              	.L63:
 1051 005c 00000000 		.word	CapSense_rawDataIndex
 1052 0060 00000000 		.word	CapSense_numberOfSensors
 1053 0064 00000000 		.word	CapSense_sensorEnableMask
 1054              		.cfi_endproc
 1055              	.LFE9:
 1056              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1057              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1058              		.align	2
 1059              		.global	CapSense_DisableWidget
 1060              		.thumb
 1061              		.thumb_func
 1062              		.type	CapSense_DisableWidget, %function
 1063              	CapSense_DisableWidget:
 1064              	.LFB10:
 779:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 780:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 781:.\Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 782:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 783:.\Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 784:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 785:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 786:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 787:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 788:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 789:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 790:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 791:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 792:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 793:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 794:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 795:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 796:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 797:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 798:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 799:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 800:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 801:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 802:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 803:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 804:.\Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 805:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 34


 806:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *
 807:.\Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 808:.\Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 809:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 810:.\Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1065              		.loc 1 810 0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 16
 1068              		@ frame_needed = 1, uses_anonymous_args = 0
 1069              		@ link register save eliminated.
 1070 0000 80B4     		push	{r7}
 1071              		.cfi_def_cfa_offset 4
 1072              		.cfi_offset 7, -4
 1073 0002 85B0     		sub	sp, sp, #20
 1074              		.cfi_def_cfa_offset 24
 1075 0004 00AF     		add	r7, sp, #0
 1076              		.cfi_def_cfa_register 7
 1077 0006 0346     		mov	r3, r0
 1078 0008 FB71     		strb	r3, [r7, #7]
 811:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 812:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 813:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1079              		.loc 1 813 0
 1080 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1081 000c 144A     		ldr	r2, .L67
 1082 000e D35C     		ldrb	r3, [r2, r3]
 1083 0010 FB73     		strb	r3, [r7, #15]
 814:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1084              		.loc 1 814 0
 1085 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1086 0014 134A     		ldr	r2, .L67+4
 1087 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1088 0018 FB7B     		ldrb	r3, [r7, #15]
 1089 001a 1344     		add	r3, r3, r2
 1090 001c BB73     		strb	r3, [r7, #14]
 1091              	.L66:
 815:.\Generated_Source\PSoC5/CapSense_CSHL.c ****    
 816:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 817:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 818:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 819:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1092              		.loc 1 819 0 discriminator 1
 1093 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1094 0020 DB08     		lsrs	r3, r3, #3
 1095 0022 7B73     		strb	r3, [r7, #13]
 820:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1096              		.loc 1 820 0 discriminator 1
 1097 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1098 0026 03F00703 		and	r3, r3, #7
 1099 002a 0122     		movs	r2, #1
 1100 002c 02FA03F3 		lsl	r3, r2, r3
 1101 0030 3B73     		strb	r3, [r7, #12]
 821:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
 822:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 1102              		.loc 1 822 0 discriminator 1
 1103 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1104 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 35


 1105 0036 0C49     		ldr	r1, .L67+8
 1106 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1107 003a 3A7B     		ldrb	r2, [r7, #12]
 1108 003c D243     		mvns	r2, r2
 1109 003e D2B2     		uxtb	r2, r2
 1110 0040 0A40     		ands	r2, r2, r1
 1111 0042 D1B2     		uxtb	r1, r2
 1112 0044 084A     		ldr	r2, .L67+8
 1113 0046 D154     		strb	r1, [r2, r3]
 823:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1114              		.loc 1 823 0 discriminator 1
 1115 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1116 004a 0133     		adds	r3, r3, #1
 1117 004c FB73     		strb	r3, [r7, #15]
 824:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 825:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1118              		.loc 1 825 0 discriminator 1
 1119 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1120 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1121 0052 9A42     		cmp	r2, r3
 1122 0054 E3D3     		bcc	.L66
 826:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 827:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 828:.\Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1123              		.loc 1 828 0
 1124 0056 1437     		adds	r7, r7, #20
 1125              		.cfi_def_cfa_offset 4
 1126 0058 BD46     		mov	sp, r7
 1127              		.cfi_def_cfa_register 13
 1128              		@ sp needed
 1129 005a 5DF8047B 		ldr	r7, [sp], #4
 1130              		.cfi_restore 7
 1131              		.cfi_def_cfa_offset 0
 1132 005e 7047     		bx	lr
 1133              	.L68:
 1134              		.align	2
 1135              	.L67:
 1136 0060 00000000 		.word	CapSense_rawDataIndex
 1137 0064 00000000 		.word	CapSense_numberOfSensors
 1138 0068 00000000 		.word	CapSense_sensorEnableMask
 1139              		.cfi_endproc
 1140              	.LFE10:
 1141              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1142              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1143              		.align	2
 1144              		.global	CapSense_FindMaximum
 1145              		.thumb
 1146              		.thumb_func
 1147              		.type	CapSense_FindMaximum, %function
 1148              	CapSense_FindMaximum:
 1149              	.LFB11:
 829:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 830:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 831:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 832:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 833:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 834:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 36


 835:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 836:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 837:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 838:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 839:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 840:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 841:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 842:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 843:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 844:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_sensorSignal[] array.
 845:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 846:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 847:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 848:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 849:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 850:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 851:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 852:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 853:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 854:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 855:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 CY
 856:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 857:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 858:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 859:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 860:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 861:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1150              		.loc 1 861 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 16
 1153              		@ frame_needed = 1, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
 1155 0000 80B4     		push	{r7}
 1156              		.cfi_def_cfa_offset 4
 1157              		.cfi_offset 7, -4
 1158 0002 85B0     		sub	sp, sp, #20
 1159              		.cfi_def_cfa_offset 24
 1160 0004 00AF     		add	r7, sp, #0
 1161              		.cfi_def_cfa_register 7
 1162 0006 0346     		mov	r3, r0
 1163 0008 FB71     		strb	r3, [r7, #7]
 1164 000a 0B46     		mov	r3, r1
 1165 000c BB71     		strb	r3, [r7, #6]
 1166 000e 1346     		mov	r3, r2
 1167 0010 7B71     		strb	r3, [r7, #5]
 862:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 863:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 864:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 865:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 866:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 867:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 868:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 869:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 870:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 871:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 872:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 1168              		.loc 1 872 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 37


 1169 0012 FF23     		movs	r3, #255
 1170 0014 BB73     		strb	r3, [r7, #14]
 873:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 temp = 0u;
 1171              		.loc 1 873 0
 1172 0016 0023     		movs	r3, #0
 1173 0018 7B73     		strb	r3, [r7, #13]
 874:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset]; 
 1174              		.loc 1 874 0
 1175 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1176 001c 144A     		ldr	r2, .L74
 1177 001e 1344     		add	r3, r3, r2
 1178 0020 BB60     		str	r3, [r7, #8]
 875:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 876:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 877:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 878:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 879:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 880:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 881:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 882:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 883:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 884:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 885:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 886:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 887:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 888:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 889:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 890:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 891:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 892:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 893:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 894:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 895:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 896:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 897:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 898:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 899:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 900:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 901:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
 902:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 903:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 904:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 905:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 906:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 907:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 908:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 909:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 910:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 911:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 912:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 913:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 914:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 915:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 916:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 917:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
 918:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 919:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 38


 920:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 921:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 922:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 923:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 924:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 925:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 926:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 927:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 928:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 929:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 930:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 931:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 932:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 933:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 934:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 935:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 936:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 937:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
 938:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 939:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 940:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 941:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 942:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 943:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
 944:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 945:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 946:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 947:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
 948:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 949:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 950:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 951:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 952:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 953:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 954:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 955:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
 956:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 957:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 958:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
 959:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
 960:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 961:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 962:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 963:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 964:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
 965:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
 966:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 967:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 968:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 969:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
 970:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1179              		.loc 1 971 0
 1180 0022 0023     		movs	r3, #0
 1181 0024 FB73     		strb	r3, [r7, #15]
 1182 0026 17E0     		b	.L70
 1183              	.L72:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 39


 972:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 973:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
 974:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1184              		.loc 1 974 0
 1185 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1186 002a BA68     		ldr	r2, [r7, #8]
 1187 002c 1344     		add	r3, r3, r2
 1188 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1189 0030 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1190 0032 9A42     		cmp	r2, r3
 1191 0034 0DD2     		bcs	.L71
 975:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 976:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1192              		.loc 1 976 0
 1193 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1194 0038 BA68     		ldr	r2, [r7, #8]
 1195 003a 1344     		add	r3, r3, r2
 1196 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1197 003e 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1198 0040 9A42     		cmp	r2, r3
 1199 0042 06D2     		bcs	.L71
 977:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 978:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 1200              		.loc 1 978 0
 1201 0044 FB7B     		ldrb	r3, [r7, #15]
 1202 0046 BB73     		strb	r3, [r7, #14]
 979:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1203              		.loc 1 979 0
 1204 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1205 004a BA68     		ldr	r2, [r7, #8]
 1206 004c 1344     		add	r3, r3, r2
 1207 004e 1B78     		ldrb	r3, [r3]
 1208 0050 7B73     		strb	r3, [r7, #13]
 1209              	.L71:
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 1210              		.loc 1 971 0 discriminator 2
 1211 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1212 0054 0133     		adds	r3, r3, #1
 1213 0056 FB73     		strb	r3, [r7, #15]
 1214              	.L70:
 971:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 1215              		.loc 1 971 0 is_stmt 0 discriminator 1
 1216 0058 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1217 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1218 005c 9A42     		cmp	r2, r3
 1219 005e E3D3     		bcc	.L72
 980:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 981:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 982:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 983:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 984:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 1220              		.loc 1 984 0 is_stmt 1
 1221 0060 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 985:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1222              		.loc 1 985 0
 1223 0062 1846     		mov	r0, r3
 1224 0064 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 40


 1225              		.cfi_def_cfa_offset 4
 1226 0066 BD46     		mov	sp, r7
 1227              		.cfi_def_cfa_register 13
 1228              		@ sp needed
 1229 0068 5DF8047B 		ldr	r7, [sp], #4
 1230              		.cfi_restore 7
 1231              		.cfi_def_cfa_offset 0
 1232 006c 7047     		bx	lr
 1233              	.L75:
 1234 006e 00BF     		.align	2
 1235              	.L74:
 1236 0070 00000000 		.word	CapSense_sensorSignal
 1237              		.cfi_endproc
 1238              	.LFE11:
 1239              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1240              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1241              		.align	2
 1242              		.global	CapSense_CalcCentroid
 1243              		.thumb
 1244              		.thumb_func
 1245              		.type	CapSense_CalcCentroid, %function
 1246              	CapSense_CalcCentroid:
 1247              	.LFB12:
 986:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 987:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
 988:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 989:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
 990:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 991:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 992:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 993:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 994:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
 995:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 996:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 997:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
 998:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
 999:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1000:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
1001:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1002:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1003:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
1004:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1005:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1006:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1007:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1008:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1009:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1010:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1011:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1012:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1013:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1014:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1015:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1016:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1017:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1248              		.loc 1 1017 0
 1249              		.cfi_startproc
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 41


 1250              		@ args = 4, pretend = 0, frame = 32
 1251              		@ frame_needed = 1, uses_anonymous_args = 0
 1252              		@ link register save eliminated.
 1253 0000 90B4     		push	{r4, r7}
 1254              		.cfi_def_cfa_offset 8
 1255              		.cfi_offset 4, -8
 1256              		.cfi_offset 7, -4
 1257 0002 88B0     		sub	sp, sp, #32
 1258              		.cfi_def_cfa_offset 40
 1259 0004 00AF     		add	r7, sp, #0
 1260              		.cfi_def_cfa_register 7
 1261 0006 0446     		mov	r4, r0
 1262 0008 0846     		mov	r0, r1
 1263 000a 1146     		mov	r1, r2
 1264 000c 1A46     		mov	r2, r3
 1265 000e 2346     		mov	r3, r4
 1266 0010 FB71     		strb	r3, [r7, #7]
 1267 0012 0346     		mov	r3, r0
 1268 0014 BB71     		strb	r3, [r7, #6]
 1269 0016 0B46     		mov	r3, r1
 1270 0018 7B71     		strb	r3, [r7, #5]
 1271 001a 1346     		mov	r3, r2	@ movhi
 1272 001c 7B80     		strh	r3, [r7, #2]	@ movhi
1018:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1019:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
 1273              		.loc 1 1019 0
 1274 001e 0023     		movs	r3, #0
 1275 0020 FB77     		strb	r3, [r7, #31]
1020:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
 1276              		.loc 1 1020 0
 1277 0022 0023     		movs	r3, #0
 1278 0024 BB77     		strb	r3, [r7, #30]
1021:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1022:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                
1023:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1024:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1025:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1026:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1027:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Helps while centroid calulation */
1028:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         static uint8 CapSense_centroid[3u];
1029:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1030:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1031:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 numerator;
1032:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1033:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1279              		.loc 1 1033 0
 1280 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1281 0028 484A     		ldr	r2, .L86
 1282 002a 1344     		add	r3, r3, r2
 1283 002c BB61     		str	r3, [r7, #24]
1034:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1035:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1036:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1037:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1038:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1039:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1040:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 42


1041:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1042:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1043:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1044:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1045:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1046:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1047:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1048:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1049:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1050:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1051:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1052:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1053:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1054:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1055:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1056:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1057:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1058:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1059:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1060:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1061:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1062:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1063:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1064:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1065:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1066:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1067:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1068:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1069:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1070:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1071:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1072:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1073:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1074:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1075:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1076:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1077:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1078:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1079:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1080:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1081:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1082:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1083:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1084:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1085:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1086:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1087:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1088:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1089:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1090:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1091:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1092:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (maximum >= 1u)
 1284              		.loc 1 1092 0
 1285 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1286 0030 002B     		cmp	r3, #0
 1287 0032 02D0     		beq	.L77
1093:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 43


1094:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
 1288              		.loc 1 1094 0
 1289 0034 FB79     		ldrb	r3, [r7, #7]
 1290 0036 013B     		subs	r3, r3, #1
 1291 0038 FB77     		strb	r3, [r7, #31]
 1292              	.L77:
1095:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1096:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
 1293              		.loc 1 1096 0
 1294 003a FB79     		ldrb	r3, [r7, #7]
 1295 003c 0133     		adds	r3, r3, #1
 1296 003e BB77     		strb	r3, [r7, #30]
1097:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1098:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1099:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1100:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1101:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1102:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1103:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1297              		.loc 1 1103 0
 1298 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1299 0042 BA69     		ldr	r2, [r7, #24]
 1300 0044 1344     		add	r3, r3, r2
 1301 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1302 0048 414B     		ldr	r3, .L86+4
 1303 004a 5A70     		strb	r2, [r3, #1]
1104:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1105:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1106:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1107:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1304              		.loc 1 1107 0
 1305 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1306 004e 002B     		cmp	r3, #0
 1307 0050 09D1     		bne	.L78
1108:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1109:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
 1308              		.loc 1 1109 0
 1309 0052 3F4B     		ldr	r3, .L86+4
 1310 0054 0022     		movs	r2, #0
 1311 0056 1A70     		strb	r2, [r3]
1110:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1312              		.loc 1 1110 0
 1313 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1314 005a BA69     		ldr	r2, [r7, #24]
 1315 005c 1344     		add	r3, r3, r2
 1316 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1317 0060 3B4B     		ldr	r3, .L86+4
 1318 0062 9A70     		strb	r2, [r3, #2]
 1319 0064 1AE0     		b	.L79
 1320              	.L78:
1111:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1112:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1321              		.loc 1 1112 0
 1322 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1323 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1324 006a 013B     		subs	r3, r3, #1
 1325 006c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 44


 1326 006e 09D1     		bne	.L80
1113:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1114:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1327              		.loc 1 1114 0
 1328 0070 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1329 0072 BA69     		ldr	r2, [r7, #24]
 1330 0074 1344     		add	r3, r3, r2
 1331 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1332 0078 354B     		ldr	r3, .L86+4
 1333 007a 1A70     		strb	r2, [r3]
1115:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1334              		.loc 1 1115 0
 1335 007c 344B     		ldr	r3, .L86+4
 1336 007e 0022     		movs	r2, #0
 1337 0080 9A70     		strb	r2, [r3, #2]
 1338 0082 0BE0     		b	.L79
 1339              	.L80:
1116:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1117:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1118:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1119:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
 1340              		.loc 1 1119 0
 1341 0084 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1342 0086 BA69     		ldr	r2, [r7, #24]
 1343 0088 1344     		add	r3, r3, r2
 1344 008a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1345 008c 304B     		ldr	r3, .L86+4
 1346 008e 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
 1347              		.loc 1 1120 0
 1348 0090 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1349 0092 BA69     		ldr	r2, [r7, #24]
 1350 0094 1344     		add	r3, r3, r2
 1351 0096 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1352 0098 2D4B     		ldr	r3, .L86+4
 1353 009a 9A70     		strb	r2, [r3, #2]
 1354              	.L79:
1121:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1122:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1123:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1124:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1125:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1126:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1127:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     
1128:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1129:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1355              		.loc 1 1129 0
 1356 009c 2C4B     		ldr	r3, .L86+4
 1357 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1358 00a0 97F82820 		ldrb	r2, [r7, #40]	@ zero_extendqisi2
 1359 00a4 9A42     		cmp	r2, r3
 1360 00a6 08D2     		bcs	.L81
1130:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1131:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1361              		.loc 1 1131 0
 1362 00a8 294B     		ldr	r3, .L86+4
 1363 00aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 45


 1364 00ac 97F82830 		ldrb	r3, [r7, #40]
 1365 00b0 D31A     		subs	r3, r2, r3
 1366 00b2 DAB2     		uxtb	r2, r3
 1367 00b4 264B     		ldr	r3, .L86+4
 1368 00b6 1A70     		strb	r2, [r3]
 1369 00b8 02E0     		b	.L82
 1370              	.L81:
1132:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1133:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1134:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1135:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1371              		.loc 1 1135 0
 1372 00ba 254B     		ldr	r3, .L86+4
 1373 00bc 0022     		movs	r2, #0
 1374 00be 1A70     		strb	r2, [r3]
 1375              	.L82:
1136:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1137:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1138:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1139:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1376              		.loc 1 1139 0
 1377 00c0 234B     		ldr	r3, .L86+4
 1378 00c2 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1379 00c4 97F82830 		ldrb	r3, [r7, #40]
 1380 00c8 D31A     		subs	r3, r2, r3
 1381 00ca DAB2     		uxtb	r2, r3
 1382 00cc 204B     		ldr	r3, .L86+4
 1383 00ce 5A70     		strb	r2, [r3, #1]
1140:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1141:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1142:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1384              		.loc 1 1142 0
 1385 00d0 1F4B     		ldr	r3, .L86+4
 1386 00d2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1387 00d4 97F82820 		ldrb	r2, [r7, #40]	@ zero_extendqisi2
 1388 00d8 9A42     		cmp	r2, r3
 1389 00da 08D2     		bcs	.L83
1143:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1144:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1390              		.loc 1 1144 0
 1391 00dc 1C4B     		ldr	r3, .L86+4
 1392 00de 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1393 00e0 97F82830 		ldrb	r3, [r7, #40]
 1394 00e4 D31A     		subs	r3, r2, r3
 1395 00e6 DAB2     		uxtb	r2, r3
 1396 00e8 194B     		ldr	r3, .L86+4
 1397 00ea 9A70     		strb	r2, [r3, #2]
 1398 00ec 02E0     		b	.L84
 1399              	.L83:
1145:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1146:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1147:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1148:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1400              		.loc 1 1148 0
 1401 00ee 184B     		ldr	r3, .L86+4
 1402 00f0 0022     		movs	r2, #0
 1403 00f2 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 46


 1404              	.L84:
1149:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1150:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1151:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1152:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1405              		.loc 1 1153 0
 1406 00f4 164B     		ldr	r3, .L86+4
 1407 00f6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1408 00f8 1A46     		mov	r2, r3
1154:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1409              		.loc 1 1154 0
 1410 00fa 154B     		ldr	r3, .L86+4
 1411 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1153:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1412              		.loc 1 1153 0
 1413 00fe D31A     		subs	r3, r2, r3
 1414 0100 7B61     		str	r3, [r7, #20]
1155:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1156:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
 1415              		.loc 1 1157 0
 1416 0102 134B     		ldr	r3, .L86+4
 1417 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1418 0106 1A46     		mov	r2, r3
1158:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 1419              		.loc 1 1158 0
 1420 0108 114B     		ldr	r3, .L86+4
 1421 010a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 1422              		.loc 1 1157 0
 1423 010c 1344     		add	r3, r3, r2
1159:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
 1424              		.loc 1 1159 0
 1425 010e 104A     		ldr	r2, .L86+4
 1426 0110 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
1157:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
 1427              		.loc 1 1157 0
 1428 0112 1344     		add	r3, r3, r2
 1429 0114 3B61     		str	r3, [r7, #16]
1160:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1161:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1162:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1430              		.loc 1 1162 0
 1431 0116 7B69     		ldr	r3, [r7, #20]
 1432 0118 1B02     		lsls	r3, r3, #8
 1433 011a 1A46     		mov	r2, r3
 1434 011c 3B69     		ldr	r3, [r7, #16]
 1435 011e 92FBF3F3 		sdiv	r3, r2, r3
 1436 0122 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1437 0124 1202     		lsls	r2, r2, #8
 1438 0126 1344     		add	r3, r3, r2
 1439 0128 3B61     		str	r3, [r7, #16]
1163:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1164:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1165:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1166:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 47


1167:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1168:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1169:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1170:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1171:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1172:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1440              		.loc 1 1172 0
 1441 012a 7B88     		ldrh	r3, [r7, #2]
 1442 012c 1AB2     		sxth	r2, r3
 1443 012e 3B69     		ldr	r3, [r7, #16]
 1444 0130 02FB03F3 		mul	r3, r2, r3
 1445 0134 3B61     		str	r3, [r7, #16]
1173:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1174:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1175:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1446              		.loc 1 1175 0
 1447 0136 3B69     		ldr	r3, [r7, #16]
 1448 0138 03F5FE43 		add	r3, r3, #32512
 1449 013c 1B0C     		lsrs	r3, r3, #16
 1450 013e FB73     		strb	r3, [r7, #15]
1176:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1177:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1451              		.loc 1 1177 0
 1452 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1178:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
 1453              		.loc 1 1178 0
 1454 0142 1846     		mov	r0, r3
 1455 0144 2037     		adds	r7, r7, #32
 1456              		.cfi_def_cfa_offset 8
 1457 0146 BD46     		mov	sp, r7
 1458              		.cfi_def_cfa_register 13
 1459              		@ sp needed
 1460 0148 90BC     		pop	{r4, r7}
 1461              		.cfi_restore 7
 1462              		.cfi_restore 4
 1463              		.cfi_def_cfa_offset 0
 1464 014a 7047     		bx	lr
 1465              	.L87:
 1466              		.align	2
 1467              	.L86:
 1468 014c 00000000 		.word	CapSense_sensorSignal
 1469 0150 04000000 		.word	CapSense_centroid.5130
 1470              		.cfi_endproc
 1471              	.LFE12:
 1472              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1473              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1474              		.align	2
 1475              		.global	CapSense_GetCentroidPos
 1476              		.thumb
 1477              		.thumb_func
 1478              		.type	CapSense_GetCentroidPos, %function
 1479              	CapSense_GetCentroidPos:
 1480              	.LFB13:
1179:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1180:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1181:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1182:.\Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 48


1183:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1184:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1185:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1186:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1187:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1188:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1189:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1190:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1191:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1192:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1193:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1194:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1195:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1196:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1197:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1198:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1199:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1200:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1201:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1202:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1203:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1204:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1205:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1206:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1207:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1208:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1209:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1210:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1211:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1212:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1213:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1214:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1215:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1216:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1217:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1218:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1219:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1220:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1481              		.loc 1 1220 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 16
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485 0000 90B5     		push	{r4, r7, lr}
 1486              		.cfi_def_cfa_offset 12
 1487              		.cfi_offset 4, -12
 1488              		.cfi_offset 7, -8
 1489              		.cfi_offset 14, -4
 1490 0002 87B0     		sub	sp, sp, #28
 1491              		.cfi_def_cfa_offset 40
 1492 0004 02AF     		add	r7, sp, #8
 1493              		.cfi_def_cfa 7, 32
 1494 0006 0346     		mov	r3, r0
 1495 0008 FB71     		strb	r3, [r7, #7]
1221:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1222:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1223:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1224:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 49


1225:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1226:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1227:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1228:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1229:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1230:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1231:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1232:.\Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1233:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1234:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1235:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1236:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1237:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1238:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1239:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1240:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 1496              		.loc 1 1240 0
 1497 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1498 000c 164A     		ldr	r2, .L92
 1499 000e D35C     		ldrb	r3, [r2, r3]
 1500 0010 7B73     		strb	r3, [r7, #13]
1241:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1501              		.loc 1 1241 0
 1502 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1503 0014 154A     		ldr	r2, .L92+4
 1504 0016 D35C     		ldrb	r3, [r2, r3]
 1505 0018 3B73     		strb	r3, [r7, #12]
1242:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1243:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1244:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1245:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1246:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1247:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1248:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1249:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1250:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1251:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1252:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1253:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1254:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1255:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1256:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1257:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1258:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1259:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
 1506              		.loc 1 1259 0
 1507 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1508 001c 144A     		ldr	r2, .L92+8
 1509 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1510 0020 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1511 0022 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1512 0024 0846     		mov	r0, r1
 1513 0026 1146     		mov	r1, r2
 1514 0028 1A46     		mov	r2, r3
 1515 002a FFF7FEFF 		bl	CapSense_FindMaximum
 1516 002e 0346     		mov	r3, r0
 1517 0030 FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 50


1260:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1261:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1262:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1518              		.loc 1 1262 0
 1519 0032 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1520 0034 FF2B     		cmp	r3, #255
 1521 0036 0ED0     		beq	.L89
1263:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1264:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1265:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
 1522              		.loc 1 1265 0
 1523 0038 4FF4C854 		mov	r4, #6400
 1524 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1525 003e 0D4A     		ldr	r2, .L92+12
 1526 0040 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1527 0042 F87A     		ldrb	r0, [r7, #11]	@ zero_extendqisi2
 1528 0044 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1529 0046 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1530 0048 0093     		str	r3, [sp]
 1531 004a 2346     		mov	r3, r4
 1532 004c FFF7FEFF 		bl	CapSense_CalcCentroid
 1533 0050 0346     		mov	r3, r0
 1534 0052 FB81     		strh	r3, [r7, #14]	@ movhi
 1535 0054 02E0     		b	.L90
 1536              	.L89:
1266:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1267:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1268:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1269:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1270:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1271:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1272:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1273:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1274:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1275:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1276:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1277:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1278:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1279:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1280:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1281:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1282:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1283:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1284:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1285:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1286:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1287:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1288:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1289:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1290:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1291:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1292:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1293:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1294:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1295:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1296:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1297:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 51


1298:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1299:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1300:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1301:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1302:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1303:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1304:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1305:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1306:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1307:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1308:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1309:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1310:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1311:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1312:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1313:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1314:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1315:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1316:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
1317:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1318:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1319:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1320:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1321:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1322:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1323:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1324:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1325:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1326:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1327:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1328:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1329:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1330:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1331:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1332:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1333:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1334:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1335:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1336:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1337:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1338:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1339:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1340:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1341:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1342:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1343:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1344:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1345:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1346:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1347:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1348:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1349:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1350:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1351:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1352:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1353:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1354:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 52


1355:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1356:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1357:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1358:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1359:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1360:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1361:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1362:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1363:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1364:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1365:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1366:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1367:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1368:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum wasn't found */
1369:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
 1537              		.loc 1 1369 0
 1538 0056 4FF6FF73 		movw	r3, #65535
 1539 005a FB81     		strh	r3, [r7, #14]	@ movhi
 1540              	.L90:
1370:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1371:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1372:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1373:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1374:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1375:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1376:.\Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1377:.\Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1378:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1379:.\Generated_Source\PSoC5/CapSense_CSHL.c **** 
1380:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         
1381:.\Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
 1541              		.loc 1 1381 0
 1542 005c FB89     		ldrh	r3, [r7, #14]
1382:.\Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1543              		.loc 1 1382 0
 1544 005e 1846     		mov	r0, r3
 1545 0060 1437     		adds	r7, r7, #20
 1546              		.cfi_def_cfa_offset 12
 1547 0062 BD46     		mov	sp, r7
 1548              		.cfi_def_cfa_register 13
 1549              		@ sp needed
 1550 0064 90BD     		pop	{r4, r7, pc}
 1551              	.L93:
 1552 0066 00BF     		.align	2
 1553              	.L92:
 1554 0068 00000000 		.word	CapSense_rawDataIndex
 1555 006c 00000000 		.word	CapSense_numberOfSensors
 1556 0070 00000000 		.word	CapSense_fingerThreshold
 1557 0074 00000000 		.word	CapSense_noiseThreshold
 1558              		.cfi_endproc
 1559              	.LFE13:
 1560              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1561              		.bss
 1562 0003 00       		.align	2
 1563              	CapSense_centroid.5130:
 1564 0004 000000   		.space	3
 1565 0007 00       		.text
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 53


 1566              	.Letext0:
 1567              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1568              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense.h"
 1569              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_CSHL.h"
 1570              		.section	.debug_info,"",%progbits
 1571              	.Ldebug_info0:
 1572 0000 39070000 		.4byte	0x739
 1573 0004 0400     		.2byte	0x4
 1574 0006 00000000 		.4byte	.Ldebug_abbrev0
 1575 000a 04       		.byte	0x4
 1576 000b 01       		.uleb128 0x1
 1577 000c 76030000 		.4byte	.LASF75
 1578 0010 01       		.byte	0x1
 1579 0011 A5020000 		.4byte	.LASF76
 1580 0015 B5010000 		.4byte	.LASF77
 1581 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1582 001d 00000000 		.4byte	0
 1583 0021 00000000 		.4byte	.Ldebug_line0
 1584 0025 02       		.uleb128 0x2
 1585 0026 01       		.byte	0x1
 1586 0027 06       		.byte	0x6
 1587 0028 DE000000 		.4byte	.LASF0
 1588 002c 02       		.uleb128 0x2
 1589 002d 01       		.byte	0x1
 1590 002e 08       		.byte	0x8
 1591 002f 56040000 		.4byte	.LASF1
 1592 0033 02       		.uleb128 0x2
 1593 0034 02       		.byte	0x2
 1594 0035 05       		.byte	0x5
 1595 0036 93040000 		.4byte	.LASF2
 1596 003a 02       		.uleb128 0x2
 1597 003b 02       		.byte	0x2
 1598 003c 07       		.byte	0x7
 1599 003d 3E020000 		.4byte	.LASF3
 1600 0041 02       		.uleb128 0x2
 1601 0042 04       		.byte	0x4
 1602 0043 05       		.byte	0x5
 1603 0044 26010000 		.4byte	.LASF4
 1604 0048 02       		.uleb128 0x2
 1605 0049 04       		.byte	0x4
 1606 004a 07       		.byte	0x7
 1607 004b FB010000 		.4byte	.LASF5
 1608 004f 02       		.uleb128 0x2
 1609 0050 08       		.byte	0x8
 1610 0051 05       		.byte	0x5
 1611 0052 D0000000 		.4byte	.LASF6
 1612 0056 02       		.uleb128 0x2
 1613 0057 08       		.byte	0x8
 1614 0058 07       		.byte	0x7
 1615 0059 5F000000 		.4byte	.LASF7
 1616 005d 03       		.uleb128 0x3
 1617 005e 04       		.byte	0x4
 1618 005f 05       		.byte	0x5
 1619 0060 696E7400 		.ascii	"int\000"
 1620 0064 02       		.uleb128 0x2
 1621 0065 04       		.byte	0x4
 1622 0066 07       		.byte	0x7
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 54


 1623 0067 E5010000 		.4byte	.LASF8
 1624 006b 04       		.uleb128 0x4
 1625 006c 65010000 		.4byte	.LASF9
 1626 0070 02       		.byte	0x2
 1627 0071 3801     		.2byte	0x138
 1628 0073 2C000000 		.4byte	0x2c
 1629 0077 04       		.uleb128 0x4
 1630 0078 06000000 		.4byte	.LASF10
 1631 007c 02       		.byte	0x2
 1632 007d 3901     		.2byte	0x139
 1633 007f 3A000000 		.4byte	0x3a
 1634 0083 04       		.uleb128 0x4
 1635 0084 88010000 		.4byte	.LASF11
 1636 0088 02       		.byte	0x2
 1637 0089 3A01     		.2byte	0x13a
 1638 008b 48000000 		.4byte	0x48
 1639 008f 04       		.uleb128 0x4
 1640 0090 3E050000 		.4byte	.LASF12
 1641 0094 02       		.byte	0x2
 1642 0095 3C01     		.2byte	0x13c
 1643 0097 33000000 		.4byte	0x33
 1644 009b 04       		.uleb128 0x4
 1645 009c 1A010000 		.4byte	.LASF13
 1646 00a0 02       		.byte	0x2
 1647 00a1 3D01     		.2byte	0x13d
 1648 00a3 41000000 		.4byte	0x41
 1649 00a7 02       		.uleb128 0x2
 1650 00a8 04       		.byte	0x4
 1651 00a9 04       		.byte	0x4
 1652 00aa 33040000 		.4byte	.LASF14
 1653 00ae 02       		.uleb128 0x2
 1654 00af 08       		.byte	0x8
 1655 00b0 04       		.byte	0x4
 1656 00b1 6B010000 		.4byte	.LASF15
 1657 00b5 02       		.uleb128 0x2
 1658 00b6 01       		.byte	0x1
 1659 00b7 08       		.byte	0x8
 1660 00b8 12050000 		.4byte	.LASF16
 1661 00bc 02       		.uleb128 0x2
 1662 00bd 04       		.byte	0x4
 1663 00be 07       		.byte	0x7
 1664 00bf F9020000 		.4byte	.LASF17
 1665 00c3 05       		.uleb128 0x5
 1666 00c4 B3040000 		.4byte	.LASF18
 1667 00c8 01       		.byte	0x1
 1668 00c9 81       		.byte	0x81
 1669 00ca 00000000 		.4byte	.LFB0
 1670 00ce 6C000000 		.4byte	.LFE0-.LFB0
 1671 00d2 01       		.uleb128 0x1
 1672 00d3 9C       		.byte	0x9c
 1673 00d4 F5000000 		.4byte	0xf5
 1674 00d8 06       		.uleb128 0x6
 1675 00d9 51020000 		.4byte	.LASF20
 1676 00dd 01       		.byte	0x1
 1677 00de 81       		.byte	0x81
 1678 00df 6B000000 		.4byte	0x6b
 1679 00e3 02       		.uleb128 0x2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 55


 1680 00e4 91       		.byte	0x91
 1681 00e5 6F       		.sleb128 -17
 1682 00e6 07       		.uleb128 0x7
 1683 00e7 9D040000 		.4byte	.LASF22
 1684 00eb 01       		.byte	0x1
 1685 00ec 85       		.byte	0x85
 1686 00ed 6B000000 		.4byte	0x6b
 1687 00f1 02       		.uleb128 0x2
 1688 00f2 91       		.byte	0x91
 1689 00f3 77       		.sleb128 -9
 1690 00f4 00       		.byte	0
 1691 00f5 08       		.uleb128 0x8
 1692 00f6 18030000 		.4byte	.LASF19
 1693 00fa 01       		.byte	0x1
 1694 00fb CD       		.byte	0xcd
 1695 00fc 00000000 		.4byte	.LFB1
 1696 0100 2C000000 		.4byte	.LFE1-.LFB1
 1697 0104 01       		.uleb128 0x1
 1698 0105 9C       		.byte	0x9c
 1699 0106 19010000 		.4byte	0x119
 1700 010a 06       		.uleb128 0x6
 1701 010b 51020000 		.4byte	.LASF20
 1702 010f 01       		.byte	0x1
 1703 0110 CD       		.byte	0xcd
 1704 0111 6B000000 		.4byte	0x6b
 1705 0115 02       		.uleb128 0x2
 1706 0116 91       		.byte	0x91
 1707 0117 77       		.sleb128 -9
 1708 0118 00       		.byte	0
 1709 0119 09       		.uleb128 0x9
 1710 011a 64040000 		.4byte	.LASF21
 1711 011e 01       		.byte	0x1
 1712 011f 0101     		.2byte	0x101
 1713 0121 00000000 		.4byte	.LFB2
 1714 0125 26000000 		.4byte	.LFE2-.LFB2
 1715 0129 01       		.uleb128 0x1
 1716 012a 9C       		.byte	0x9c
 1717 012b 3D010000 		.4byte	0x13d
 1718 012f 0A       		.uleb128 0xa
 1719 0130 6900     		.ascii	"i\000"
 1720 0132 01       		.byte	0x1
 1721 0133 0401     		.2byte	0x104
 1722 0135 6B000000 		.4byte	0x6b
 1723 0139 02       		.uleb128 0x2
 1724 013a 91       		.byte	0x91
 1725 013b 77       		.sleb128 -9
 1726 013c 00       		.byte	0
 1727 013d 09       		.uleb128 0x9
 1728 013e 8C000000 		.4byte	.LASF23
 1729 0142 01       		.byte	0x1
 1730 0143 2201     		.2byte	0x122
 1731 0145 00000000 		.4byte	.LFB3
 1732 0149 6C000000 		.4byte	.LFE3-.LFB3
 1733 014d 01       		.uleb128 0x1
 1734 014e 9C       		.byte	0x9c
 1735 014f 7F010000 		.4byte	0x17f
 1736 0153 0A       		.uleb128 0xa
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 56


 1737 0154 6900     		.ascii	"i\000"
 1738 0156 01       		.byte	0x1
 1739 0157 2501     		.2byte	0x125
 1740 0159 6B000000 		.4byte	0x6b
 1741 015d 02       		.uleb128 0x2
 1742 015e 91       		.byte	0x91
 1743 015f 77       		.sleb128 -9
 1744 0160 0A       		.uleb128 0xa
 1745 0161 706F7300 		.ascii	"pos\000"
 1746 0165 01       		.byte	0x1
 1747 0166 2601     		.2byte	0x126
 1748 0168 6B000000 		.4byte	0x6b
 1749 016c 02       		.uleb128 0x2
 1750 016d 91       		.byte	0x91
 1751 016e 76       		.sleb128 -10
 1752 016f 0B       		.uleb128 0xb
 1753 0170 57030000 		.4byte	.LASF24
 1754 0174 01       		.byte	0x1
 1755 0175 2701     		.2byte	0x127
 1756 0177 6B000000 		.4byte	0x6b
 1757 017b 02       		.uleb128 0x2
 1758 017c 91       		.byte	0x91
 1759 017d 75       		.sleb128 -11
 1760 017e 00       		.byte	0
 1761 017f 09       		.uleb128 0x9
 1762 0180 87020000 		.4byte	.LASF25
 1763 0184 01       		.byte	0x1
 1764 0185 6501     		.2byte	0x165
 1765 0187 00000000 		.4byte	.LFB4
 1766 018b 50010000 		.4byte	.LFE4-.LFB4
 1767 018f 01       		.uleb128 0x1
 1768 0190 9C       		.byte	0x9c
 1769 0191 F0010000 		.4byte	0x1f0
 1770 0195 0C       		.uleb128 0xc
 1771 0196 51020000 		.4byte	.LASF20
 1772 019a 01       		.byte	0x1
 1773 019b 6501     		.2byte	0x165
 1774 019d 6B000000 		.4byte	0x6b
 1775 01a1 02       		.uleb128 0x2
 1776 01a2 91       		.byte	0x91
 1777 01a3 67       		.sleb128 -25
 1778 01a4 0B       		.uleb128 0xb
 1779 01a5 CE020000 		.4byte	.LASF26
 1780 01a9 01       		.byte	0x1
 1781 01aa 6801     		.2byte	0x168
 1782 01ac 83000000 		.4byte	0x83
 1783 01b0 02       		.uleb128 0x2
 1784 01b1 91       		.byte	0x91
 1785 01b2 6C       		.sleb128 -20
 1786 01b3 0B       		.uleb128 0xb
 1787 01b4 86050000 		.4byte	.LASF27
 1788 01b8 01       		.byte	0x1
 1789 01b9 6901     		.2byte	0x169
 1790 01bb 77000000 		.4byte	0x77
 1791 01bf 02       		.uleb128 0x2
 1792 01c0 91       		.byte	0x91
 1793 01c1 76       		.sleb128 -10
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 57


 1794 01c2 0B       		.uleb128 0xb
 1795 01c3 0D000000 		.4byte	.LASF28
 1796 01c7 01       		.byte	0x1
 1797 01c8 6A01     		.2byte	0x16a
 1798 01ca 77000000 		.4byte	0x77
 1799 01ce 02       		.uleb128 0x2
 1800 01cf 91       		.byte	0x91
 1801 01d0 72       		.sleb128 -14
 1802 01d1 0B       		.uleb128 0xb
 1803 01d2 9D040000 		.4byte	.LASF22
 1804 01d6 01       		.byte	0x1
 1805 01d7 6B01     		.2byte	0x16b
 1806 01d9 6B000000 		.4byte	0x6b
 1807 01dd 02       		.uleb128 0x2
 1808 01de 91       		.byte	0x91
 1809 01df 75       		.sleb128 -11
 1810 01e0 0B       		.uleb128 0xb
 1811 01e1 84040000 		.4byte	.LASF29
 1812 01e5 01       		.byte	0x1
 1813 01e6 6C01     		.2byte	0x16c
 1814 01e8 6B000000 		.4byte	0x6b
 1815 01ec 02       		.uleb128 0x2
 1816 01ed 91       		.byte	0x91
 1817 01ee 74       		.sleb128 -12
 1818 01ef 00       		.byte	0
 1819 01f0 09       		.uleb128 0x9
 1820 01f1 B0000000 		.4byte	.LASF30
 1821 01f5 01       		.byte	0x1
 1822 01f6 1202     		.2byte	0x212
 1823 01f8 00000000 		.4byte	.LFB5
 1824 01fc 50000000 		.4byte	.LFE5-.LFB5
 1825 0200 01       		.uleb128 0x1
 1826 0201 9C       		.byte	0x9c
 1827 0202 32020000 		.4byte	0x232
 1828 0206 0A       		.uleb128 0xa
 1829 0207 6900     		.ascii	"i\000"
 1830 0209 01       		.byte	0x1
 1831 020a 1502     		.2byte	0x215
 1832 020c 6B000000 		.4byte	0x6b
 1833 0210 02       		.uleb128 0x2
 1834 0211 91       		.byte	0x91
 1835 0212 77       		.sleb128 -9
 1836 0213 0A       		.uleb128 0xa
 1837 0214 706F7300 		.ascii	"pos\000"
 1838 0218 01       		.byte	0x1
 1839 0219 1602     		.2byte	0x216
 1840 021b 6B000000 		.4byte	0x6b
 1841 021f 02       		.uleb128 0x2
 1842 0220 91       		.byte	0x91
 1843 0221 76       		.sleb128 -10
 1844 0222 0B       		.uleb128 0xb
 1845 0223 57030000 		.4byte	.LASF24
 1846 0227 01       		.byte	0x1
 1847 0228 1702     		.2byte	0x217
 1848 022a 6B000000 		.4byte	0x6b
 1849 022e 02       		.uleb128 0x2
 1850 022f 91       		.byte	0x91
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 58


 1851 0230 75       		.sleb128 -11
 1852 0231 00       		.byte	0
 1853 0232 0D       		.uleb128 0xd
 1854 0233 3A030000 		.4byte	.LASF36
 1855 0237 01       		.byte	0x1
 1856 0238 4C02     		.2byte	0x24c
 1857 023a 6B000000 		.4byte	0x6b
 1858 023e 00000000 		.4byte	.LFB6
 1859 0242 20010000 		.4byte	.LFE6-.LFB6
 1860 0246 01       		.uleb128 0x1
 1861 0247 9C       		.byte	0x9c
 1862 0248 C5020000 		.4byte	0x2c5
 1863 024c 0C       		.uleb128 0xc
 1864 024d 51020000 		.4byte	.LASF20
 1865 0251 01       		.byte	0x1
 1866 0252 4C02     		.2byte	0x24c
 1867 0254 6B000000 		.4byte	0x6b
 1868 0258 02       		.uleb128 0x2
 1869 0259 91       		.byte	0x91
 1870 025a 6F       		.sleb128 -17
 1871 025b 0B       		.uleb128 0xb
 1872 025c 30050000 		.4byte	.LASF31
 1873 0260 01       		.byte	0x1
 1874 0261 4F02     		.2byte	0x24f
 1875 0263 6B000000 		.4byte	0x6b
 1876 0267 02       		.uleb128 0x2
 1877 0268 91       		.byte	0x91
 1878 0269 77       		.sleb128 -9
 1879 026a 0A       		.uleb128 0xa
 1880 026b 706F7300 		.ascii	"pos\000"
 1881 026f 01       		.byte	0x1
 1882 0270 5102     		.2byte	0x251
 1883 0272 6B000000 		.4byte	0x6b
 1884 0276 02       		.uleb128 0x2
 1885 0277 91       		.byte	0x91
 1886 0278 76       		.sleb128 -10
 1887 0279 0B       		.uleb128 0xb
 1888 027a A4040000 		.4byte	.LASF32
 1889 027e 01       		.byte	0x1
 1890 027f 5202     		.2byte	0x252
 1891 0281 6B000000 		.4byte	0x6b
 1892 0285 02       		.uleb128 0x2
 1893 0286 91       		.byte	0x91
 1894 0287 75       		.sleb128 -11
 1895 0288 0B       		.uleb128 0xb
 1896 0289 9D040000 		.4byte	.LASF22
 1897 028d 01       		.byte	0x1
 1898 028e 5402     		.2byte	0x254
 1899 0290 6B000000 		.4byte	0x6b
 1900 0294 02       		.uleb128 0x2
 1901 0295 91       		.byte	0x91
 1902 0296 74       		.sleb128 -12
 1903 0297 0B       		.uleb128 0xb
 1904 0298 47000000 		.4byte	.LASF33
 1905 029c 01       		.byte	0x1
 1906 029d 5502     		.2byte	0x255
 1907 029f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 59


 1908 02a3 02       		.uleb128 0x2
 1909 02a4 91       		.byte	0x91
 1910 02a5 73       		.sleb128 -13
 1911 02a6 0B       		.uleb128 0xb
 1912 02a7 8F010000 		.4byte	.LASF34
 1913 02ab 01       		.byte	0x1
 1914 02ac 5602     		.2byte	0x256
 1915 02ae 6B000000 		.4byte	0x6b
 1916 02b2 02       		.uleb128 0x2
 1917 02b3 91       		.byte	0x91
 1918 02b4 72       		.sleb128 -14
 1919 02b5 0B       		.uleb128 0xb
 1920 02b6 F0020000 		.4byte	.LASF35
 1921 02ba 01       		.byte	0x1
 1922 02bb 5702     		.2byte	0x257
 1923 02bd 6B000000 		.4byte	0x6b
 1924 02c1 02       		.uleb128 0x2
 1925 02c2 91       		.byte	0x91
 1926 02c3 71       		.sleb128 -15
 1927 02c4 00       		.byte	0
 1928 02c5 0E       		.uleb128 0xe
 1929 02c6 39040000 		.4byte	.LASF37
 1930 02ca 01       		.byte	0x1
 1931 02cb 9C02     		.2byte	0x29c
 1932 02cd 6B000000 		.4byte	0x6b
 1933 02d1 00000000 		.4byte	.LFB7
 1934 02d5 54000000 		.4byte	.LFE7-.LFB7
 1935 02d9 01       		.uleb128 0x1
 1936 02da 9C       		.byte	0x9c
 1937 02db 1C030000 		.4byte	0x31c
 1938 02df 0C       		.uleb128 0xc
 1939 02e0 9D040000 		.4byte	.LASF22
 1940 02e4 01       		.byte	0x1
 1941 02e5 9C02     		.2byte	0x29c
 1942 02e7 6B000000 		.4byte	0x6b
 1943 02eb 02       		.uleb128 0x2
 1944 02ec 91       		.byte	0x91
 1945 02ed 6F       		.sleb128 -17
 1946 02ee 0B       		.uleb128 0xb
 1947 02ef 01010000 		.4byte	.LASF38
 1948 02f3 01       		.byte	0x1
 1949 02f4 9F02     		.2byte	0x29f
 1950 02f6 6B000000 		.4byte	0x6b
 1951 02fa 02       		.uleb128 0x2
 1952 02fb 91       		.byte	0x91
 1953 02fc 77       		.sleb128 -9
 1954 02fd 0B       		.uleb128 0xb
 1955 02fe 0A010000 		.4byte	.LASF39
 1956 0302 01       		.byte	0x1
 1957 0303 A002     		.2byte	0x2a0
 1958 0305 6B000000 		.4byte	0x6b
 1959 0309 02       		.uleb128 0x2
 1960 030a 91       		.byte	0x91
 1961 030b 75       		.sleb128 -11
 1962 030c 0B       		.uleb128 0xb
 1963 030d 20010000 		.4byte	.LASF40
 1964 0311 01       		.byte	0x1
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 60


 1965 0312 A102     		.2byte	0x2a1
 1966 0314 6B000000 		.4byte	0x6b
 1967 0318 02       		.uleb128 0x2
 1968 0319 91       		.byte	0x91
 1969 031a 76       		.sleb128 -10
 1970 031b 00       		.byte	0
 1971 031c 0E       		.uleb128 0xe
 1972 031d 39010000 		.4byte	.LASF41
 1973 0321 01       		.byte	0x1
 1974 0322 C802     		.2byte	0x2c8
 1975 0324 6B000000 		.4byte	0x6b
 1976 0328 00000000 		.4byte	.LFB8
 1977 032c 38000000 		.4byte	.LFE8-.LFB8
 1978 0330 01       		.uleb128 0x1
 1979 0331 9C       		.byte	0x9c
 1980 0332 53030000 		.4byte	0x353
 1981 0336 0A       		.uleb128 0xa
 1982 0337 6900     		.ascii	"i\000"
 1983 0339 01       		.byte	0x1
 1984 033a CB02     		.2byte	0x2cb
 1985 033c 6B000000 		.4byte	0x6b
 1986 0340 02       		.uleb128 0x2
 1987 0341 91       		.byte	0x91
 1988 0342 77       		.sleb128 -9
 1989 0343 0B       		.uleb128 0xb
 1990 0344 20010000 		.4byte	.LASF40
 1991 0348 01       		.byte	0x1
 1992 0349 CC02     		.2byte	0x2cc
 1993 034b 6B000000 		.4byte	0x6b
 1994 034f 02       		.uleb128 0x2
 1995 0350 91       		.byte	0x91
 1996 0351 76       		.sleb128 -10
 1997 0352 00       		.byte	0
 1998 0353 0F       		.uleb128 0xf
 1999 0354 02030000 		.4byte	.LASF42
 2000 0358 01       		.byte	0x1
 2001 0359 F602     		.2byte	0x2f6
 2002 035b 00000000 		.4byte	.LFB9
 2003 035f 68000000 		.4byte	.LFE9-.LFB9
 2004 0363 01       		.uleb128 0x1
 2005 0364 9C       		.byte	0x9c
 2006 0365 B5030000 		.4byte	0x3b5
 2007 0369 0C       		.uleb128 0xc
 2008 036a 9D040000 		.4byte	.LASF22
 2009 036e 01       		.byte	0x1
 2010 036f F602     		.2byte	0x2f6
 2011 0371 6B000000 		.4byte	0x6b
 2012 0375 02       		.uleb128 0x2
 2013 0376 91       		.byte	0x91
 2014 0377 6F       		.sleb128 -17
 2015 0378 0A       		.uleb128 0xa
 2016 0379 706F7300 		.ascii	"pos\000"
 2017 037d 01       		.byte	0x1
 2018 037e F902     		.2byte	0x2f9
 2019 0380 6B000000 		.4byte	0x6b
 2020 0384 02       		.uleb128 0x2
 2021 0385 91       		.byte	0x91
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 61


 2022 0386 75       		.sleb128 -11
 2023 0387 0B       		.uleb128 0xb
 2024 0388 57030000 		.4byte	.LASF24
 2025 038c 01       		.byte	0x1
 2026 038d FA02     		.2byte	0x2fa
 2027 038f 6B000000 		.4byte	0x6b
 2028 0393 02       		.uleb128 0x2
 2029 0394 91       		.byte	0x91
 2030 0395 74       		.sleb128 -12
 2031 0396 0B       		.uleb128 0xb
 2032 0397 01010000 		.4byte	.LASF38
 2033 039b 01       		.byte	0x1
 2034 039c FB02     		.2byte	0x2fb
 2035 039e 6B000000 		.4byte	0x6b
 2036 03a2 02       		.uleb128 0x2
 2037 03a3 91       		.byte	0x91
 2038 03a4 77       		.sleb128 -9
 2039 03a5 0B       		.uleb128 0xb
 2040 03a6 0A010000 		.4byte	.LASF39
 2041 03aa 01       		.byte	0x1
 2042 03ab FC02     		.2byte	0x2fc
 2043 03ad 6B000000 		.4byte	0x6b
 2044 03b1 02       		.uleb128 0x2
 2045 03b2 91       		.byte	0x91
 2046 03b3 76       		.sleb128 -10
 2047 03b4 00       		.byte	0
 2048 03b5 0F       		.uleb128 0xf
 2049 03b6 EA000000 		.4byte	.LASF43
 2050 03ba 01       		.byte	0x1
 2051 03bb 2803     		.2byte	0x328
 2052 03bd 00000000 		.4byte	.LFB10
 2053 03c1 6C000000 		.4byte	.LFE10-.LFB10
 2054 03c5 01       		.uleb128 0x1
 2055 03c6 9C       		.byte	0x9c
 2056 03c7 17040000 		.4byte	0x417
 2057 03cb 0C       		.uleb128 0xc
 2058 03cc 9D040000 		.4byte	.LASF22
 2059 03d0 01       		.byte	0x1
 2060 03d1 2803     		.2byte	0x328
 2061 03d3 6B000000 		.4byte	0x6b
 2062 03d7 02       		.uleb128 0x2
 2063 03d8 91       		.byte	0x91
 2064 03d9 6F       		.sleb128 -17
 2065 03da 0A       		.uleb128 0xa
 2066 03db 706F7300 		.ascii	"pos\000"
 2067 03df 01       		.byte	0x1
 2068 03e0 2B03     		.2byte	0x32b
 2069 03e2 6B000000 		.4byte	0x6b
 2070 03e6 02       		.uleb128 0x2
 2071 03e7 91       		.byte	0x91
 2072 03e8 75       		.sleb128 -11
 2073 03e9 0B       		.uleb128 0xb
 2074 03ea 57030000 		.4byte	.LASF24
 2075 03ee 01       		.byte	0x1
 2076 03ef 2C03     		.2byte	0x32c
 2077 03f1 6B000000 		.4byte	0x6b
 2078 03f5 02       		.uleb128 0x2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 62


 2079 03f6 91       		.byte	0x91
 2080 03f7 74       		.sleb128 -12
 2081 03f8 0B       		.uleb128 0xb
 2082 03f9 01010000 		.4byte	.LASF38
 2083 03fd 01       		.byte	0x1
 2084 03fe 2D03     		.2byte	0x32d
 2085 0400 6B000000 		.4byte	0x6b
 2086 0404 02       		.uleb128 0x2
 2087 0405 91       		.byte	0x91
 2088 0406 77       		.sleb128 -9
 2089 0407 0B       		.uleb128 0xb
 2090 0408 0A010000 		.4byte	.LASF39
 2091 040c 01       		.byte	0x1
 2092 040d 2E03     		.2byte	0x32e
 2093 040f 6B000000 		.4byte	0x6b
 2094 0413 02       		.uleb128 0x2
 2095 0414 91       		.byte	0x91
 2096 0415 76       		.sleb128 -10
 2097 0416 00       		.byte	0
 2098 0417 0D       		.uleb128 0xd
 2099 0418 72020000 		.4byte	.LASF44
 2100 041c 01       		.byte	0x1
 2101 041d 5A03     		.2byte	0x35a
 2102 041f 6B000000 		.4byte	0x6b
 2103 0423 00000000 		.4byte	.LFB11
 2104 0427 74000000 		.4byte	.LFE11-.LFB11
 2105 042b 01       		.uleb128 0x1
 2106 042c 9C       		.byte	0x9c
 2107 042d 99040000 		.4byte	0x499
 2108 0431 0C       		.uleb128 0xc
 2109 0432 29050000 		.4byte	.LASF45
 2110 0436 01       		.byte	0x1
 2111 0437 5A03     		.2byte	0x35a
 2112 0439 6B000000 		.4byte	0x6b
 2113 043d 02       		.uleb128 0x2
 2114 043e 91       		.byte	0x91
 2115 043f 6F       		.sleb128 -17
 2116 0440 0C       		.uleb128 0xc
 2117 0441 00000000 		.4byte	.LASF46
 2118 0445 01       		.byte	0x1
 2119 0446 5A03     		.2byte	0x35a
 2120 0448 6B000000 		.4byte	0x6b
 2121 044c 02       		.uleb128 0x2
 2122 044d 91       		.byte	0x91
 2123 044e 6E       		.sleb128 -18
 2124 044f 0C       		.uleb128 0xc
 2125 0450 47000000 		.4byte	.LASF33
 2126 0454 01       		.byte	0x1
 2127 0455 5A03     		.2byte	0x35a
 2128 0457 6B000000 		.4byte	0x6b
 2129 045b 02       		.uleb128 0x2
 2130 045c 91       		.byte	0x91
 2131 045d 6D       		.sleb128 -19
 2132 045e 0A       		.uleb128 0xa
 2133 045f 6900     		.ascii	"i\000"
 2134 0461 01       		.byte	0x1
 2135 0462 5E03     		.2byte	0x35e
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 63


 2136 0464 6B000000 		.4byte	0x6b
 2137 0468 02       		.uleb128 0x2
 2138 0469 91       		.byte	0x91
 2139 046a 77       		.sleb128 -9
 2140 046b 0B       		.uleb128 0xb
 2141 046c AB040000 		.4byte	.LASF47
 2142 0470 01       		.byte	0x1
 2143 0471 6803     		.2byte	0x368
 2144 0473 6B000000 		.4byte	0x6b
 2145 0477 02       		.uleb128 0x2
 2146 0478 91       		.byte	0x91
 2147 0479 76       		.sleb128 -10
 2148 047a 0B       		.uleb128 0xb
 2149 047b B0010000 		.4byte	.LASF48
 2150 047f 01       		.byte	0x1
 2151 0480 6903     		.2byte	0x369
 2152 0482 6B000000 		.4byte	0x6b
 2153 0486 02       		.uleb128 0x2
 2154 0487 91       		.byte	0x91
 2155 0488 75       		.sleb128 -11
 2156 0489 0B       		.uleb128 0xb
 2157 048a A2010000 		.4byte	.LASF49
 2158 048e 01       		.byte	0x1
 2159 048f 6A03     		.2byte	0x36a
 2160 0491 99040000 		.4byte	0x499
 2161 0495 02       		.uleb128 0x2
 2162 0496 91       		.byte	0x91
 2163 0497 70       		.sleb128 -16
 2164 0498 00       		.byte	0
 2165 0499 10       		.uleb128 0x10
 2166 049a 04       		.byte	0x4
 2167 049b 6B000000 		.4byte	0x6b
 2168 049f 0D       		.uleb128 0xd
 2169 04a0 57050000 		.4byte	.LASF50
 2170 04a4 01       		.byte	0x1
 2171 04a5 F603     		.2byte	0x3f6
 2172 04a7 6B000000 		.4byte	0x6b
 2173 04ab 00000000 		.4byte	.LFB12
 2174 04af 54010000 		.4byte	.LFE12-.LFB12
 2175 04b3 01       		.uleb128 0x1
 2176 04b4 9C       		.byte	0x9c
 2177 04b5 71050000 		.4byte	0x571
 2178 04b9 0C       		.uleb128 0xc
 2179 04ba AB040000 		.4byte	.LASF47
 2180 04be 01       		.byte	0x1
 2181 04bf F603     		.2byte	0x3f6
 2182 04c1 6B000000 		.4byte	0x6b
 2183 04c5 02       		.uleb128 0x2
 2184 04c6 91       		.byte	0x91
 2185 04c7 5F       		.sleb128 -33
 2186 04c8 0C       		.uleb128 0xc
 2187 04c9 29050000 		.4byte	.LASF45
 2188 04cd 01       		.byte	0x1
 2189 04ce F603     		.2byte	0x3f6
 2190 04d0 6B000000 		.4byte	0x6b
 2191 04d4 02       		.uleb128 0x2
 2192 04d5 91       		.byte	0x91
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 64


 2193 04d6 5E       		.sleb128 -34
 2194 04d7 0C       		.uleb128 0xc
 2195 04d8 00000000 		.4byte	.LASF46
 2196 04dc 01       		.byte	0x1
 2197 04dd F703     		.2byte	0x3f7
 2198 04df 6B000000 		.4byte	0x6b
 2199 04e3 02       		.uleb128 0x2
 2200 04e4 91       		.byte	0x91
 2201 04e5 5D       		.sleb128 -35
 2202 04e6 0C       		.uleb128 0xc
 2203 04e7 C5040000 		.4byte	.LASF51
 2204 04eb 01       		.byte	0x1
 2205 04ec F703     		.2byte	0x3f7
 2206 04ee 77000000 		.4byte	0x77
 2207 04f2 02       		.uleb128 0x2
 2208 04f3 91       		.byte	0x91
 2209 04f4 5A       		.sleb128 -38
 2210 04f5 0C       		.uleb128 0xc
 2211 04f6 84040000 		.4byte	.LASF29
 2212 04fa 01       		.byte	0x1
 2213 04fb F703     		.2byte	0x3f7
 2214 04fd 6B000000 		.4byte	0x6b
 2215 0501 02       		.uleb128 0x2
 2216 0502 91       		.byte	0x91
 2217 0503 00       		.sleb128 0
 2218 0504 0B       		.uleb128 0xb
 2219 0505 57000000 		.4byte	.LASF52
 2220 0509 01       		.byte	0x1
 2221 050a FB03     		.2byte	0x3fb
 2222 050c 6B000000 		.4byte	0x6b
 2223 0510 02       		.uleb128 0x2
 2224 0511 91       		.byte	0x91
 2225 0512 77       		.sleb128 -9
 2226 0513 0B       		.uleb128 0xb
 2227 0514 9A010000 		.4byte	.LASF53
 2228 0518 01       		.byte	0x1
 2229 0519 FC03     		.2byte	0x3fc
 2230 051b 6B000000 		.4byte	0x6b
 2231 051f 02       		.uleb128 0x2
 2232 0520 91       		.byte	0x91
 2233 0521 76       		.sleb128 -10
 2234 0522 0B       		.uleb128 0xb
 2235 0523 17050000 		.4byte	.LASF54
 2236 0527 01       		.byte	0x1
 2237 0528 0404     		.2byte	0x404
 2238 052a 71050000 		.4byte	0x571
 2239 052e 05       		.uleb128 0x5
 2240 052f 03       		.byte	0x3
 2241 0530 04000000 		.4byte	CapSense_centroid.5130
 2242 0534 0B       		.uleb128 0xb
 2243 0535 F2010000 		.4byte	.LASF55
 2244 0539 01       		.byte	0x1
 2245 053a 0604     		.2byte	0x406
 2246 053c 6B000000 		.4byte	0x6b
 2247 0540 02       		.uleb128 0x2
 2248 0541 91       		.byte	0x91
 2249 0542 67       		.sleb128 -25
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 65


 2250 0543 0B       		.uleb128 0xb
 2251 0544 2F010000 		.4byte	.LASF56
 2252 0548 01       		.byte	0x1
 2253 0549 0704     		.2byte	0x407
 2254 054b 83000000 		.4byte	0x83
 2255 054f 02       		.uleb128 0x2
 2256 0550 91       		.byte	0x91
 2257 0551 6C       		.sleb128 -20
 2258 0552 0B       		.uleb128 0xb
 2259 0553 59010000 		.4byte	.LASF57
 2260 0557 01       		.byte	0x1
 2261 0558 0804     		.2byte	0x408
 2262 055a 9B000000 		.4byte	0x9b
 2263 055e 02       		.uleb128 0x2
 2264 055f 91       		.byte	0x91
 2265 0560 68       		.sleb128 -24
 2266 0561 0B       		.uleb128 0xb
 2267 0562 A2010000 		.4byte	.LASF49
 2268 0566 01       		.byte	0x1
 2269 0567 0904     		.2byte	0x409
 2270 0569 99040000 		.4byte	0x499
 2271 056d 02       		.uleb128 0x2
 2272 056e 91       		.byte	0x91
 2273 056f 70       		.sleb128 -16
 2274 0570 00       		.byte	0
 2275 0571 11       		.uleb128 0x11
 2276 0572 6B000000 		.4byte	0x6b
 2277 0576 81050000 		.4byte	0x581
 2278 057a 12       		.uleb128 0x12
 2279 057b BC000000 		.4byte	0xbc
 2280 057f 02       		.byte	0x2
 2281 0580 00       		.byte	0
 2282 0581 0E       		.uleb128 0xe
 2283 0582 FA040000 		.4byte	.LASF58
 2284 0586 01       		.byte	0x1
 2285 0587 C304     		.2byte	0x4c3
 2286 0589 77000000 		.4byte	0x77
 2287 058d 00000000 		.4byte	.LFB13
 2288 0591 78000000 		.4byte	.LFE13-.LFB13
 2289 0595 01       		.uleb128 0x1
 2290 0596 9C       		.byte	0x9c
 2291 0597 E7050000 		.4byte	0x5e7
 2292 059b 0C       		.uleb128 0xc
 2293 059c 9D040000 		.4byte	.LASF22
 2294 05a0 01       		.byte	0x1
 2295 05a1 C304     		.2byte	0x4c3
 2296 05a3 6B000000 		.4byte	0x6b
 2297 05a7 02       		.uleb128 0x2
 2298 05a8 91       		.byte	0x91
 2299 05a9 67       		.sleb128 -25
 2300 05aa 0B       		.uleb128 0xb
 2301 05ab AB040000 		.4byte	.LASF47
 2302 05af 01       		.byte	0x1
 2303 05b0 D604     		.2byte	0x4d6
 2304 05b2 6B000000 		.4byte	0x6b
 2305 05b6 02       		.uleb128 0x2
 2306 05b7 91       		.byte	0x91
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 66


 2307 05b8 6B       		.sleb128 -21
 2308 05b9 0B       		.uleb128 0xb
 2309 05ba F2010000 		.4byte	.LASF55
 2310 05be 01       		.byte	0x1
 2311 05bf D704     		.2byte	0x4d7
 2312 05c1 77000000 		.4byte	0x77
 2313 05c5 02       		.uleb128 0x2
 2314 05c6 91       		.byte	0x91
 2315 05c7 6E       		.sleb128 -18
 2316 05c8 0B       		.uleb128 0xb
 2317 05c9 29050000 		.4byte	.LASF45
 2318 05cd 01       		.byte	0x1
 2319 05ce D804     		.2byte	0x4d8
 2320 05d0 6B000000 		.4byte	0x6b
 2321 05d4 02       		.uleb128 0x2
 2322 05d5 91       		.byte	0x91
 2323 05d6 6D       		.sleb128 -19
 2324 05d7 0B       		.uleb128 0xb
 2325 05d8 00000000 		.4byte	.LASF46
 2326 05dc 01       		.byte	0x1
 2327 05dd D904     		.2byte	0x4d9
 2328 05df 6B000000 		.4byte	0x6b
 2329 05e3 02       		.uleb128 0x2
 2330 05e4 91       		.byte	0x91
 2331 05e5 6C       		.sleb128 -20
 2332 05e6 00       		.byte	0
 2333 05e7 11       		.uleb128 0x11
 2334 05e8 77000000 		.4byte	0x77
 2335 05ec F7050000 		.4byte	0x5f7
 2336 05f0 12       		.uleb128 0x12
 2337 05f1 BC000000 		.4byte	0xbc
 2338 05f5 06       		.byte	0x6
 2339 05f6 00       		.byte	0
 2340 05f7 13       		.uleb128 0x13
 2341 05f8 44050000 		.4byte	.LASF59
 2342 05fc 03       		.byte	0x3
 2343 05fd BF02     		.2byte	0x2bf
 2344 05ff E7050000 		.4byte	0x5e7
 2345 0603 11       		.uleb128 0x11
 2346 0604 6B000000 		.4byte	0x6b
 2347 0608 13060000 		.4byte	0x613
 2348 060c 12       		.uleb128 0x12
 2349 060d BC000000 		.4byte	0xbc
 2350 0611 00       		.byte	0
 2351 0612 00       		.byte	0
 2352 0613 13       		.uleb128 0x13
 2353 0614 58020000 		.4byte	.LASF60
 2354 0618 04       		.byte	0x4
 2355 0619 0501     		.2byte	0x105
 2356 061b 03060000 		.4byte	0x603
 2357 061f 11       		.uleb128 0x11
 2358 0620 6B000000 		.4byte	0x6b
 2359 0624 2F060000 		.4byte	0x62f
 2360 0628 12       		.uleb128 0x12
 2361 0629 BC000000 		.4byte	0xbc
 2362 062d 06       		.byte	0x6
 2363 062e 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 67


 2364 062f 13       		.uleb128 0x13
 2365 0630 72010000 		.4byte	.LASF61
 2366 0634 04       		.byte	0x4
 2367 0635 0601     		.2byte	0x106
 2368 0637 3B060000 		.4byte	0x63b
 2369 063b 14       		.uleb128 0x14
 2370 063c 1F060000 		.4byte	0x61f
 2371 0640 15       		.uleb128 0x15
 2372 0641 E2040000 		.4byte	.LASF62
 2373 0645 01       		.byte	0x1
 2374 0646 29       		.byte	0x29
 2375 0647 E7050000 		.4byte	0x5e7
 2376 064b 05       		.uleb128 0x5
 2377 064c 03       		.byte	0x3
 2378 064d 00000000 		.4byte	CapSense_sensorBaseline
 2379 0651 15       		.uleb128 0x15
 2380 0652 0D020000 		.4byte	.LASF63
 2381 0656 01       		.byte	0x1
 2382 0657 2A       		.byte	0x2a
 2383 0658 1F060000 		.4byte	0x61f
 2384 065c 05       		.uleb128 0x5
 2385 065d 03       		.byte	0x3
 2386 065e 00000000 		.4byte	CapSense_sensorBaselineLow
 2387 0662 15       		.uleb128 0x15
 2388 0663 76000000 		.4byte	.LASF64
 2389 0667 01       		.byte	0x1
 2390 0668 2B       		.byte	0x2b
 2391 0669 1F060000 		.4byte	0x61f
 2392 066d 05       		.uleb128 0x5
 2393 066e 03       		.byte	0x3
 2394 066f 00000000 		.4byte	CapSense_sensorSignal
 2395 0673 15       		.uleb128 0x15
 2396 0674 31000000 		.4byte	.LASF65
 2397 0678 01       		.byte	0x1
 2398 0679 2C       		.byte	0x2c
 2399 067a 03060000 		.4byte	0x603
 2400 067e 05       		.uleb128 0x5
 2401 067f 03       		.byte	0x3
 2402 0680 00000000 		.4byte	CapSense_sensorOnMask
 2403 0684 15       		.uleb128 0x15
 2404 0685 D3020000 		.4byte	.LASF66
 2405 0689 01       		.byte	0x1
 2406 068a 2E       		.byte	0x2e
 2407 068b 1F060000 		.4byte	0x61f
 2408 068f 05       		.uleb128 0x5
 2409 0690 03       		.byte	0x3
 2410 0691 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2411 0695 15       		.uleb128 0x15
 2412 0696 04040000 		.4byte	.LASF67
 2413 069a 01       		.byte	0x1
 2414 069b 30       		.byte	0x30
 2415 069c 71050000 		.4byte	0x571
 2416 06a0 05       		.uleb128 0x5
 2417 06a1 03       		.byte	0x3
 2418 06a2 00000000 		.4byte	CapSense_fingerThreshold
 2419 06a6 15       		.uleb128 0x15
 2420 06a7 5E030000 		.4byte	.LASF68
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 68


 2421 06ab 01       		.byte	0x1
 2422 06ac 34       		.byte	0x34
 2423 06ad 71050000 		.4byte	0x571
 2424 06b1 05       		.uleb128 0x5
 2425 06b2 03       		.byte	0x3
 2426 06b3 00000000 		.4byte	CapSense_noiseThreshold
 2427 06b7 15       		.uleb128 0x15
 2428 06b8 1D000000 		.4byte	.LASF69
 2429 06bc 01       		.byte	0x1
 2430 06bd 38       		.byte	0x38
 2431 06be 71050000 		.4byte	0x571
 2432 06c2 05       		.uleb128 0x5
 2433 06c3 03       		.byte	0x3
 2434 06c4 00000000 		.4byte	CapSense_hysteresis
 2435 06c8 15       		.uleb128 0x15
 2436 06c9 D0040000 		.4byte	.LASF70
 2437 06cd 01       		.byte	0x1
 2438 06ce 3C       		.byte	0x3c
 2439 06cf 71050000 		.4byte	0x571
 2440 06d3 05       		.uleb128 0x5
 2441 06d4 03       		.byte	0x3
 2442 06d5 00000000 		.4byte	CapSense_debounce
 2443 06d9 15       		.uleb128 0x15
 2444 06da 6D050000 		.4byte	.LASF71
 2445 06de 01       		.byte	0x1
 2446 06df 40       		.byte	0x40
 2447 06e0 71050000 		.4byte	0x571
 2448 06e4 05       		.uleb128 0x5
 2449 06e5 03       		.byte	0x3
 2450 06e6 00000000 		.4byte	CapSense_debounceCounter
 2451 06ea 15       		.uleb128 0x15
 2452 06eb 28020000 		.4byte	.LASF72
 2453 06ef 01       		.byte	0x1
 2454 06f0 44       		.byte	0x44
 2455 06f1 FB060000 		.4byte	0x6fb
 2456 06f5 05       		.uleb128 0x5
 2457 06f6 03       		.byte	0x3
 2458 06f7 00000000 		.4byte	CapSense_rawDataIndex
 2459 06fb 14       		.uleb128 0x14
 2460 06fc 71050000 		.4byte	0x571
 2461 0700 15       		.uleb128 0x15
 2462 0701 8E050000 		.4byte	.LASF73
 2463 0705 01       		.byte	0x1
 2464 0706 4B       		.byte	0x4b
 2465 0707 11070000 		.4byte	0x711
 2466 070b 05       		.uleb128 0x5
 2467 070c 03       		.byte	0x3
 2468 070d 00000000 		.4byte	CapSense_numberOfSensors
 2469 0711 14       		.uleb128 0x14
 2470 0712 71050000 		.4byte	0x571
 2471 0716 11       		.uleb128 0x11
 2472 0717 77000000 		.4byte	0x77
 2473 071b 26070000 		.4byte	0x726
 2474 071f 12       		.uleb128 0x12
 2475 0720 BC000000 		.4byte	0xbc
 2476 0724 00       		.byte	0
 2477 0725 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 69


 2478 0726 15       		.uleb128 0x15
 2479 0727 1D040000 		.4byte	.LASF74
 2480 072b 01       		.byte	0x1
 2481 072c 52       		.byte	0x52
 2482 072d 37070000 		.4byte	0x737
 2483 0731 05       		.uleb128 0x5
 2484 0732 03       		.byte	0x3
 2485 0733 00000000 		.4byte	CapSense_centroidMult
 2486 0737 14       		.uleb128 0x14
 2487 0738 16070000 		.4byte	0x716
 2488 073c 00       		.byte	0
 2489              		.section	.debug_abbrev,"",%progbits
 2490              	.Ldebug_abbrev0:
 2491 0000 01       		.uleb128 0x1
 2492 0001 11       		.uleb128 0x11
 2493 0002 01       		.byte	0x1
 2494 0003 25       		.uleb128 0x25
 2495 0004 0E       		.uleb128 0xe
 2496 0005 13       		.uleb128 0x13
 2497 0006 0B       		.uleb128 0xb
 2498 0007 03       		.uleb128 0x3
 2499 0008 0E       		.uleb128 0xe
 2500 0009 1B       		.uleb128 0x1b
 2501 000a 0E       		.uleb128 0xe
 2502 000b 55       		.uleb128 0x55
 2503 000c 17       		.uleb128 0x17
 2504 000d 11       		.uleb128 0x11
 2505 000e 01       		.uleb128 0x1
 2506 000f 10       		.uleb128 0x10
 2507 0010 17       		.uleb128 0x17
 2508 0011 00       		.byte	0
 2509 0012 00       		.byte	0
 2510 0013 02       		.uleb128 0x2
 2511 0014 24       		.uleb128 0x24
 2512 0015 00       		.byte	0
 2513 0016 0B       		.uleb128 0xb
 2514 0017 0B       		.uleb128 0xb
 2515 0018 3E       		.uleb128 0x3e
 2516 0019 0B       		.uleb128 0xb
 2517 001a 03       		.uleb128 0x3
 2518 001b 0E       		.uleb128 0xe
 2519 001c 00       		.byte	0
 2520 001d 00       		.byte	0
 2521 001e 03       		.uleb128 0x3
 2522 001f 24       		.uleb128 0x24
 2523 0020 00       		.byte	0
 2524 0021 0B       		.uleb128 0xb
 2525 0022 0B       		.uleb128 0xb
 2526 0023 3E       		.uleb128 0x3e
 2527 0024 0B       		.uleb128 0xb
 2528 0025 03       		.uleb128 0x3
 2529 0026 08       		.uleb128 0x8
 2530 0027 00       		.byte	0
 2531 0028 00       		.byte	0
 2532 0029 04       		.uleb128 0x4
 2533 002a 16       		.uleb128 0x16
 2534 002b 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 70


 2535 002c 03       		.uleb128 0x3
 2536 002d 0E       		.uleb128 0xe
 2537 002e 3A       		.uleb128 0x3a
 2538 002f 0B       		.uleb128 0xb
 2539 0030 3B       		.uleb128 0x3b
 2540 0031 05       		.uleb128 0x5
 2541 0032 49       		.uleb128 0x49
 2542 0033 13       		.uleb128 0x13
 2543 0034 00       		.byte	0
 2544 0035 00       		.byte	0
 2545 0036 05       		.uleb128 0x5
 2546 0037 2E       		.uleb128 0x2e
 2547 0038 01       		.byte	0x1
 2548 0039 3F       		.uleb128 0x3f
 2549 003a 19       		.uleb128 0x19
 2550 003b 03       		.uleb128 0x3
 2551 003c 0E       		.uleb128 0xe
 2552 003d 3A       		.uleb128 0x3a
 2553 003e 0B       		.uleb128 0xb
 2554 003f 3B       		.uleb128 0x3b
 2555 0040 0B       		.uleb128 0xb
 2556 0041 27       		.uleb128 0x27
 2557 0042 19       		.uleb128 0x19
 2558 0043 11       		.uleb128 0x11
 2559 0044 01       		.uleb128 0x1
 2560 0045 12       		.uleb128 0x12
 2561 0046 06       		.uleb128 0x6
 2562 0047 40       		.uleb128 0x40
 2563 0048 18       		.uleb128 0x18
 2564 0049 9742     		.uleb128 0x2117
 2565 004b 19       		.uleb128 0x19
 2566 004c 01       		.uleb128 0x1
 2567 004d 13       		.uleb128 0x13
 2568 004e 00       		.byte	0
 2569 004f 00       		.byte	0
 2570 0050 06       		.uleb128 0x6
 2571 0051 05       		.uleb128 0x5
 2572 0052 00       		.byte	0
 2573 0053 03       		.uleb128 0x3
 2574 0054 0E       		.uleb128 0xe
 2575 0055 3A       		.uleb128 0x3a
 2576 0056 0B       		.uleb128 0xb
 2577 0057 3B       		.uleb128 0x3b
 2578 0058 0B       		.uleb128 0xb
 2579 0059 49       		.uleb128 0x49
 2580 005a 13       		.uleb128 0x13
 2581 005b 02       		.uleb128 0x2
 2582 005c 18       		.uleb128 0x18
 2583 005d 00       		.byte	0
 2584 005e 00       		.byte	0
 2585 005f 07       		.uleb128 0x7
 2586 0060 34       		.uleb128 0x34
 2587 0061 00       		.byte	0
 2588 0062 03       		.uleb128 0x3
 2589 0063 0E       		.uleb128 0xe
 2590 0064 3A       		.uleb128 0x3a
 2591 0065 0B       		.uleb128 0xb
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 71


 2592 0066 3B       		.uleb128 0x3b
 2593 0067 0B       		.uleb128 0xb
 2594 0068 49       		.uleb128 0x49
 2595 0069 13       		.uleb128 0x13
 2596 006a 02       		.uleb128 0x2
 2597 006b 18       		.uleb128 0x18
 2598 006c 00       		.byte	0
 2599 006d 00       		.byte	0
 2600 006e 08       		.uleb128 0x8
 2601 006f 2E       		.uleb128 0x2e
 2602 0070 01       		.byte	0x1
 2603 0071 3F       		.uleb128 0x3f
 2604 0072 19       		.uleb128 0x19
 2605 0073 03       		.uleb128 0x3
 2606 0074 0E       		.uleb128 0xe
 2607 0075 3A       		.uleb128 0x3a
 2608 0076 0B       		.uleb128 0xb
 2609 0077 3B       		.uleb128 0x3b
 2610 0078 0B       		.uleb128 0xb
 2611 0079 27       		.uleb128 0x27
 2612 007a 19       		.uleb128 0x19
 2613 007b 11       		.uleb128 0x11
 2614 007c 01       		.uleb128 0x1
 2615 007d 12       		.uleb128 0x12
 2616 007e 06       		.uleb128 0x6
 2617 007f 40       		.uleb128 0x40
 2618 0080 18       		.uleb128 0x18
 2619 0081 9642     		.uleb128 0x2116
 2620 0083 19       		.uleb128 0x19
 2621 0084 01       		.uleb128 0x1
 2622 0085 13       		.uleb128 0x13
 2623 0086 00       		.byte	0
 2624 0087 00       		.byte	0
 2625 0088 09       		.uleb128 0x9
 2626 0089 2E       		.uleb128 0x2e
 2627 008a 01       		.byte	0x1
 2628 008b 3F       		.uleb128 0x3f
 2629 008c 19       		.uleb128 0x19
 2630 008d 03       		.uleb128 0x3
 2631 008e 0E       		.uleb128 0xe
 2632 008f 3A       		.uleb128 0x3a
 2633 0090 0B       		.uleb128 0xb
 2634 0091 3B       		.uleb128 0x3b
 2635 0092 05       		.uleb128 0x5
 2636 0093 27       		.uleb128 0x27
 2637 0094 19       		.uleb128 0x19
 2638 0095 11       		.uleb128 0x11
 2639 0096 01       		.uleb128 0x1
 2640 0097 12       		.uleb128 0x12
 2641 0098 06       		.uleb128 0x6
 2642 0099 40       		.uleb128 0x40
 2643 009a 18       		.uleb128 0x18
 2644 009b 9642     		.uleb128 0x2116
 2645 009d 19       		.uleb128 0x19
 2646 009e 01       		.uleb128 0x1
 2647 009f 13       		.uleb128 0x13
 2648 00a0 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 72


 2649 00a1 00       		.byte	0
 2650 00a2 0A       		.uleb128 0xa
 2651 00a3 34       		.uleb128 0x34
 2652 00a4 00       		.byte	0
 2653 00a5 03       		.uleb128 0x3
 2654 00a6 08       		.uleb128 0x8
 2655 00a7 3A       		.uleb128 0x3a
 2656 00a8 0B       		.uleb128 0xb
 2657 00a9 3B       		.uleb128 0x3b
 2658 00aa 05       		.uleb128 0x5
 2659 00ab 49       		.uleb128 0x49
 2660 00ac 13       		.uleb128 0x13
 2661 00ad 02       		.uleb128 0x2
 2662 00ae 18       		.uleb128 0x18
 2663 00af 00       		.byte	0
 2664 00b0 00       		.byte	0
 2665 00b1 0B       		.uleb128 0xb
 2666 00b2 34       		.uleb128 0x34
 2667 00b3 00       		.byte	0
 2668 00b4 03       		.uleb128 0x3
 2669 00b5 0E       		.uleb128 0xe
 2670 00b6 3A       		.uleb128 0x3a
 2671 00b7 0B       		.uleb128 0xb
 2672 00b8 3B       		.uleb128 0x3b
 2673 00b9 05       		.uleb128 0x5
 2674 00ba 49       		.uleb128 0x49
 2675 00bb 13       		.uleb128 0x13
 2676 00bc 02       		.uleb128 0x2
 2677 00bd 18       		.uleb128 0x18
 2678 00be 00       		.byte	0
 2679 00bf 00       		.byte	0
 2680 00c0 0C       		.uleb128 0xc
 2681 00c1 05       		.uleb128 0x5
 2682 00c2 00       		.byte	0
 2683 00c3 03       		.uleb128 0x3
 2684 00c4 0E       		.uleb128 0xe
 2685 00c5 3A       		.uleb128 0x3a
 2686 00c6 0B       		.uleb128 0xb
 2687 00c7 3B       		.uleb128 0x3b
 2688 00c8 05       		.uleb128 0x5
 2689 00c9 49       		.uleb128 0x49
 2690 00ca 13       		.uleb128 0x13
 2691 00cb 02       		.uleb128 0x2
 2692 00cc 18       		.uleb128 0x18
 2693 00cd 00       		.byte	0
 2694 00ce 00       		.byte	0
 2695 00cf 0D       		.uleb128 0xd
 2696 00d0 2E       		.uleb128 0x2e
 2697 00d1 01       		.byte	0x1
 2698 00d2 3F       		.uleb128 0x3f
 2699 00d3 19       		.uleb128 0x19
 2700 00d4 03       		.uleb128 0x3
 2701 00d5 0E       		.uleb128 0xe
 2702 00d6 3A       		.uleb128 0x3a
 2703 00d7 0B       		.uleb128 0xb
 2704 00d8 3B       		.uleb128 0x3b
 2705 00d9 05       		.uleb128 0x5
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 73


 2706 00da 27       		.uleb128 0x27
 2707 00db 19       		.uleb128 0x19
 2708 00dc 49       		.uleb128 0x49
 2709 00dd 13       		.uleb128 0x13
 2710 00de 11       		.uleb128 0x11
 2711 00df 01       		.uleb128 0x1
 2712 00e0 12       		.uleb128 0x12
 2713 00e1 06       		.uleb128 0x6
 2714 00e2 40       		.uleb128 0x40
 2715 00e3 18       		.uleb128 0x18
 2716 00e4 9742     		.uleb128 0x2117
 2717 00e6 19       		.uleb128 0x19
 2718 00e7 01       		.uleb128 0x1
 2719 00e8 13       		.uleb128 0x13
 2720 00e9 00       		.byte	0
 2721 00ea 00       		.byte	0
 2722 00eb 0E       		.uleb128 0xe
 2723 00ec 2E       		.uleb128 0x2e
 2724 00ed 01       		.byte	0x1
 2725 00ee 3F       		.uleb128 0x3f
 2726 00ef 19       		.uleb128 0x19
 2727 00f0 03       		.uleb128 0x3
 2728 00f1 0E       		.uleb128 0xe
 2729 00f2 3A       		.uleb128 0x3a
 2730 00f3 0B       		.uleb128 0xb
 2731 00f4 3B       		.uleb128 0x3b
 2732 00f5 05       		.uleb128 0x5
 2733 00f6 27       		.uleb128 0x27
 2734 00f7 19       		.uleb128 0x19
 2735 00f8 49       		.uleb128 0x49
 2736 00f9 13       		.uleb128 0x13
 2737 00fa 11       		.uleb128 0x11
 2738 00fb 01       		.uleb128 0x1
 2739 00fc 12       		.uleb128 0x12
 2740 00fd 06       		.uleb128 0x6
 2741 00fe 40       		.uleb128 0x40
 2742 00ff 18       		.uleb128 0x18
 2743 0100 9642     		.uleb128 0x2116
 2744 0102 19       		.uleb128 0x19
 2745 0103 01       		.uleb128 0x1
 2746 0104 13       		.uleb128 0x13
 2747 0105 00       		.byte	0
 2748 0106 00       		.byte	0
 2749 0107 0F       		.uleb128 0xf
 2750 0108 2E       		.uleb128 0x2e
 2751 0109 01       		.byte	0x1
 2752 010a 3F       		.uleb128 0x3f
 2753 010b 19       		.uleb128 0x19
 2754 010c 03       		.uleb128 0x3
 2755 010d 0E       		.uleb128 0xe
 2756 010e 3A       		.uleb128 0x3a
 2757 010f 0B       		.uleb128 0xb
 2758 0110 3B       		.uleb128 0x3b
 2759 0111 05       		.uleb128 0x5
 2760 0112 27       		.uleb128 0x27
 2761 0113 19       		.uleb128 0x19
 2762 0114 11       		.uleb128 0x11
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 74


 2763 0115 01       		.uleb128 0x1
 2764 0116 12       		.uleb128 0x12
 2765 0117 06       		.uleb128 0x6
 2766 0118 40       		.uleb128 0x40
 2767 0119 18       		.uleb128 0x18
 2768 011a 9742     		.uleb128 0x2117
 2769 011c 19       		.uleb128 0x19
 2770 011d 01       		.uleb128 0x1
 2771 011e 13       		.uleb128 0x13
 2772 011f 00       		.byte	0
 2773 0120 00       		.byte	0
 2774 0121 10       		.uleb128 0x10
 2775 0122 0F       		.uleb128 0xf
 2776 0123 00       		.byte	0
 2777 0124 0B       		.uleb128 0xb
 2778 0125 0B       		.uleb128 0xb
 2779 0126 49       		.uleb128 0x49
 2780 0127 13       		.uleb128 0x13
 2781 0128 00       		.byte	0
 2782 0129 00       		.byte	0
 2783 012a 11       		.uleb128 0x11
 2784 012b 01       		.uleb128 0x1
 2785 012c 01       		.byte	0x1
 2786 012d 49       		.uleb128 0x49
 2787 012e 13       		.uleb128 0x13
 2788 012f 01       		.uleb128 0x1
 2789 0130 13       		.uleb128 0x13
 2790 0131 00       		.byte	0
 2791 0132 00       		.byte	0
 2792 0133 12       		.uleb128 0x12
 2793 0134 21       		.uleb128 0x21
 2794 0135 00       		.byte	0
 2795 0136 49       		.uleb128 0x49
 2796 0137 13       		.uleb128 0x13
 2797 0138 2F       		.uleb128 0x2f
 2798 0139 0B       		.uleb128 0xb
 2799 013a 00       		.byte	0
 2800 013b 00       		.byte	0
 2801 013c 13       		.uleb128 0x13
 2802 013d 34       		.uleb128 0x34
 2803 013e 00       		.byte	0
 2804 013f 03       		.uleb128 0x3
 2805 0140 0E       		.uleb128 0xe
 2806 0141 3A       		.uleb128 0x3a
 2807 0142 0B       		.uleb128 0xb
 2808 0143 3B       		.uleb128 0x3b
 2809 0144 05       		.uleb128 0x5
 2810 0145 49       		.uleb128 0x49
 2811 0146 13       		.uleb128 0x13
 2812 0147 3F       		.uleb128 0x3f
 2813 0148 19       		.uleb128 0x19
 2814 0149 3C       		.uleb128 0x3c
 2815 014a 19       		.uleb128 0x19
 2816 014b 00       		.byte	0
 2817 014c 00       		.byte	0
 2818 014d 14       		.uleb128 0x14
 2819 014e 26       		.uleb128 0x26
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 75


 2820 014f 00       		.byte	0
 2821 0150 49       		.uleb128 0x49
 2822 0151 13       		.uleb128 0x13
 2823 0152 00       		.byte	0
 2824 0153 00       		.byte	0
 2825 0154 15       		.uleb128 0x15
 2826 0155 34       		.uleb128 0x34
 2827 0156 00       		.byte	0
 2828 0157 03       		.uleb128 0x3
 2829 0158 0E       		.uleb128 0xe
 2830 0159 3A       		.uleb128 0x3a
 2831 015a 0B       		.uleb128 0xb
 2832 015b 3B       		.uleb128 0x3b
 2833 015c 0B       		.uleb128 0xb
 2834 015d 49       		.uleb128 0x49
 2835 015e 13       		.uleb128 0x13
 2836 015f 3F       		.uleb128 0x3f
 2837 0160 19       		.uleb128 0x19
 2838 0161 02       		.uleb128 0x2
 2839 0162 18       		.uleb128 0x18
 2840 0163 00       		.byte	0
 2841 0164 00       		.byte	0
 2842 0165 00       		.byte	0
 2843              		.section	.debug_aranges,"",%progbits
 2844 0000 84000000 		.4byte	0x84
 2845 0004 0200     		.2byte	0x2
 2846 0006 00000000 		.4byte	.Ldebug_info0
 2847 000a 04       		.byte	0x4
 2848 000b 00       		.byte	0
 2849 000c 0000     		.2byte	0
 2850 000e 0000     		.2byte	0
 2851 0010 00000000 		.4byte	.LFB0
 2852 0014 6C000000 		.4byte	.LFE0-.LFB0
 2853 0018 00000000 		.4byte	.LFB1
 2854 001c 2C000000 		.4byte	.LFE1-.LFB1
 2855 0020 00000000 		.4byte	.LFB2
 2856 0024 26000000 		.4byte	.LFE2-.LFB2
 2857 0028 00000000 		.4byte	.LFB3
 2858 002c 6C000000 		.4byte	.LFE3-.LFB3
 2859 0030 00000000 		.4byte	.LFB4
 2860 0034 50010000 		.4byte	.LFE4-.LFB4
 2861 0038 00000000 		.4byte	.LFB5
 2862 003c 50000000 		.4byte	.LFE5-.LFB5
 2863 0040 00000000 		.4byte	.LFB6
 2864 0044 20010000 		.4byte	.LFE6-.LFB6
 2865 0048 00000000 		.4byte	.LFB7
 2866 004c 54000000 		.4byte	.LFE7-.LFB7
 2867 0050 00000000 		.4byte	.LFB8
 2868 0054 38000000 		.4byte	.LFE8-.LFB8
 2869 0058 00000000 		.4byte	.LFB9
 2870 005c 68000000 		.4byte	.LFE9-.LFB9
 2871 0060 00000000 		.4byte	.LFB10
 2872 0064 6C000000 		.4byte	.LFE10-.LFB10
 2873 0068 00000000 		.4byte	.LFB11
 2874 006c 74000000 		.4byte	.LFE11-.LFB11
 2875 0070 00000000 		.4byte	.LFB12
 2876 0074 54010000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 76


 2877 0078 00000000 		.4byte	.LFB13
 2878 007c 78000000 		.4byte	.LFE13-.LFB13
 2879 0080 00000000 		.4byte	0
 2880 0084 00000000 		.4byte	0
 2881              		.section	.debug_ranges,"",%progbits
 2882              	.Ldebug_ranges0:
 2883 0000 00000000 		.4byte	.LFB0
 2884 0004 6C000000 		.4byte	.LFE0
 2885 0008 00000000 		.4byte	.LFB1
 2886 000c 2C000000 		.4byte	.LFE1
 2887 0010 00000000 		.4byte	.LFB2
 2888 0014 26000000 		.4byte	.LFE2
 2889 0018 00000000 		.4byte	.LFB3
 2890 001c 6C000000 		.4byte	.LFE3
 2891 0020 00000000 		.4byte	.LFB4
 2892 0024 50010000 		.4byte	.LFE4
 2893 0028 00000000 		.4byte	.LFB5
 2894 002c 50000000 		.4byte	.LFE5
 2895 0030 00000000 		.4byte	.LFB6
 2896 0034 20010000 		.4byte	.LFE6
 2897 0038 00000000 		.4byte	.LFB7
 2898 003c 54000000 		.4byte	.LFE7
 2899 0040 00000000 		.4byte	.LFB8
 2900 0044 38000000 		.4byte	.LFE8
 2901 0048 00000000 		.4byte	.LFB9
 2902 004c 68000000 		.4byte	.LFE9
 2903 0050 00000000 		.4byte	.LFB10
 2904 0054 6C000000 		.4byte	.LFE10
 2905 0058 00000000 		.4byte	.LFB11
 2906 005c 74000000 		.4byte	.LFE11
 2907 0060 00000000 		.4byte	.LFB12
 2908 0064 54010000 		.4byte	.LFE12
 2909 0068 00000000 		.4byte	.LFB13
 2910 006c 78000000 		.4byte	.LFE13
 2911 0070 00000000 		.4byte	0
 2912 0074 00000000 		.4byte	0
 2913              		.section	.debug_line,"",%progbits
 2914              	.Ldebug_line0:
 2915 0000 CC020000 		.section	.debug_str,"MS",%progbits,1
 2915      02006D00 
 2915      00000201 
 2915      FB0E0D00 
 2915      01010101 
 2916              	.LASF46:
 2917 0000 636F756E 		.ascii	"count\000"
 2917      7400
 2918              	.LASF10:
 2919 0006 75696E74 		.ascii	"uint16\000"
 2919      313600
 2920              	.LASF28:
 2921 000d 66696C74 		.ascii	"filteredRawData\000"
 2921      65726564 
 2921      52617744 
 2921      61746100 
 2922              	.LASF69:
 2923 001d 43617053 		.ascii	"CapSense_hysteresis\000"
 2923      656E7365 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 77


 2923      5F687973 
 2923      74657265 
 2923      73697300 
 2924              	.LASF65:
 2925 0031 43617053 		.ascii	"CapSense_sensorOnMask\000"
 2925      656E7365 
 2925      5F73656E 
 2925      736F724F 
 2925      6E4D6173 
 2926              	.LASF33:
 2927 0047 66696E67 		.ascii	"fingerThreshold\000"
 2927      65725468 
 2927      72657368 
 2927      6F6C6400 
 2928              	.LASF52:
 2929 0057 706F7350 		.ascii	"posPrev\000"
 2929      72657600 
 2930              	.LASF7:
 2931 005f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2931      206C6F6E 
 2931      6720756E 
 2931      7369676E 
 2931      65642069 
 2932              	.LASF64:
 2933 0076 43617053 		.ascii	"CapSense_sensorSignal\000"
 2933      656E7365 
 2933      5F73656E 
 2933      736F7253 
 2933      69676E61 
 2934              	.LASF23:
 2935 008c 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 2935      656E7365 
 2935      5F496E69 
 2935      7469616C 
 2935      697A6545 
 2936              	.LASF30:
 2937 00b0 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 2937      656E7365 
 2937      5F557064 
 2937      61746545 
 2937      6E61626C 
 2938              	.LASF6:
 2939 00d0 6C6F6E67 		.ascii	"long long int\000"
 2939      206C6F6E 
 2939      6720696E 
 2939      7400
 2940              	.LASF0:
 2941 00de 7369676E 		.ascii	"signed char\000"
 2941      65642063 
 2941      68617200 
 2942              	.LASF43:
 2943 00ea 43617053 		.ascii	"CapSense_DisableWidget\000"
 2943      656E7365 
 2943      5F446973 
 2943      61626C65 
 2943      57696467 
 2944              	.LASF38:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 78


 2945 0101 72617749 		.ascii	"rawIndex\000"
 2945      6E646578 
 2945      00
 2946              	.LASF39:
 2947 010a 6E756D62 		.ascii	"numberOfSensors\000"
 2947      65724F66 
 2947      53656E73 
 2947      6F727300 
 2948              	.LASF13:
 2949 011a 696E7433 		.ascii	"int32\000"
 2949      3200
 2950              	.LASF40:
 2951 0120 73746174 		.ascii	"state\000"
 2951      6500
 2952              	.LASF4:
 2953 0126 6C6F6E67 		.ascii	"long int\000"
 2953      20696E74 
 2953      00
 2954              	.LASF56:
 2955 012f 6E756D65 		.ascii	"numerator\000"
 2955      7261746F 
 2955      7200
 2956              	.LASF41:
 2957 0139 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 2957      656E7365 
 2957      5F436865 
 2957      636B4973 
 2957      416E7957 
 2958              	.LASF57:
 2959 0159 64656E6F 		.ascii	"denominator\000"
 2959      6D696E61 
 2959      746F7200 
 2960              	.LASF9:
 2961 0165 75696E74 		.ascii	"uint8\000"
 2961      3800
 2962              	.LASF15:
 2963 016b 646F7562 		.ascii	"double\000"
 2963      6C6500
 2964              	.LASF61:
 2965 0172 43617053 		.ascii	"CapSense_widgetNumber\000"
 2965      656E7365 
 2965      5F776964 
 2965      6765744E 
 2965      756D6265 
 2966              	.LASF11:
 2967 0188 75696E74 		.ascii	"uint32\000"
 2967      333200
 2968              	.LASF34:
 2969 018f 68797374 		.ascii	"hysteresis\000"
 2969      65726573 
 2969      697300
 2970              	.LASF53:
 2971 019a 706F734E 		.ascii	"posNext\000"
 2971      65787400 
 2972              	.LASF49:
 2973 01a2 73746172 		.ascii	"startOfSlider\000"
 2973      744F6653 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 79


 2973      6C696465 
 2973      7200
 2974              	.LASF48:
 2975 01b0 74656D70 		.ascii	"temp\000"
 2975      00
 2976              	.LASF77:
 2977 01b5 443A5C50 		.ascii	"D:\\Projects\\ESD\\PSoC\\Workspace\\light_1506.cyds"
 2977      726F6A65 
 2977      6374735C 
 2977      4553445C 
 2977      50536F43 
 2978 01e3 6E00     		.ascii	"n\000"
 2979              	.LASF8:
 2980 01e5 756E7369 		.ascii	"unsigned int\000"
 2980      676E6564 
 2980      20696E74 
 2980      00
 2981              	.LASF55:
 2982 01f2 706F7369 		.ascii	"position\000"
 2982      74696F6E 
 2982      00
 2983              	.LASF5:
 2984 01fb 6C6F6E67 		.ascii	"long unsigned int\000"
 2984      20756E73 
 2984      69676E65 
 2984      6420696E 
 2984      7400
 2985              	.LASF63:
 2986 020d 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 2986      656E7365 
 2986      5F73656E 
 2986      736F7242 
 2986      6173656C 
 2987              	.LASF72:
 2988 0228 43617053 		.ascii	"CapSense_rawDataIndex\000"
 2988      656E7365 
 2988      5F726177 
 2988      44617461 
 2988      496E6465 
 2989              	.LASF3:
 2990 023e 73686F72 		.ascii	"short unsigned int\000"
 2990      7420756E 
 2990      7369676E 
 2990      65642069 
 2990      6E7400
 2991              	.LASF20:
 2992 0251 73656E73 		.ascii	"sensor\000"
 2992      6F7200
 2993              	.LASF60:
 2994 0258 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2994      656E7365 
 2994      5F73656E 
 2994      736F7245 
 2994      6E61626C 
 2995              	.LASF44:
 2996 0272 43617053 		.ascii	"CapSense_FindMaximum\000"
 2996      656E7365 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 80


 2996      5F46696E 
 2996      644D6178 
 2996      696D756D 
 2997              	.LASF25:
 2998 0287 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2998      656E7365 
 2998      5F557064 
 2998      61746553 
 2998      656E736F 
 2999              	.LASF76:
 3000 02a5 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 3000      6E657261 
 3000      7465645F 
 3000      536F7572 
 3000      63655C50 
 3001              	.LASF26:
 3002 02ce 63616C63 		.ascii	"calc\000"
 3002      00
 3003              	.LASF66:
 3004 02d3 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 3004      656E7365 
 3004      5F6C6F77 
 3004      42617365 
 3004      6C696E65 
 3005              	.LASF35:
 3006 02f0 6465626F 		.ascii	"debounce\000"
 3006      756E6365 
 3006      00
 3007              	.LASF17:
 3008 02f9 73697A65 		.ascii	"sizetype\000"
 3008      74797065 
 3008      00
 3009              	.LASF42:
 3010 0302 43617053 		.ascii	"CapSense_EnableWidget\000"
 3010      656E7365 
 3010      5F456E61 
 3010      626C6557 
 3010      69646765 
 3011              	.LASF19:
 3012 0318 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3012      656E7365 
 3012      5F496E69 
 3012      7469616C 
 3012      697A6553 
 3013              	.LASF36:
 3014 033a 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3014      656E7365 
 3014      5F436865 
 3014      636B4973 
 3014      53656E73 
 3015              	.LASF24:
 3016 0357 656E4D61 		.ascii	"enMask\000"
 3016      736B00
 3017              	.LASF68:
 3018 035e 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3018      656E7365 
 3018      5F6E6F69 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 81


 3018      73655468 
 3018      72657368 
 3019              	.LASF75:
 3020 0376 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3020      4320342E 
 3020      392E3320 
 3020      32303135 
 3020      30333033 
 3021 03a9 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3021      20726576 
 3021      6973696F 
 3021      6E203232 
 3021      31323230 
 3022 03dc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3022      66756E63 
 3022      74696F6E 
 3022      2D736563 
 3022      74696F6E 
 3023              	.LASF67:
 3024 0404 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3024      656E7365 
 3024      5F66696E 
 3024      67657254 
 3024      68726573 
 3025              	.LASF74:
 3026 041d 43617053 		.ascii	"CapSense_centroidMult\000"
 3026      656E7365 
 3026      5F63656E 
 3026      74726F69 
 3026      644D756C 
 3027              	.LASF14:
 3028 0433 666C6F61 		.ascii	"float\000"
 3028      7400
 3029              	.LASF37:
 3030 0439 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3030      656E7365 
 3030      5F436865 
 3030      636B4973 
 3030      57696467 
 3031              	.LASF1:
 3032 0456 756E7369 		.ascii	"unsigned char\000"
 3032      676E6564 
 3032      20636861 
 3032      7200
 3033              	.LASF21:
 3034 0464 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3034      656E7365 
 3034      5F496E69 
 3034      7469616C 
 3034      697A6541 
 3035              	.LASF29:
 3036 0484 6E6F6973 		.ascii	"noiseThreshold\000"
 3036      65546872 
 3036      6573686F 
 3036      6C6400
 3037              	.LASF2:
 3038 0493 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 82


 3038      7420696E 
 3038      7400
 3039              	.LASF22:
 3040 049d 77696467 		.ascii	"widget\000"
 3040      657400
 3041              	.LASF32:
 3042 04a4 6F6E4D61 		.ascii	"onMask\000"
 3042      736B00
 3043              	.LASF47:
 3044 04ab 6D617869 		.ascii	"maximum\000"
 3044      6D756D00 
 3045              	.LASF18:
 3046 04b3 43617053 		.ascii	"CapSense_BaseInit\000"
 3046      656E7365 
 3046      5F426173 
 3046      65496E69 
 3046      7400
 3047              	.LASF51:
 3048 04c5 7265736F 		.ascii	"resolution\000"
 3048      6C757469 
 3048      6F6E00
 3049              	.LASF70:
 3050 04d0 43617053 		.ascii	"CapSense_debounce\000"
 3050      656E7365 
 3050      5F646562 
 3050      6F756E63 
 3050      6500
 3051              	.LASF62:
 3052 04e2 43617053 		.ascii	"CapSense_sensorBaseline\000"
 3052      656E7365 
 3052      5F73656E 
 3052      736F7242 
 3052      6173656C 
 3053              	.LASF58:
 3054 04fa 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 3054      656E7365 
 3054      5F476574 
 3054      43656E74 
 3054      726F6964 
 3055              	.LASF16:
 3056 0512 63686172 		.ascii	"char\000"
 3056      00
 3057              	.LASF54:
 3058 0517 43617053 		.ascii	"CapSense_centroid\000"
 3058      656E7365 
 3058      5F63656E 
 3058      74726F69 
 3058      6400
 3059              	.LASF45:
 3060 0529 6F666673 		.ascii	"offset\000"
 3060      657400
 3061              	.LASF31:
 3062 0530 6465626F 		.ascii	"debounceIndex\000"
 3062      756E6365 
 3062      496E6465 
 3062      7800
 3063              	.LASF12:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccwkiJlr.s 			page 83


 3064 053e 696E7431 		.ascii	"int16\000"
 3064      3600
 3065              	.LASF59:
 3066 0544 43617053 		.ascii	"CapSense_sensorRaw\000"
 3066      656E7365 
 3066      5F73656E 
 3066      736F7252 
 3066      617700
 3067              	.LASF50:
 3068 0557 43617053 		.ascii	"CapSense_CalcCentroid\000"
 3068      656E7365 
 3068      5F43616C 
 3068      6343656E 
 3068      74726F69 
 3069              	.LASF71:
 3070 056d 43617053 		.ascii	"CapSense_debounceCounter\000"
 3070      656E7365 
 3070      5F646562 
 3070      6F756E63 
 3070      65436F75 
 3071              	.LASF27:
 3072 0586 74656D70 		.ascii	"tempRaw\000"
 3072      52617700 
 3073              	.LASF73:
 3074 058e 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3074      656E7365 
 3074      5F6E756D 
 3074      6265724F 
 3074      6653656E 
 3075              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
