ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_3.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_3_initVar
  19              		.bss
  20              		.type	UART_3_initVar, %object
  21              		.size	UART_3_initVar, 1
  22              	UART_3_initVar:
  23 0000 00       		.space	1
  24              		.comm	UART_3_txBuffer,27,4
  25              		.global	UART_3_txBufferRead
  26              		.type	UART_3_txBufferRead, %object
  27              		.size	UART_3_txBufferRead, 1
  28              	UART_3_txBufferRead:
  29 0001 00       		.space	1
  30              		.global	UART_3_txBufferWrite
  31              		.type	UART_3_txBufferWrite, %object
  32              		.size	UART_3_txBufferWrite, 1
  33              	UART_3_txBufferWrite:
  34 0002 00       		.space	1
  35              		.section	.text.UART_3_Start,"ax",%progbits
  36              		.align	2
  37              		.global	UART_3_Start
  38              		.thumb
  39              		.thumb_func
  40              		.type	UART_3_Start, %function
  41              	UART_3_Start:
  42              	.LFB0:
  43              		.file 1 ".\\Generated_Source\\PSoC5\\UART_3.c"
   1:.\Generated_Source\PSoC5/UART_3.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_3.c **** * File Name: UART_3.c
   3:.\Generated_Source\PSoC5/UART_3.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART_3.c **** *
   5:.\Generated_Source\PSoC5/UART_3.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_3.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_3.c **** *
   8:.\Generated_Source\PSoC5/UART_3.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_3.c **** *
  10:.\Generated_Source\PSoC5/UART_3.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_3.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_3.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_3.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_3.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 2


  15:.\Generated_Source\PSoC5/UART_3.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_3.c **** 
  17:.\Generated_Source\PSoC5/UART_3.c **** #include "UART_3.h"
  18:.\Generated_Source\PSoC5/UART_3.c **** #if (UART_3_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART_3.c ****     #include "UART_3_IntClock.h"
  20:.\Generated_Source\PSoC5/UART_3.c **** #endif /* End UART_3_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART_3.c **** 
  22:.\Generated_Source\PSoC5/UART_3.c **** 
  23:.\Generated_Source\PSoC5/UART_3.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART_3.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART_3.c **** ***************************************/
  26:.\Generated_Source\PSoC5/UART_3.c **** 
  27:.\Generated_Source\PSoC5/UART_3.c **** uint8 UART_3_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART_3.c **** 
  29:.\Generated_Source\PSoC5/UART_3.c **** #if (UART_3_TX_INTERRUPT_ENABLED && UART_3_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART_3.c ****     volatile uint8 UART_3_txBuffer[UART_3_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART_3.c ****     volatile uint8 UART_3_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_3.c **** #endif /* (UART_3_TX_INTERRUPT_ENABLED && UART_3_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART_3.c **** 
  35:.\Generated_Source\PSoC5/UART_3.c **** #if (UART_3_RX_INTERRUPT_ENABLED && (UART_3_RX_ENABLED || UART_3_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART_3.c ****     volatile uint8 UART_3_rxBuffer[UART_3_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART_3.c ****     volatile uint8 UART_3_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART_3.c ****     volatile uint8 UART_3_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART_3.c ****     volatile uint8 UART_3_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART_3.c ****     volatile uint8 UART_3_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART_3.c ****         volatile uint8 UART_3_rxAddressMode = UART_3_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART_3.c ****         volatile uint8 UART_3_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART_3.c **** #endif /* (UART_3_RX_INTERRUPT_ENABLED && (UART_3_RX_ENABLED || UART_3_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART_3.c **** 
  48:.\Generated_Source\PSoC5/UART_3.c **** 
  49:.\Generated_Source\PSoC5/UART_3.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART_3.c **** * Function Name: UART_3_Start
  51:.\Generated_Source\PSoC5/UART_3.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART_3.c **** *
  53:.\Generated_Source\PSoC5/UART_3.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART_3.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART_3.c **** *  UART_3_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART_3.c **** *  UART_3_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART_3.c **** *  UART_3_Enable() function.
  58:.\Generated_Source\PSoC5/UART_3.c **** *
  59:.\Generated_Source\PSoC5/UART_3.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART_3.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_3.c **** *
  62:.\Generated_Source\PSoC5/UART_3.c **** * Return:
  63:.\Generated_Source\PSoC5/UART_3.c **** *  None.
  64:.\Generated_Source\PSoC5/UART_3.c **** *
  65:.\Generated_Source\PSoC5/UART_3.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART_3.c **** *  The UART_3_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART_3.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART_3.c **** *  and set to one (1u) the first time UART_3_Start() is called. This
  69:.\Generated_Source\PSoC5/UART_3.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART_3.c **** *  subsequent calls to the UART_3_Start() routine.
  71:.\Generated_Source\PSoC5/UART_3.c **** *
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 3


  72:.\Generated_Source\PSoC5/UART_3.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART_3.c **** *  No.
  74:.\Generated_Source\PSoC5/UART_3.c **** *
  75:.\Generated_Source\PSoC5/UART_3.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART_3.c **** void UART_3_Start(void) 
  77:.\Generated_Source\PSoC5/UART_3.c **** {
  44              		.loc 1 77 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 00AF     		add	r7, sp, #0
  53              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/UART_3.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART_3.c ****     if(UART_3_initVar == 0u)
  54              		.loc 1 79 0
  55 0004 054B     		ldr	r3, .L3
  56 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  57 0008 002B     		cmp	r3, #0
  58 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/UART_3.c ****     {
  81:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_Init();
  59              		.loc 1 81 0
  60 000c FFF7FEFF 		bl	UART_3_Init
  82:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_initVar = 1u;
  61              		.loc 1 82 0
  62 0010 024B     		ldr	r3, .L3
  63 0012 0122     		movs	r2, #1
  64 0014 1A70     		strb	r2, [r3]
  65              	.L2:
  83:.\Generated_Source\PSoC5/UART_3.c ****     }
  84:.\Generated_Source\PSoC5/UART_3.c **** 
  85:.\Generated_Source\PSoC5/UART_3.c ****     UART_3_Enable();
  66              		.loc 1 85 0
  67 0016 FFF7FEFF 		bl	UART_3_Enable
  86:.\Generated_Source\PSoC5/UART_3.c **** }
  68              		.loc 1 86 0
  69 001a 80BD     		pop	{r7, pc}
  70              	.L4:
  71              		.align	2
  72              	.L3:
  73 001c 00000000 		.word	UART_3_initVar
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	UART_3_Start, .-UART_3_Start
  77              		.section	.text.UART_3_Init,"ax",%progbits
  78              		.align	2
  79              		.global	UART_3_Init
  80              		.thumb
  81              		.thumb_func
  82              		.type	UART_3_Init, %function
  83              	UART_3_Init:
  84              	.LFB1:
  87:.\Generated_Source\PSoC5/UART_3.c **** 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 4


  88:.\Generated_Source\PSoC5/UART_3.c **** 
  89:.\Generated_Source\PSoC5/UART_3.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART_3.c **** * Function Name: UART_3_Init
  91:.\Generated_Source\PSoC5/UART_3.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART_3.c **** *
  93:.\Generated_Source\PSoC5/UART_3.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART_3.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART_3.c **** *  dialog settings. It is not necessary to call UART_3_Init() because
  96:.\Generated_Source\PSoC5/UART_3.c **** *  the UART_3_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART_3.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART_3.c **** *
  99:.\Generated_Source\PSoC5/UART_3.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 101:.\Generated_Source\PSoC5/UART_3.c **** *
 102:.\Generated_Source\PSoC5/UART_3.c **** * Return:
 103:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 104:.\Generated_Source\PSoC5/UART_3.c **** *
 105:.\Generated_Source\PSoC5/UART_3.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART_3.c **** void UART_3_Init(void) 
 107:.\Generated_Source\PSoC5/UART_3.c **** {
  85              		.loc 1 107 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89 0000 80B5     		push	{r7, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 00AF     		add	r7, sp, #0
  94              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/UART_3.c ****     #if(UART_3_RX_ENABLED || UART_3_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART_3.c **** 
 110:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART_3.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART_3.c ****             (void) CyIntSetVector(UART_3_RX_VECT_NUM, &UART_3_RXISR);
 113:.\Generated_Source\PSoC5/UART_3.c ****             CyIntSetPriority(UART_3_RX_VECT_NUM, UART_3_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART_3.c **** 
 117:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_SetRxAddressMode(UART_3_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_SetRxAddress1(UART_3_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_SetRxAddress2(UART_3_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* End UART_3_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART_3.c **** 
 123:.\Generated_Source\PSoC5/UART_3.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXBITCTR_PERIOD_REG = UART_3_RXBITCTR_INIT;
 125:.\Generated_Source\PSoC5/UART_3.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXSTATUS_MASK_REG  = UART_3_INIT_RX_INTERRUPTS_MASK;
 127:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* End UART_3_RX_ENABLED || UART_3_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART_3.c **** 
 129:.\Generated_Source\PSoC5/UART_3.c ****     #if(UART_3_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART_3.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART_3.c ****             (void) CyIntSetVector(UART_3_TX_VECT_NUM, &UART_3_TXISR);
  95              		.loc 1 132 0
  96 0004 0420     		movs	r0, #4
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 5


  97 0006 0849     		ldr	r1, .L6
  98 0008 FFF7FEFF 		bl	CyIntSetVector
 133:.\Generated_Source\PSoC5/UART_3.c ****             CyIntSetPriority(UART_3_TX_VECT_NUM, UART_3_TX_PRIOR_NUM);
  99              		.loc 1 133 0
 100 000c 0420     		movs	r0, #4
 101 000e 0721     		movs	r1, #7
 102 0010 FFF7FEFF 		bl	CyIntSetPriority
 134:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART_3.c **** 
 136:.\Generated_Source\PSoC5/UART_3.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXBITCLKGEN_CTR_REG = UART_3_BIT_CENTER;
 103              		.loc 1 138 0
 104 0014 054B     		ldr	r3, .L6+4
 105 0016 0622     		movs	r2, #6
 106 0018 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXBITCLKTX_COMPLETE_REG = ((UART_3_NUMBER_OF_DATA_BITS +
 107              		.loc 1 139 0
 108 001a 054B     		ldr	r3, .L6+8
 109 001c 4722     		movs	r2, #71
 110 001e 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/UART_3.c ****                         UART_3_NUMBER_OF_START_BIT) * UART_3_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART_3.c ****         #else
 142:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXBITCTR_PERIOD_REG = ((UART_3_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART_3.c ****                         UART_3_NUMBER_OF_START_BIT) * UART_3_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* End UART_3_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART_3.c **** 
 146:.\Generated_Source\PSoC5/UART_3.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXSTATUS_MASK_REG = UART_3_TX_STS_FIFO_EMPTY;
 111              		.loc 1 148 0
 112 0020 044B     		ldr	r3, .L6+12
 113 0022 0222     		movs	r2, #2
 114 0024 1A70     		strb	r2, [r3]
 149:.\Generated_Source\PSoC5/UART_3.c ****         #else
 150:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXSTATUS_MASK_REG = UART_3_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/UART_3.c ****         #endif /*End UART_3_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART_3.c **** 
 153:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* End UART_3_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART_3.c **** 
 155:.\Generated_Source\PSoC5/UART_3.c ****     #if(UART_3_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART_3.c ****             (UART_3_ReadControlRegister() & (uint8)~UART_3_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART_3.c ****             (uint8)(UART_3_PARITY_TYPE << UART_3_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* End UART_3_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART_3.c **** }
 115              		.loc 1 160 0
 116 0026 80BD     		pop	{r7, pc}
 117              	.L7:
 118              		.align	2
 119              	.L6:
 120 0028 00000000 		.word	UART_3_TXISR
 121 002c 25650040 		.word	1073767717
 122 0030 35650040 		.word	1073767733
 123 0034 86650040 		.word	1073767814
 124              		.cfi_endproc
 125              	.LFE1:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 6


 126              		.size	UART_3_Init, .-UART_3_Init
 127              		.section	.text.UART_3_Enable,"ax",%progbits
 128              		.align	2
 129              		.global	UART_3_Enable
 130              		.thumb
 131              		.thumb_func
 132              		.type	UART_3_Enable, %function
 133              	UART_3_Enable:
 134              	.LFB2:
 161:.\Generated_Source\PSoC5/UART_3.c **** 
 162:.\Generated_Source\PSoC5/UART_3.c **** 
 163:.\Generated_Source\PSoC5/UART_3.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART_3.c **** * Function Name: UART_3_Enable
 165:.\Generated_Source\PSoC5/UART_3.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART_3.c **** *
 167:.\Generated_Source\PSoC5/UART_3.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART_3.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART_3.c **** *  to call UART_3_Enable() because the UART_3_Start() API
 170:.\Generated_Source\PSoC5/UART_3.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/UART_3.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART_3.c **** 
 173:.\Generated_Source\PSoC5/UART_3.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 175:.\Generated_Source\PSoC5/UART_3.c **** *
 176:.\Generated_Source\PSoC5/UART_3.c **** * Return:
 177:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 178:.\Generated_Source\PSoC5/UART_3.c **** *
 179:.\Generated_Source\PSoC5/UART_3.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART_3.c **** *  UART_3_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART_3.c **** *
 182:.\Generated_Source\PSoC5/UART_3.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_3.c **** void UART_3_Enable(void) 
 184:.\Generated_Source\PSoC5/UART_3.c **** {
 135              		.loc 1 184 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 82B0     		sub	sp, sp, #8
 144              		.cfi_def_cfa_offset 16
 145 0004 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/UART_3.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART_3.c ****     enableInterrupts = CyEnterCriticalSection();
 147              		.loc 1 186 0
 148 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 149 000a 0346     		mov	r3, r0
 150 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/UART_3.c **** 
 188:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_ENABLED || UART_3_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART_3.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXBITCTR_CONTROL_REG |= UART_3_CNTR_ENABLE;
 191:.\Generated_Source\PSoC5/UART_3.c **** 
 192:.\Generated_Source\PSoC5/UART_3.c ****         /* Enable the RX Interrupt */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 7


 193:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXSTATUS_ACTL_REG  |= UART_3_INT_ENABLE;
 194:.\Generated_Source\PSoC5/UART_3.c **** 
 195:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART_3.c **** 
 198:.\Generated_Source\PSoC5/UART_3.c ****             #if (UART_3_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART_3.c ****             #endif /* (UART_3_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_ENABLED || UART_3_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART_3.c **** 
 204:.\Generated_Source\PSoC5/UART_3.c ****     #if(UART_3_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART_3.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART_3.c ****         #if(!UART_3_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXBITCTR_CONTROL_REG |= UART_3_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* End UART_3_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART_3.c **** 
 210:.\Generated_Source\PSoC5/UART_3.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_TXSTATUS_ACTL_REG |= UART_3_INT_ENABLE;
 151              		.loc 1 211 0
 152 000e 0B4A     		ldr	r2, .L9
 153 0010 0A4B     		ldr	r3, .L9
 154 0012 1B78     		ldrb	r3, [r3]
 155 0014 DBB2     		uxtb	r3, r3
 156 0016 43F01003 		orr	r3, r3, #16
 157 001a DBB2     		uxtb	r3, r3
 158 001c 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 159              		.loc 1 213 0
 160 001e 084B     		ldr	r3, .L9+4
 161 0020 1022     		movs	r2, #16
 162 0022 1A60     		str	r2, [r3]
 214:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_EnableTxInt();
 163              		.loc 1 214 0
 164 0024 074B     		ldr	r3, .L9+8
 165 0026 1022     		movs	r2, #16
 166 0028 1A60     		str	r2, [r3]
 215:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART_3.c ****      #endif /* (UART_3_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART_3.c **** 
 218:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_IntClock_Start();  /* Enable the clock */
 167              		.loc 1 219 0
 168 002a FFF7FEFF 		bl	UART_3_IntClock_Start
 220:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART_3.c **** 
 222:.\Generated_Source\PSoC5/UART_3.c ****     CyExitCriticalSection(enableInterrupts);
 169              		.loc 1 222 0
 170 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 171 0030 1846     		mov	r0, r3
 172 0032 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/UART_3.c **** }
 173              		.loc 1 223 0
 174 0036 0837     		adds	r7, r7, #8
 175              		.cfi_def_cfa_offset 8
 176 0038 BD46     		mov	sp, r7
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 8


 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 003a 80BD     		pop	{r7, pc}
 180              	.L10:
 181              		.align	2
 182              	.L9:
 183 003c 96650040 		.word	1073767830
 184 0040 80E200E0 		.word	-536812928
 185 0044 00E100E0 		.word	-536813312
 186              		.cfi_endproc
 187              	.LFE2:
 188              		.size	UART_3_Enable, .-UART_3_Enable
 189              		.section	.text.UART_3_Stop,"ax",%progbits
 190              		.align	2
 191              		.global	UART_3_Stop
 192              		.thumb
 193              		.thumb_func
 194              		.type	UART_3_Stop, %function
 195              	UART_3_Stop:
 196              	.LFB3:
 224:.\Generated_Source\PSoC5/UART_3.c **** 
 225:.\Generated_Source\PSoC5/UART_3.c **** 
 226:.\Generated_Source\PSoC5/UART_3.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART_3.c **** * Function Name: UART_3_Stop
 228:.\Generated_Source\PSoC5/UART_3.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART_3.c **** *
 230:.\Generated_Source\PSoC5/UART_3.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART_3.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART_3.c **** *
 233:.\Generated_Source\PSoC5/UART_3.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 235:.\Generated_Source\PSoC5/UART_3.c **** *
 236:.\Generated_Source\PSoC5/UART_3.c **** * Return:
 237:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 238:.\Generated_Source\PSoC5/UART_3.c **** *
 239:.\Generated_Source\PSoC5/UART_3.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART_3.c **** void UART_3_Stop(void) 
 241:.\Generated_Source\PSoC5/UART_3.c **** {
 197              		.loc 1 241 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 8
 200              		@ frame_needed = 1, uses_anonymous_args = 0
 201 0000 80B5     		push	{r7, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 82B0     		sub	sp, sp, #8
 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/UART_3.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART_3.c ****     enableInterrupts = CyEnterCriticalSection();
 209              		.loc 1 243 0
 210 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 211 000a 0346     		mov	r3, r0
 212 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/UART_3.c **** 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 9


 245:.\Generated_Source\PSoC5/UART_3.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_ENABLED || UART_3_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXBITCTR_CONTROL_REG &= (uint8) ~UART_3_CNTR_ENABLE;
 248:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_ENABLED || UART_3_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART_3.c **** 
 250:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART_3.c ****         #if(!UART_3_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXBITCTR_CONTROL_REG &= (uint8) ~UART_3_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (!UART_3_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART_3.c **** 
 256:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_IntClock_Stop();   /* Disable the clock */
 213              		.loc 1 257 0
 214 000e FFF7FEFF 		bl	UART_3_IntClock_Stop
 258:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART_3.c **** 
 260:.\Generated_Source\PSoC5/UART_3.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_ENABLED || UART_3_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXSTATUS_ACTL_REG  &= (uint8) ~UART_3_INT_ENABLE;
 263:.\Generated_Source\PSoC5/UART_3.c **** 
 264:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_ENABLED || UART_3_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART_3.c **** 
 269:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_TXSTATUS_ACTL_REG &= (uint8) ~UART_3_INT_ENABLE;
 215              		.loc 1 270 0
 216 0012 094A     		ldr	r2, .L12
 217 0014 084B     		ldr	r3, .L12
 218 0016 1B78     		ldrb	r3, [r3]
 219 0018 DBB2     		uxtb	r3, r3
 220 001a 23F01003 		bic	r3, r3, #16
 221 001e DBB2     		uxtb	r3, r3
 222 0020 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/UART_3.c **** 
 272:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_DisableTxInt();
 223              		.loc 1 273 0
 224 0022 064B     		ldr	r3, .L12+4
 225 0024 1022     		movs	r2, #16
 226 0026 1A60     		str	r2, [r3]
 274:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART_3.c **** 
 277:.\Generated_Source\PSoC5/UART_3.c ****     CyExitCriticalSection(enableInterrupts);
 227              		.loc 1 277 0
 228 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 229 002a 1846     		mov	r0, r3
 230 002c FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/UART_3.c **** }
 231              		.loc 1 278 0
 232 0030 0837     		adds	r7, r7, #8
 233              		.cfi_def_cfa_offset 8
 234 0032 BD46     		mov	sp, r7
 235              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 10


 236              		@ sp needed
 237 0034 80BD     		pop	{r7, pc}
 238              	.L13:
 239 0036 00BF     		.align	2
 240              	.L12:
 241 0038 96650040 		.word	1073767830
 242 003c 80E100E0 		.word	-536813184
 243              		.cfi_endproc
 244              	.LFE3:
 245              		.size	UART_3_Stop, .-UART_3_Stop
 246              		.section	.text.UART_3_ReadControlRegister,"ax",%progbits
 247              		.align	2
 248              		.global	UART_3_ReadControlRegister
 249              		.thumb
 250              		.thumb_func
 251              		.type	UART_3_ReadControlRegister, %function
 252              	UART_3_ReadControlRegister:
 253              	.LFB4:
 279:.\Generated_Source\PSoC5/UART_3.c **** 
 280:.\Generated_Source\PSoC5/UART_3.c **** 
 281:.\Generated_Source\PSoC5/UART_3.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART_3.c **** * Function Name: UART_3_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART_3.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART_3.c **** *
 285:.\Generated_Source\PSoC5/UART_3.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART_3.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART_3.c **** *
 288:.\Generated_Source\PSoC5/UART_3.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 290:.\Generated_Source\PSoC5/UART_3.c **** *
 291:.\Generated_Source\PSoC5/UART_3.c **** * Return:
 292:.\Generated_Source\PSoC5/UART_3.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART_3.c **** *
 294:.\Generated_Source\PSoC5/UART_3.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART_3.c **** uint8 UART_3_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART_3.c **** {
 254              		.loc 1 296 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 1, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259 0000 80B4     		push	{r7}
 260              		.cfi_def_cfa_offset 4
 261              		.cfi_offset 7, -4
 262 0002 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART_3.c ****         return(0u);
 264              		.loc 1 298 0
 265 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/UART_3.c ****     #else
 300:.\Generated_Source\PSoC5/UART_3.c ****         return(UART_3_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART_3.c **** }
 266              		.loc 1 302 0
 267 0006 1846     		mov	r0, r3
 268 0008 BD46     		mov	sp, r7
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 11


 269              		.cfi_def_cfa_register 13
 270              		@ sp needed
 271 000a 5DF8047B 		ldr	r7, [sp], #4
 272              		.cfi_restore 7
 273              		.cfi_def_cfa_offset 0
 274 000e 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE4:
 277              		.size	UART_3_ReadControlRegister, .-UART_3_ReadControlRegister
 278              		.section	.text.UART_3_WriteControlRegister,"ax",%progbits
 279              		.align	2
 280              		.global	UART_3_WriteControlRegister
 281              		.thumb
 282              		.thumb_func
 283              		.type	UART_3_WriteControlRegister, %function
 284              	UART_3_WriteControlRegister:
 285              	.LFB5:
 303:.\Generated_Source\PSoC5/UART_3.c **** 
 304:.\Generated_Source\PSoC5/UART_3.c **** 
 305:.\Generated_Source\PSoC5/UART_3.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART_3.c **** * Function Name: UART_3_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART_3.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART_3.c **** *
 309:.\Generated_Source\PSoC5/UART_3.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART_3.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART_3.c **** *
 312:.\Generated_Source\PSoC5/UART_3.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART_3.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART_3.c **** *
 315:.\Generated_Source\PSoC5/UART_3.c **** * Return:
 316:.\Generated_Source\PSoC5/UART_3.c **** *  None.
 317:.\Generated_Source\PSoC5/UART_3.c **** *
 318:.\Generated_Source\PSoC5/UART_3.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART_3.c **** void  UART_3_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART_3.c **** {
 286              		.loc 1 320 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 8
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291 0000 80B4     		push	{r7}
 292              		.cfi_def_cfa_offset 4
 293              		.cfi_offset 7, -4
 294 0002 83B0     		sub	sp, sp, #12
 295              		.cfi_def_cfa_offset 16
 296 0004 00AF     		add	r7, sp, #0
 297              		.cfi_def_cfa_register 7
 298 0006 0346     		mov	r3, r0
 299 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART_3.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART_3.c ****         {
 324:.\Generated_Source\PSoC5/UART_3.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART_3.c ****         }
 326:.\Generated_Source\PSoC5/UART_3.c ****     #else
 327:.\Generated_Source\PSoC5/UART_3.c ****        UART_3_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_CONTROL_REG_REMOVED) */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 12


 329:.\Generated_Source\PSoC5/UART_3.c **** }
 300              		.loc 1 329 0
 301 000a 0C37     		adds	r7, r7, #12
 302              		.cfi_def_cfa_offset 4
 303 000c BD46     		mov	sp, r7
 304              		.cfi_def_cfa_register 13
 305              		@ sp needed
 306 000e 5DF8047B 		ldr	r7, [sp], #4
 307              		.cfi_restore 7
 308              		.cfi_def_cfa_offset 0
 309 0012 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE5:
 312              		.size	UART_3_WriteControlRegister, .-UART_3_WriteControlRegister
 313              		.section	.text.UART_3_SetTxInterruptMode,"ax",%progbits
 314              		.align	2
 315              		.global	UART_3_SetTxInterruptMode
 316              		.thumb
 317              		.thumb_func
 318              		.type	UART_3_SetTxInterruptMode, %function
 319              	UART_3_SetTxInterruptMode:
 320              	.LFB6:
 330:.\Generated_Source\PSoC5/UART_3.c **** 
 331:.\Generated_Source\PSoC5/UART_3.c **** 
 332:.\Generated_Source\PSoC5/UART_3.c **** #if(UART_3_RX_ENABLED || UART_3_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART_3.c ****     *
 337:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART_3.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART_3.c ****     *
 340:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART_3.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART_3.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART_3.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART_3.c ****     *
 352:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART_3.c ****     *
 355:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART_3.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART_3.c ****     *
 358:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART_3.c ****     {
 361:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXSTATUS_MASK_REG  = intSrc;
 362:.\Generated_Source\PSoC5/UART_3.c ****     }
 363:.\Generated_Source\PSoC5/UART_3.c **** 
 364:.\Generated_Source\PSoC5/UART_3.c **** 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 13


 365:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_ReadRxData
 367:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART_3.c ****     *
 369:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART_3.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART_3.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART_3.c ****     *
 373:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_3.c ****     *
 376:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART_3.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART_3.c ****     *
 379:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART_3.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART_3.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART_3.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART_3.c ****     *
 388:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART_3.c ****     *
 391:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART_3.c ****     {
 394:.\Generated_Source\PSoC5/UART_3.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART_3.c **** 
 396:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART_3.c **** 
 398:.\Generated_Source\PSoC5/UART_3.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART_3.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART_3.c **** 
 401:.\Generated_Source\PSoC5/UART_3.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART_3.c **** 
 404:.\Generated_Source\PSoC5/UART_3.c ****         locRxBufferRead  = UART_3_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART_3.c ****         locRxBufferWrite = UART_3_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART_3.c **** 
 407:.\Generated_Source\PSoC5/UART_3.c ****         if( (UART_3_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART_3.c ****         {
 409:.\Generated_Source\PSoC5/UART_3.c ****             rxData = UART_3_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART_3.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART_3.c **** 
 412:.\Generated_Source\PSoC5/UART_3.c ****             if(locRxBufferRead >= UART_3_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART_3.c ****             {
 414:.\Generated_Source\PSoC5/UART_3.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART_3.c ****             }
 416:.\Generated_Source\PSoC5/UART_3.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART_3.c **** 
 419:.\Generated_Source\PSoC5/UART_3.c ****             if(UART_3_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART_3.c ****             {
 421:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_rxBufferLoopDetect = 0u;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 14


 422:.\Generated_Source\PSoC5/UART_3.c ****                 #if ((UART_3_RX_INTERRUPT_ENABLED) && (UART_3_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART_3.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART_3.c ****                     #if( UART_3_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART_3.c ****                         if((UART_3_CONTROL_REG & UART_3_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART_3.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART_3.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART_3.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART_3.c ****                             */
 430:.\Generated_Source\PSoC5/UART_3.c ****                             UART_3_RXSTATUS_MASK_REG  |= UART_3_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART_3.c ****                         }
 432:.\Generated_Source\PSoC5/UART_3.c ****                     #else
 433:.\Generated_Source\PSoC5/UART_3.c ****                         UART_3_RXSTATUS_MASK_REG  |= UART_3_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART_3.c ****                     #endif /* end UART_3_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART_3.c ****                 #endif /* ((UART_3_RX_INTERRUPT_ENABLED) && (UART_3_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART_3.c ****             }
 437:.\Generated_Source\PSoC5/UART_3.c ****         }
 438:.\Generated_Source\PSoC5/UART_3.c ****         else
 439:.\Generated_Source\PSoC5/UART_3.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/UART_3.c ****             rxData = UART_3_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART_3.c ****         }
 442:.\Generated_Source\PSoC5/UART_3.c **** 
 443:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART_3.c **** 
 445:.\Generated_Source\PSoC5/UART_3.c ****     #else
 446:.\Generated_Source\PSoC5/UART_3.c **** 
 447:.\Generated_Source\PSoC5/UART_3.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART_3.c ****         rxData = UART_3_RXDATA_REG;
 449:.\Generated_Source\PSoC5/UART_3.c **** 
 450:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART_3.c **** 
 452:.\Generated_Source\PSoC5/UART_3.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/UART_3.c ****     }
 454:.\Generated_Source\PSoC5/UART_3.c **** 
 455:.\Generated_Source\PSoC5/UART_3.c **** 
 456:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART_3.c ****     *
 460:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART_3.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART_3.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART_3.c ****     *
 464:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART_3.c ****     *
 467:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART_3.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART_3.c ****     *
 470:.\Generated_Source\PSoC5/UART_3.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART_3.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART_3.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART_3.c ****     *
 476:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART_3.c ****     *   It set to one in RX interrupt when there isn't free space in
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 15


 479:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART_3.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART_3.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART_3.c ****     *
 484:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART_3.c ****     {
 487:.\Generated_Source\PSoC5/UART_3.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART_3.c **** 
 489:.\Generated_Source\PSoC5/UART_3.c ****         status = UART_3_RXSTATUS_REG & UART_3_RX_HW_MASK;
 490:.\Generated_Source\PSoC5/UART_3.c **** 
 491:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART_3.c ****         {
 494:.\Generated_Source\PSoC5/UART_3.c ****             status |= UART_3_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART_3.c ****         }
 497:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART_3.c **** 
 499:.\Generated_Source\PSoC5/UART_3.c ****         return(status);
 500:.\Generated_Source\PSoC5/UART_3.c ****     }
 501:.\Generated_Source\PSoC5/UART_3.c **** 
 502:.\Generated_Source\PSoC5/UART_3.c **** 
 503:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_GetChar
 505:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART_3.c ****     *
 507:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART_3.c ****     *  Returns the last received byte of data. UART_3_GetChar() is
 509:.\Generated_Source\PSoC5/UART_3.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART_3.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART_3.c ****     *
 512:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART_3.c ****     *
 515:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART_3.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART_3.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART_3.c ****     *
 519:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART_3.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART_3.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART_3.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART_3.c ****     *
 528:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART_3.c ****     *
 531:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_GetChar(void) 
 533:.\Generated_Source\PSoC5/UART_3.c ****     {
 534:.\Generated_Source\PSoC5/UART_3.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/UART_3.c ****         uint8 rxStatus;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 16


 536:.\Generated_Source\PSoC5/UART_3.c **** 
 537:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART_3.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART_3.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART_3.c **** 
 541:.\Generated_Source\PSoC5/UART_3.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART_3.c **** 
 544:.\Generated_Source\PSoC5/UART_3.c ****         locRxBufferRead  = UART_3_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART_3.c ****         locRxBufferWrite = UART_3_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART_3.c **** 
 547:.\Generated_Source\PSoC5/UART_3.c ****         if( (UART_3_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART_3.c ****         {
 549:.\Generated_Source\PSoC5/UART_3.c ****             rxData = UART_3_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART_3.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART_3.c ****             if(locRxBufferRead >= UART_3_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART_3.c ****             {
 553:.\Generated_Source\PSoC5/UART_3.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART_3.c ****             }
 555:.\Generated_Source\PSoC5/UART_3.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART_3.c **** 
 558:.\Generated_Source\PSoC5/UART_3.c ****             if(UART_3_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART_3.c ****             {
 560:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART_3.c ****                 #if( (UART_3_RX_INTERRUPT_ENABLED) && (UART_3_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART_3.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART_3.c ****                     #if( UART_3_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART_3.c ****                         if((UART_3_CONTROL_REG & UART_3_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART_3.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART_3.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART_3.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART_3.c ****                             */
 569:.\Generated_Source\PSoC5/UART_3.c ****                             UART_3_RXSTATUS_MASK_REG |= UART_3_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART_3.c ****                         }
 571:.\Generated_Source\PSoC5/UART_3.c ****                     #else
 572:.\Generated_Source\PSoC5/UART_3.c ****                         UART_3_RXSTATUS_MASK_REG |= UART_3_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART_3.c ****                     #endif /* end UART_3_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART_3.c ****                 #endif /* UART_3_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/UART_3.c ****             }
 576:.\Generated_Source\PSoC5/UART_3.c **** 
 577:.\Generated_Source\PSoC5/UART_3.c ****         }
 578:.\Generated_Source\PSoC5/UART_3.c ****         else
 579:.\Generated_Source\PSoC5/UART_3.c ****         {   rxStatus = UART_3_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART_3.c ****             if((rxStatus & UART_3_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART_3.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART_3.c ****                 rxData = UART_3_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART_3.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART_3.c ****                 if((rxStatus & (UART_3_RX_STS_BREAK | UART_3_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART_3.c ****                                 UART_3_RX_STS_STOP_ERROR | UART_3_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART_3.c ****                 {
 587:.\Generated_Source\PSoC5/UART_3.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART_3.c ****                 }
 589:.\Generated_Source\PSoC5/UART_3.c ****             }
 590:.\Generated_Source\PSoC5/UART_3.c ****         }
 591:.\Generated_Source\PSoC5/UART_3.c **** 
 592:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_EnableRxInt();
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 17


 593:.\Generated_Source\PSoC5/UART_3.c **** 
 594:.\Generated_Source\PSoC5/UART_3.c ****     #else
 595:.\Generated_Source\PSoC5/UART_3.c **** 
 596:.\Generated_Source\PSoC5/UART_3.c ****         rxStatus =UART_3_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/UART_3.c ****         if((rxStatus & UART_3_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/UART_3.c ****         {
 599:.\Generated_Source\PSoC5/UART_3.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART_3.c ****             rxData = UART_3_RXDATA_REG;
 601:.\Generated_Source\PSoC5/UART_3.c **** 
 602:.\Generated_Source\PSoC5/UART_3.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART_3.c ****             if((rxStatus & (UART_3_RX_STS_BREAK | UART_3_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART_3.c ****                             UART_3_RX_STS_STOP_ERROR | UART_3_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/UART_3.c ****             {
 606:.\Generated_Source\PSoC5/UART_3.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/UART_3.c ****             }
 608:.\Generated_Source\PSoC5/UART_3.c ****         }
 609:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART_3.c **** 
 611:.\Generated_Source\PSoC5/UART_3.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/UART_3.c ****     }
 613:.\Generated_Source\PSoC5/UART_3.c **** 
 614:.\Generated_Source\PSoC5/UART_3.c **** 
 615:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_GetByte
 617:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART_3.c ****     *
 619:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART_3.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART_3.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART_3.c ****     *
 623:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART_3.c ****     *
 626:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART_3.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART_3.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART_3.c ****     *
 630:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART_3.c ****     *
 633:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART_3.c ****     uint16 UART_3_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART_3.c ****     {
 636:.\Generated_Source\PSoC5/UART_3.c ****         
 637:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART_3.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART_3.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART_3.c ****         locErrorStatus = (uint16)UART_3_errorStatus;
 642:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART_3.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_3_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART_3.c ****     #else
 646:.\Generated_Source\PSoC5/UART_3.c ****         return ( ((uint16)UART_3_ReadRxStatus() << 8u) | UART_3_ReadRxData() );
 647:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* UART_3_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART_3.c ****         
 649:.\Generated_Source\PSoC5/UART_3.c ****     }
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 18


 650:.\Generated_Source\PSoC5/UART_3.c **** 
 651:.\Generated_Source\PSoC5/UART_3.c **** 
 652:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/UART_3.c ****     *
 656:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART_3.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART_3.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART_3.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART_3.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART_3.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART_3.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART_3.c ****     *
 664:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART_3.c ****     *
 667:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART_3.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART_3.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART_3.c ****     *
 671:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART_3.c ****     *
 676:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART_3.c ****     *
 679:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART_3.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART_3.c ****     *
 682:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART_3.c ****                                                             
 685:.\Generated_Source\PSoC5/UART_3.c ****     {
 686:.\Generated_Source\PSoC5/UART_3.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART_3.c **** 
 688:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART_3.c **** 
 690:.\Generated_Source\PSoC5/UART_3.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART_3.c **** 
 693:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_rxBufferRead == UART_3_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART_3.c ****         {
 695:.\Generated_Source\PSoC5/UART_3.c ****             if(UART_3_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART_3.c ****             {
 697:.\Generated_Source\PSoC5/UART_3.c ****                 size = UART_3_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART_3.c ****             }
 699:.\Generated_Source\PSoC5/UART_3.c ****             else
 700:.\Generated_Source\PSoC5/UART_3.c ****             {
 701:.\Generated_Source\PSoC5/UART_3.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART_3.c ****             }
 703:.\Generated_Source\PSoC5/UART_3.c ****         }
 704:.\Generated_Source\PSoC5/UART_3.c ****         else if(UART_3_rxBufferRead < UART_3_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART_3.c ****         {
 706:.\Generated_Source\PSoC5/UART_3.c ****             size = (UART_3_rxBufferWrite - UART_3_rxBufferRead);
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 19


 707:.\Generated_Source\PSoC5/UART_3.c ****         }
 708:.\Generated_Source\PSoC5/UART_3.c ****         else
 709:.\Generated_Source\PSoC5/UART_3.c ****         {
 710:.\Generated_Source\PSoC5/UART_3.c ****             size = (UART_3_RX_BUFFER_SIZE - UART_3_rxBufferRead) + UART_3_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART_3.c ****         }
 712:.\Generated_Source\PSoC5/UART_3.c **** 
 713:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART_3.c **** 
 715:.\Generated_Source\PSoC5/UART_3.c ****     #else
 716:.\Generated_Source\PSoC5/UART_3.c **** 
 717:.\Generated_Source\PSoC5/UART_3.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART_3.c ****         size = ((UART_3_RXSTATUS_REG & UART_3_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/UART_3.c **** 
 720:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART_3.c **** 
 722:.\Generated_Source\PSoC5/UART_3.c ****         return(size);
 723:.\Generated_Source\PSoC5/UART_3.c ****     }
 724:.\Generated_Source\PSoC5/UART_3.c **** 
 725:.\Generated_Source\PSoC5/UART_3.c **** 
 726:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART_3.c ****     *
 730:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART_3.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART_3.c ****     *
 733:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART_3.c ****     *
 736:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART_3.c ****     *
 739:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART_3.c ****     *
 745:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART_3.c ****     *
 748:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART_3.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART_3.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART_3.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART_3.c ****     *
 753:.\Generated_Source\PSoC5/UART_3.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART_3.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART_3.c ****     *
 756:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART_3.c ****     {
 759:.\Generated_Source\PSoC5/UART_3.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART_3.c **** 
 761:.\Generated_Source\PSoC5/UART_3.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART_3.c ****         enableInterrupts = CyEnterCriticalSection();
 763:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXDATA_AUX_CTL_REG |= (uint8)  UART_3_RX_FIFO_CLR;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 20


 764:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXDATA_AUX_CTL_REG &= (uint8) ~UART_3_RX_FIFO_CLR;
 765:.\Generated_Source\PSoC5/UART_3.c ****         CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC5/UART_3.c **** 
 767:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART_3.c **** 
 769:.\Generated_Source\PSoC5/UART_3.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_DisableRxInt();
 771:.\Generated_Source\PSoC5/UART_3.c **** 
 772:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART_3.c **** 
 777:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART_3.c **** 
 779:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART_3.c **** 
 781:.\Generated_Source\PSoC5/UART_3.c ****     }
 782:.\Generated_Source\PSoC5/UART_3.c **** 
 783:.\Generated_Source\PSoC5/UART_3.c **** 
 784:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART_3.c ****     *
 788:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART_3.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART_3.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART_3.c ****     *
 792:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART_3.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART_3.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART_3.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART_3.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART_3.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART_3.c ****     *
 804:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART_3.c ****     *
 807:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART_3.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART_3.c ****     *
 812:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART_3.c ****                                                         
 815:.\Generated_Source\PSoC5/UART_3.c ****     {
 816:.\Generated_Source\PSoC5/UART_3.c ****         #if(UART_3_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART_3.c ****             #if(UART_3_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART_3.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART_3.c ****                 {
 820:.\Generated_Source\PSoC5/UART_3.c ****                     /* Suppress compiler warning */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 21


 821:.\Generated_Source\PSoC5/UART_3.c ****                 }
 822:.\Generated_Source\PSoC5/UART_3.c ****             #else /* UART_3_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART_3.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART_3.c ****                 tmpCtrl = UART_3_CONTROL_REG & (uint8)~UART_3_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART_3.c ****                 tmpCtrl |= (uint8)(addressMode << UART_3_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART_3.c **** 
 828:.\Generated_Source\PSoC5/UART_3.c ****                 #if(UART_3_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART_3.c ****                    (UART_3_RXBUFFERSIZE > UART_3_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART_3.c ****                     UART_3_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART_3.c ****                     UART_3_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART_3.c ****                 #endif /* End UART_3_RXBUFFERSIZE > UART_3_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART_3.c ****             #endif /* End UART_3_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART_3.c ****         #else /* UART_3_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART_3.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART_3.c ****             {
 837:.\Generated_Source\PSoC5/UART_3.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART_3.c ****             }
 839:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* End UART_3_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART_3.c ****     }
 841:.\Generated_Source\PSoC5/UART_3.c **** 
 842:.\Generated_Source\PSoC5/UART_3.c **** 
 843:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART_3.c ****     *
 847:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 848:.\Generated_Source\PSoC5/UART_3.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART_3.c ****     *
 850:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART_3.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART_3.c ****     *
 853:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART_3.c ****     *
 856:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART_3.c ****     {
 859:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXADDRESS1_REG = address;
 860:.\Generated_Source\PSoC5/UART_3.c ****     }
 861:.\Generated_Source\PSoC5/UART_3.c **** 
 862:.\Generated_Source\PSoC5/UART_3.c **** 
 863:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART_3.c ****     *
 867:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART_3.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART_3.c ****     *
 870:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART_3.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART_3.c ****     *
 873:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART_3.c ****     *
 876:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_SetRxAddress2(uint8 address) 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 22


 878:.\Generated_Source\PSoC5/UART_3.c ****     {
 879:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_RXADDRESS2_REG = address;
 880:.\Generated_Source\PSoC5/UART_3.c ****     }
 881:.\Generated_Source\PSoC5/UART_3.c **** 
 882:.\Generated_Source\PSoC5/UART_3.c **** #endif  /* UART_3_RX_ENABLED || UART_3_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/UART_3.c **** 
 884:.\Generated_Source\PSoC5/UART_3.c **** 
 885:.\Generated_Source\PSoC5/UART_3.c **** #if( (UART_3_TX_ENABLED) || (UART_3_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/UART_3.c ****     *
 890:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 891:.\Generated_Source\PSoC5/UART_3.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/UART_3.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/UART_3.c ****     *
 894:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART_3.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/UART_3.c ****     *
 901:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 902:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 903:.\Generated_Source\PSoC5/UART_3.c ****     *
 904:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
 905:.\Generated_Source\PSoC5/UART_3.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/UART_3.c ****     *
 907:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/UART_3.c ****     {
 321              		.loc 1 909 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 8
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 326 0000 80B4     		push	{r7}
 327              		.cfi_def_cfa_offset 4
 328              		.cfi_offset 7, -4
 329 0002 83B0     		sub	sp, sp, #12
 330              		.cfi_def_cfa_offset 16
 331 0004 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 333 0006 0346     		mov	r3, r0
 334 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_TXSTATUS_MASK_REG = intSrc;
 335              		.loc 1 910 0
 336 000a 044A     		ldr	r2, .L18
 337 000c FB79     		ldrb	r3, [r7, #7]
 338 000e 1370     		strb	r3, [r2]
 911:.\Generated_Source\PSoC5/UART_3.c ****     }
 339              		.loc 1 911 0
 340 0010 0C37     		adds	r7, r7, #12
 341              		.cfi_def_cfa_offset 4
 342 0012 BD46     		mov	sp, r7
 343              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 23


 344              		@ sp needed
 345 0014 5DF8047B 		ldr	r7, [sp], #4
 346              		.cfi_restore 7
 347              		.cfi_def_cfa_offset 0
 348 0018 7047     		bx	lr
 349              	.L19:
 350 001a 00BF     		.align	2
 351              	.L18:
 352 001c 86650040 		.word	1073767814
 353              		.cfi_endproc
 354              	.LFE6:
 355              		.size	UART_3_SetTxInterruptMode, .-UART_3_SetTxInterruptMode
 356              		.section	.text.UART_3_WriteTxData,"ax",%progbits
 357              		.align	2
 358              		.global	UART_3_WriteTxData
 359              		.thumb
 360              		.thumb_func
 361              		.type	UART_3_WriteTxData, %function
 362              	UART_3_WriteTxData:
 363              	.LFB7:
 912:.\Generated_Source\PSoC5/UART_3.c **** 
 913:.\Generated_Source\PSoC5/UART_3.c **** 
 914:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_WriteTxData
 916:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/UART_3.c ****     *
 918:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 919:.\Generated_Source\PSoC5/UART_3.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/UART_3.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/UART_3.c ****     *  separately.
 922:.\Generated_Source\PSoC5/UART_3.c ****     *
 923:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/UART_3.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/UART_3.c ****     *
 926:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 927:.\Generated_Source\PSoC5/UART_3.c ****     * None.
 928:.\Generated_Source\PSoC5/UART_3.c ****     *
 929:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/UART_3.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/UART_3.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/UART_3.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/UART_3.c ****     *
 938:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
 940:.\Generated_Source\PSoC5/UART_3.c ****     *
 941:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/UART_3.c ****     {
 364              		.loc 1 943 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 24


 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 83B0     		sub	sp, sp, #12
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 0346     		mov	r3, r0
 377 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/UART_3.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_initVar != 0u)
 378              		.loc 1 945 0
 379 000a 1A4B     		ldr	r3, .L25
 380 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 381 000e 002B     		cmp	r3, #0
 382 0010 2AD0     		beq	.L20
 946:.\Generated_Source\PSoC5/UART_3.c ****         {
 947:.\Generated_Source\PSoC5/UART_3.c ****         #if (UART_3_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/UART_3.c **** 
 949:.\Generated_Source\PSoC5/UART_3.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_DisableTxInt();
 383              		.loc 1 950 0
 384 0012 194B     		ldr	r3, .L25+4
 385 0014 1022     		movs	r2, #16
 386 0016 1A60     		str	r2, [r3]
 951:.\Generated_Source\PSoC5/UART_3.c **** 
 952:.\Generated_Source\PSoC5/UART_3.c ****             if( (UART_3_txBufferRead == UART_3_txBufferWrite) &&
 387              		.loc 1 952 0
 388 0018 184B     		ldr	r3, .L25+8
 389 001a 1B78     		ldrb	r3, [r3]
 390 001c DAB2     		uxtb	r2, r3
 391 001e 184B     		ldr	r3, .L25+12
 392 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 393 0022 9A42     		cmp	r2, r3
 394 0024 0AD1     		bne	.L22
 953:.\Generated_Source\PSoC5/UART_3.c ****                 ((UART_3_TXSTATUS_REG & UART_3_TX_STS_FIFO_FULL) == 0u) )
 395              		.loc 1 953 0 discriminator 1
 396 0026 174B     		ldr	r3, .L25+16
 397 0028 1B78     		ldrb	r3, [r3]
 398 002a DBB2     		uxtb	r3, r3
 399 002c 03F00403 		and	r3, r3, #4
 952:.\Generated_Source\PSoC5/UART_3.c ****                 ((UART_3_TXSTATUS_REG & UART_3_TX_STS_FIFO_FULL) == 0u) )
 400              		.loc 1 952 0 discriminator 1
 401 0030 002B     		cmp	r3, #0
 402 0032 03D1     		bne	.L22
 954:.\Generated_Source\PSoC5/UART_3.c ****             {
 955:.\Generated_Source\PSoC5/UART_3.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_TXDATA_REG = txDataByte;
 403              		.loc 1 956 0
 404 0034 144A     		ldr	r2, .L25+20
 405 0036 FB79     		ldrb	r3, [r7, #7]
 406 0038 1370     		strb	r3, [r2]
 407 003a 12E0     		b	.L23
 408              	.L22:
 957:.\Generated_Source\PSoC5/UART_3.c ****             }
 958:.\Generated_Source\PSoC5/UART_3.c ****             else
 959:.\Generated_Source\PSoC5/UART_3.c ****             {
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 25


 960:.\Generated_Source\PSoC5/UART_3.c ****                 if(UART_3_txBufferWrite >= UART_3_TX_BUFFER_SIZE)
 409              		.loc 1 960 0
 410 003c 104B     		ldr	r3, .L25+12
 411 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 412 0040 1A2B     		cmp	r3, #26
 413 0042 02D9     		bls	.L24
 961:.\Generated_Source\PSoC5/UART_3.c ****                 {
 962:.\Generated_Source\PSoC5/UART_3.c ****                     UART_3_txBufferWrite = 0u;
 414              		.loc 1 962 0
 415 0044 0E4B     		ldr	r3, .L25+12
 416 0046 0022     		movs	r2, #0
 417 0048 1A70     		strb	r2, [r3]
 418              	.L24:
 963:.\Generated_Source\PSoC5/UART_3.c ****                 }
 964:.\Generated_Source\PSoC5/UART_3.c **** 
 965:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_txBuffer[UART_3_txBufferWrite] = txDataByte;
 419              		.loc 1 965 0
 420 004a 0D4B     		ldr	r3, .L25+12
 421 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 422 004e 1946     		mov	r1, r3
 423 0050 0E4A     		ldr	r2, .L25+24
 424 0052 FB79     		ldrb	r3, [r7, #7]
 425 0054 5354     		strb	r3, [r2, r1]
 966:.\Generated_Source\PSoC5/UART_3.c **** 
 967:.\Generated_Source\PSoC5/UART_3.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_txBufferWrite++;
 426              		.loc 1 968 0
 427 0056 0A4B     		ldr	r3, .L25+12
 428 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 005a 0133     		adds	r3, r3, #1
 430 005c DAB2     		uxtb	r2, r3
 431 005e 084B     		ldr	r3, .L25+12
 432 0060 1A70     		strb	r2, [r3]
 433              	.L23:
 969:.\Generated_Source\PSoC5/UART_3.c ****             }
 970:.\Generated_Source\PSoC5/UART_3.c **** 
 971:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_EnableTxInt();
 434              		.loc 1 971 0
 435 0062 0B4B     		ldr	r3, .L25+28
 436 0064 1022     		movs	r2, #16
 437 0066 1A60     		str	r2, [r3]
 438              	.L20:
 972:.\Generated_Source\PSoC5/UART_3.c **** 
 973:.\Generated_Source\PSoC5/UART_3.c ****         #else
 974:.\Generated_Source\PSoC5/UART_3.c **** 
 975:.\Generated_Source\PSoC5/UART_3.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXDATA_REG = txDataByte;
 977:.\Generated_Source\PSoC5/UART_3.c **** 
 978:.\Generated_Source\PSoC5/UART_3.c ****         #endif /*(UART_3_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/UART_3.c ****         }
 980:.\Generated_Source\PSoC5/UART_3.c ****     }
 439              		.loc 1 980 0
 440 0068 0C37     		adds	r7, r7, #12
 441              		.cfi_def_cfa_offset 4
 442 006a BD46     		mov	sp, r7
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 26


 445 006c 5DF8047B 		ldr	r7, [sp], #4
 446              		.cfi_restore 7
 447              		.cfi_def_cfa_offset 0
 448 0070 7047     		bx	lr
 449              	.L26:
 450 0072 00BF     		.align	2
 451              	.L25:
 452 0074 00000000 		.word	UART_3_initVar
 453 0078 80E100E0 		.word	-536813184
 454 007c 00000000 		.word	UART_3_txBufferRead
 455 0080 00000000 		.word	UART_3_txBufferWrite
 456 0084 66650040 		.word	1073767782
 457 0088 46650040 		.word	1073767750
 458 008c 00000000 		.word	UART_3_txBuffer
 459 0090 00E100E0 		.word	-536813312
 460              		.cfi_endproc
 461              	.LFE7:
 462              		.size	UART_3_WriteTxData, .-UART_3_WriteTxData
 463              		.section	.text.UART_3_ReadTxStatus,"ax",%progbits
 464              		.align	2
 465              		.global	UART_3_ReadTxStatus
 466              		.thumb
 467              		.thumb_func
 468              		.type	UART_3_ReadTxStatus, %function
 469              	UART_3_ReadTxStatus:
 470              	.LFB8:
 981:.\Generated_Source\PSoC5/UART_3.c **** 
 982:.\Generated_Source\PSoC5/UART_3.c **** 
 983:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_ReadTxStatus
 985:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/UART_3.c ****     *
 987:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
 988:.\Generated_Source\PSoC5/UART_3.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/UART_3.c ****     *
 990:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
 992:.\Generated_Source\PSoC5/UART_3.c ****     *
 993:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
 994:.\Generated_Source\PSoC5/UART_3.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/UART_3.c ****     *
 996:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
 997:.\Generated_Source\PSoC5/UART_3.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/UART_3.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/UART_3.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/UART_3.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/UART_3.c ****     *
1002:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/UART_3.c ****     {
 471              		.loc 1 1004 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476 0000 80B4     		push	{r7}
 477              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 27


 478              		.cfi_offset 7, -4
 479 0002 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/UART_3.c ****         return(UART_3_TXSTATUS_REG);
 481              		.loc 1 1005 0
 482 0004 034B     		ldr	r3, .L29
 483 0006 1B78     		ldrb	r3, [r3]
 484 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/UART_3.c ****     }
 485              		.loc 1 1006 0
 486 000a 1846     		mov	r0, r3
 487 000c BD46     		mov	sp, r7
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 000e 5DF8047B 		ldr	r7, [sp], #4
 491              		.cfi_restore 7
 492              		.cfi_def_cfa_offset 0
 493 0012 7047     		bx	lr
 494              	.L30:
 495              		.align	2
 496              	.L29:
 497 0014 66650040 		.word	1073767782
 498              		.cfi_endproc
 499              	.LFE8:
 500              		.size	UART_3_ReadTxStatus, .-UART_3_ReadTxStatus
 501              		.section	.text.UART_3_PutChar,"ax",%progbits
 502              		.align	2
 503              		.global	UART_3_PutChar
 504              		.thumb
 505              		.thumb_func
 506              		.type	UART_3_PutChar, %function
 507              	UART_3_PutChar:
 508              	.LFB9:
1007:.\Generated_Source\PSoC5/UART_3.c **** 
1008:.\Generated_Source\PSoC5/UART_3.c **** 
1009:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_PutChar
1011:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/UART_3.c ****     *
1013:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1014:.\Generated_Source\PSoC5/UART_3.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/UART_3.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/UART_3.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/UART_3.c ****     *
1018:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/UART_3.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/UART_3.c ****     *
1021:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1022:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1023:.\Generated_Source\PSoC5/UART_3.c ****     *
1024:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/UART_3.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/UART_3.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferRead - cyclic index for read from txBuffer,
1030:.\Generated_Source\PSoC5/UART_3.c ****     *     checked to identify free space in txBuffer.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 28


1031:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/UART_3.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/UART_3.c ****     *
1034:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
1036:.\Generated_Source\PSoC5/UART_3.c ****     *
1037:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
1038:.\Generated_Source\PSoC5/UART_3.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/UART_3.c ****     *
1040:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/UART_3.c ****     {
 509              		.loc 1 1042 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 16
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514 0000 80B4     		push	{r7}
 515              		.cfi_def_cfa_offset 4
 516              		.cfi_offset 7, -4
 517 0002 85B0     		sub	sp, sp, #20
 518              		.cfi_def_cfa_offset 24
 519 0004 00AF     		add	r7, sp, #0
 520              		.cfi_def_cfa_register 7
 521 0006 0346     		mov	r3, r0
 522 0008 FB71     		strb	r3, [r7, #7]
 523              	.L34:
1043:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/UART_3.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/UART_3.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/UART_3.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/UART_3.c ****         */
1048:.\Generated_Source\PSoC5/UART_3.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/UART_3.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/UART_3.c **** 
1051:.\Generated_Source\PSoC5/UART_3.c ****         do
1052:.\Generated_Source\PSoC5/UART_3.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/UART_3.c **** 
1054:.\Generated_Source\PSoC5/UART_3.c ****         #if ((UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/UART_3.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_DisableTxInt();
1057:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/UART_3.c **** 
1059:.\Generated_Source\PSoC5/UART_3.c ****             locTxBufferWrite = UART_3_txBufferWrite;
 524              		.loc 1 1059 0
 525 000a 254B     		ldr	r3, .L38
 526 000c 1B78     		ldrb	r3, [r3]
 527 000e FB73     		strb	r3, [r7, #15]
1060:.\Generated_Source\PSoC5/UART_3.c ****             locTxBufferRead  = UART_3_txBufferRead;
 528              		.loc 1 1060 0
 529 0010 244B     		ldr	r3, .L38+4
 530 0012 1B78     		ldrb	r3, [r3]
 531 0014 BB73     		strb	r3, [r7, #14]
1061:.\Generated_Source\PSoC5/UART_3.c **** 
1062:.\Generated_Source\PSoC5/UART_3.c ****         #if ((UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/UART_3.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_EnableTxInt();
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 29


1065:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/UART_3.c ****         }
1067:.\Generated_Source\PSoC5/UART_3.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 532              		.loc 1 1067 0
 533 0016 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 534 0018 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 535 001a 9A42     		cmp	r2, r3
 536 001c 08D2     		bcs	.L32
 537              		.loc 1 1067 0 is_stmt 0 discriminator 1
 538 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 539 0020 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 540 0022 013B     		subs	r3, r3, #1
 541 0024 9A42     		cmp	r2, r3
 542 0026 0CBF     		ite	eq
 543 0028 0123     		moveq	r3, #1
 544 002a 0023     		movne	r3, #0
 545 002c DBB2     		uxtb	r3, r3
 546 002e 07E0     		b	.L33
 547              	.L32:
1068:.\Generated_Source\PSoC5/UART_3.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 548              		.loc 1 1068 0 is_stmt 1 discriminator 2
 549 0030 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 550 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 551 0034 D31A     		subs	r3, r2, r3
1067:.\Generated_Source\PSoC5/UART_3.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 552              		.loc 1 1067 0 discriminator 2
 553 0036 1A2B     		cmp	r3, #26
 554 0038 0CBF     		ite	eq
 555 003a 0123     		moveq	r3, #1
 556 003c 0023     		movne	r3, #0
 557 003e DBB2     		uxtb	r3, r3
 558              	.L33:
1069:.\Generated_Source\PSoC5/UART_3.c ****                                 (uint8)(UART_3_TX_BUFFER_SIZE - 1u)) );
 559              		.loc 1 1069 0
 560 0040 002B     		cmp	r3, #0
 561 0042 E2D1     		bne	.L34
1070:.\Generated_Source\PSoC5/UART_3.c **** 
1071:.\Generated_Source\PSoC5/UART_3.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 562              		.loc 1 1071 0
 563 0044 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 564 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 565 0048 9A42     		cmp	r2, r3
 566 004a 0AD1     		bne	.L35
1072:.\Generated_Source\PSoC5/UART_3.c ****             ((UART_3_TXSTATUS_REG & UART_3_TX_STS_FIFO_FULL) == 0u) )
 567              		.loc 1 1072 0 discriminator 1
 568 004c 164B     		ldr	r3, .L38+8
 569 004e 1B78     		ldrb	r3, [r3]
 570 0050 DBB2     		uxtb	r3, r3
 571 0052 03F00403 		and	r3, r3, #4
1071:.\Generated_Source\PSoC5/UART_3.c ****             ((UART_3_TXSTATUS_REG & UART_3_TX_STS_FIFO_FULL) == 0u) )
 572              		.loc 1 1071 0 discriminator 1
 573 0056 002B     		cmp	r3, #0
 574 0058 03D1     		bne	.L35
1073:.\Generated_Source\PSoC5/UART_3.c ****         {
1074:.\Generated_Source\PSoC5/UART_3.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_TXDATA_REG = txDataByte;
 575              		.loc 1 1075 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 30


 576 005a 144A     		ldr	r2, .L38+12
 577 005c FB79     		ldrb	r3, [r7, #7]
 578 005e 1370     		strb	r3, [r2]
 579 0060 18E0     		b	.L31
 580              	.L35:
1076:.\Generated_Source\PSoC5/UART_3.c ****         }
1077:.\Generated_Source\PSoC5/UART_3.c ****         else
1078:.\Generated_Source\PSoC5/UART_3.c ****         {
1079:.\Generated_Source\PSoC5/UART_3.c ****             if(locTxBufferWrite >= UART_3_TX_BUFFER_SIZE)
 581              		.loc 1 1079 0
 582 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 583 0064 1A2B     		cmp	r3, #26
 584 0066 01D9     		bls	.L37
1080:.\Generated_Source\PSoC5/UART_3.c ****             {
1081:.\Generated_Source\PSoC5/UART_3.c ****                 locTxBufferWrite = 0u;
 585              		.loc 1 1081 0
 586 0068 0023     		movs	r3, #0
 587 006a FB73     		strb	r3, [r7, #15]
 588              	.L37:
1082:.\Generated_Source\PSoC5/UART_3.c ****             }
1083:.\Generated_Source\PSoC5/UART_3.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_txBuffer[locTxBufferWrite] = txDataByte;
 589              		.loc 1 1084 0
 590 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 591 006e 1049     		ldr	r1, .L38+16
 592 0070 FA79     		ldrb	r2, [r7, #7]
 593 0072 CA54     		strb	r2, [r1, r3]
1085:.\Generated_Source\PSoC5/UART_3.c ****             locTxBufferWrite++;
 594              		.loc 1 1085 0
 595 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 596 0076 0133     		adds	r3, r3, #1
 597 0078 FB73     		strb	r3, [r7, #15]
1086:.\Generated_Source\PSoC5/UART_3.c **** 
1087:.\Generated_Source\PSoC5/UART_3.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/UART_3.c ****         #if ((UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_DisableTxInt();
1090:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/UART_3.c **** 
1092:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_txBufferWrite = locTxBufferWrite;
 598              		.loc 1 1092 0
 599 007a 094A     		ldr	r2, .L38
 600 007c FB7B     		ldrb	r3, [r7, #15]
 601 007e 1370     		strb	r3, [r2]
1093:.\Generated_Source\PSoC5/UART_3.c **** 
1094:.\Generated_Source\PSoC5/UART_3.c ****         #if ((UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_EnableTxInt();
1096:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* (UART_3_TX_BUFFER_SIZE > UART_3_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/UART_3.c **** 
1098:.\Generated_Source\PSoC5/UART_3.c ****             if(0u != (UART_3_TXSTATUS_REG & UART_3_TX_STS_FIFO_EMPTY))
 602              		.loc 1 1098 0
 603 0080 094B     		ldr	r3, .L38+8
 604 0082 1B78     		ldrb	r3, [r3]
 605 0084 DBB2     		uxtb	r3, r3
 606 0086 03F00203 		and	r3, r3, #2
 607 008a 002B     		cmp	r3, #0
 608 008c 02D0     		beq	.L31
1099:.\Generated_Source\PSoC5/UART_3.c ****             {
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 31


1100:.\Generated_Source\PSoC5/UART_3.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_SetPendingTxInt();
 609              		.loc 1 1101 0
 610 008e 094B     		ldr	r3, .L38+20
 611 0090 1022     		movs	r2, #16
 612 0092 1A60     		str	r2, [r3]
 613              	.L31:
1102:.\Generated_Source\PSoC5/UART_3.c ****             }
1103:.\Generated_Source\PSoC5/UART_3.c ****         }
1104:.\Generated_Source\PSoC5/UART_3.c **** 
1105:.\Generated_Source\PSoC5/UART_3.c ****     #else
1106:.\Generated_Source\PSoC5/UART_3.c **** 
1107:.\Generated_Source\PSoC5/UART_3.c ****         while((UART_3_TXSTATUS_REG & UART_3_TX_STS_FIFO_FULL) != 0u)
1108:.\Generated_Source\PSoC5/UART_3.c ****         {
1109:.\Generated_Source\PSoC5/UART_3.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/UART_3.c ****         }
1111:.\Generated_Source\PSoC5/UART_3.c **** 
1112:.\Generated_Source\PSoC5/UART_3.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_TXDATA_REG = txDataByte;
1114:.\Generated_Source\PSoC5/UART_3.c **** 
1115:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* UART_3_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/UART_3.c ****     }
 614              		.loc 1 1116 0
 615 0094 1437     		adds	r7, r7, #20
 616              		.cfi_def_cfa_offset 4
 617 0096 BD46     		mov	sp, r7
 618              		.cfi_def_cfa_register 13
 619              		@ sp needed
 620 0098 5DF8047B 		ldr	r7, [sp], #4
 621              		.cfi_restore 7
 622              		.cfi_def_cfa_offset 0
 623 009c 7047     		bx	lr
 624              	.L39:
 625 009e 00BF     		.align	2
 626              	.L38:
 627 00a0 00000000 		.word	UART_3_txBufferWrite
 628 00a4 00000000 		.word	UART_3_txBufferRead
 629 00a8 66650040 		.word	1073767782
 630 00ac 46650040 		.word	1073767750
 631 00b0 00000000 		.word	UART_3_txBuffer
 632 00b4 00E200E0 		.word	-536813056
 633              		.cfi_endproc
 634              	.LFE9:
 635              		.size	UART_3_PutChar, .-UART_3_PutChar
 636              		.section	.text.UART_3_PutString,"ax",%progbits
 637              		.align	2
 638              		.global	UART_3_PutString
 639              		.thumb
 640              		.thumb_func
 641              		.type	UART_3_PutString, %function
 642              	UART_3_PutString:
 643              	.LFB10:
1117:.\Generated_Source\PSoC5/UART_3.c **** 
1118:.\Generated_Source\PSoC5/UART_3.c **** 
1119:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_PutString
1121:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 32


1122:.\Generated_Source\PSoC5/UART_3.c ****     *
1123:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1124:.\Generated_Source\PSoC5/UART_3.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/UART_3.c ****     *
1126:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/UART_3.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/UART_3.c ****     *
1129:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1130:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1131:.\Generated_Source\PSoC5/UART_3.c ****     *
1132:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/UART_3.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/UART_3.c ****     *
1136:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
1138:.\Generated_Source\PSoC5/UART_3.c ****     *
1139:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
1140:.\Generated_Source\PSoC5/UART_3.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/UART_3.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/UART_3.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/UART_3.c ****     *
1144:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/UART_3.c ****     {
 644              		.loc 1 1146 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 16
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648 0000 80B5     		push	{r7, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 84B0     		sub	sp, sp, #16
 653              		.cfi_def_cfa_offset 24
 654 0004 00AF     		add	r7, sp, #0
 655              		.cfi_def_cfa_register 7
 656 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/UART_3.c ****         uint16 bufIndex = 0u;
 657              		.loc 1 1147 0
 658 0008 0023     		movs	r3, #0
 659 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/UART_3.c **** 
1149:.\Generated_Source\PSoC5/UART_3.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_initVar != 0u)
 660              		.loc 1 1150 0
 661 000c 0B4B     		ldr	r3, .L44
 662 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 663 0010 002B     		cmp	r3, #0
 664 0012 10D0     		beq	.L40
1151:.\Generated_Source\PSoC5/UART_3.c ****         {
1152:.\Generated_Source\PSoC5/UART_3.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/UART_3.c ****             while(string[bufIndex] != (char8) 0)
 665              		.loc 1 1153 0
 666 0014 09E0     		b	.L42
 667              	.L43:
1154:.\Generated_Source\PSoC5/UART_3.c ****             {
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 33


1155:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_PutChar((uint8)string[bufIndex]);
 668              		.loc 1 1155 0
 669 0016 FB89     		ldrh	r3, [r7, #14]
 670 0018 7A68     		ldr	r2, [r7, #4]
 671 001a 1344     		add	r3, r3, r2
 672 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 673 001e 1846     		mov	r0, r3
 674 0020 FFF7FEFF 		bl	UART_3_PutChar
1156:.\Generated_Source\PSoC5/UART_3.c ****                 bufIndex++;
 675              		.loc 1 1156 0
 676 0024 FB89     		ldrh	r3, [r7, #14]
 677 0026 0133     		adds	r3, r3, #1
 678 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 679              	.L42:
1153:.\Generated_Source\PSoC5/UART_3.c ****             {
 680              		.loc 1 1153 0
 681 002a FB89     		ldrh	r3, [r7, #14]
 682 002c 7A68     		ldr	r2, [r7, #4]
 683 002e 1344     		add	r3, r3, r2
 684 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 685 0032 002B     		cmp	r3, #0
 686 0034 EFD1     		bne	.L43
 687              	.L40:
1157:.\Generated_Source\PSoC5/UART_3.c ****             }
1158:.\Generated_Source\PSoC5/UART_3.c ****         }
1159:.\Generated_Source\PSoC5/UART_3.c ****     }
 688              		.loc 1 1159 0
 689 0036 1037     		adds	r7, r7, #16
 690              		.cfi_def_cfa_offset 8
 691 0038 BD46     		mov	sp, r7
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 003a 80BD     		pop	{r7, pc}
 695              	.L45:
 696              		.align	2
 697              	.L44:
 698 003c 00000000 		.word	UART_3_initVar
 699              		.cfi_endproc
 700              	.LFE10:
 701              		.size	UART_3_PutString, .-UART_3_PutString
 702              		.section	.text.UART_3_PutArray,"ax",%progbits
 703              		.align	2
 704              		.global	UART_3_PutArray
 705              		.thumb
 706              		.thumb_func
 707              		.type	UART_3_PutArray, %function
 708              	UART_3_PutArray:
 709              	.LFB11:
1160:.\Generated_Source\PSoC5/UART_3.c **** 
1161:.\Generated_Source\PSoC5/UART_3.c **** 
1162:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_PutArray
1164:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/UART_3.c ****     *
1166:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1167:.\Generated_Source\PSoC5/UART_3.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/UART_3.c ****     *  transmission.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 34


1169:.\Generated_Source\PSoC5/UART_3.c ****     *
1170:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/UART_3.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/UART_3.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/UART_3.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/UART_3.c ****     *
1175:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1176:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1177:.\Generated_Source\PSoC5/UART_3.c ****     *
1178:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/UART_3.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/UART_3.c ****     *
1182:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
1184:.\Generated_Source\PSoC5/UART_3.c ****     *
1185:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
1186:.\Generated_Source\PSoC5/UART_3.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/UART_3.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/UART_3.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/UART_3.c ****     *
1190:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/UART_3.c ****                                                                     
1193:.\Generated_Source\PSoC5/UART_3.c ****     {
 710              		.loc 1 1193 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 16
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 84B0     		sub	sp, sp, #16
 719              		.cfi_def_cfa_offset 24
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 722 0006 7860     		str	r0, [r7, #4]
 723 0008 0B46     		mov	r3, r1
 724 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/UART_3.c ****         uint8 bufIndex = 0u;
 725              		.loc 1 1194 0
 726 000c 0023     		movs	r3, #0
 727 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/UART_3.c **** 
1196:.\Generated_Source\PSoC5/UART_3.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_initVar != 0u)
 728              		.loc 1 1197 0
 729 0010 0A4B     		ldr	r3, .L50
 730 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 731 0014 002B     		cmp	r3, #0
 732 0016 0ED0     		beq	.L46
1198:.\Generated_Source\PSoC5/UART_3.c ****         {
1199:.\Generated_Source\PSoC5/UART_3.c ****             while(bufIndex < byteCount)
 733              		.loc 1 1199 0
 734 0018 09E0     		b	.L48
 735              	.L49:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 35


1200:.\Generated_Source\PSoC5/UART_3.c ****             {
1201:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_PutChar(string[bufIndex]);
 736              		.loc 1 1201 0
 737 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 738 001c 7A68     		ldr	r2, [r7, #4]
 739 001e 1344     		add	r3, r3, r2
 740 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 741 0022 1846     		mov	r0, r3
 742 0024 FFF7FEFF 		bl	UART_3_PutChar
1202:.\Generated_Source\PSoC5/UART_3.c ****                 bufIndex++;
 743              		.loc 1 1202 0
 744 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 745 002a 0133     		adds	r3, r3, #1
 746 002c FB73     		strb	r3, [r7, #15]
 747              	.L48:
1199:.\Generated_Source\PSoC5/UART_3.c ****             {
 748              		.loc 1 1199 0
 749 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 750 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 751 0032 9A42     		cmp	r2, r3
 752 0034 F1D3     		bcc	.L49
 753              	.L46:
1203:.\Generated_Source\PSoC5/UART_3.c ****             }
1204:.\Generated_Source\PSoC5/UART_3.c ****         }
1205:.\Generated_Source\PSoC5/UART_3.c ****     }
 754              		.loc 1 1205 0
 755 0036 1037     		adds	r7, r7, #16
 756              		.cfi_def_cfa_offset 8
 757 0038 BD46     		mov	sp, r7
 758              		.cfi_def_cfa_register 13
 759              		@ sp needed
 760 003a 80BD     		pop	{r7, pc}
 761              	.L51:
 762              		.align	2
 763              	.L50:
 764 003c 00000000 		.word	UART_3_initVar
 765              		.cfi_endproc
 766              	.LFE11:
 767              		.size	UART_3_PutArray, .-UART_3_PutArray
 768              		.section	.text.UART_3_PutCRLF,"ax",%progbits
 769              		.align	2
 770              		.global	UART_3_PutCRLF
 771              		.thumb
 772              		.thumb_func
 773              		.type	UART_3_PutCRLF, %function
 774              	UART_3_PutCRLF:
 775              	.LFB12:
1206:.\Generated_Source\PSoC5/UART_3.c **** 
1207:.\Generated_Source\PSoC5/UART_3.c **** 
1208:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_PutCRLF
1210:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/UART_3.c ****     *
1212:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1213:.\Generated_Source\PSoC5/UART_3.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/UART_3.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/UART_3.c ****     *
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 36


1216:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/UART_3.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/UART_3.c ****     *
1219:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1220:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1221:.\Generated_Source\PSoC5/UART_3.c ****     *
1222:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/UART_3.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/UART_3.c ****     *
1226:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
1228:.\Generated_Source\PSoC5/UART_3.c ****     *
1229:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/UART_3.c ****     {
 776              		.loc 1 1231 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 8
 779              		@ frame_needed = 1, uses_anonymous_args = 0
 780 0000 80B5     		push	{r7, lr}
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 7, -8
 783              		.cfi_offset 14, -4
 784 0002 82B0     		sub	sp, sp, #8
 785              		.cfi_def_cfa_offset 16
 786 0004 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 788 0006 0346     		mov	r3, r0
 789 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/UART_3.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_initVar != 0u)
 790              		.loc 1 1233 0
 791 000a 084B     		ldr	r3, .L54
 792 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 793 000e 002B     		cmp	r3, #0
 794 0010 09D0     		beq	.L52
1234:.\Generated_Source\PSoC5/UART_3.c ****         {
1235:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_PutChar(txDataByte);
 795              		.loc 1 1235 0
 796 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 797 0014 1846     		mov	r0, r3
 798 0016 FFF7FEFF 		bl	UART_3_PutChar
1236:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_PutChar(0x0Du);
 799              		.loc 1 1236 0
 800 001a 0D20     		movs	r0, #13
 801 001c FFF7FEFF 		bl	UART_3_PutChar
1237:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_PutChar(0x0Au);
 802              		.loc 1 1237 0
 803 0020 0A20     		movs	r0, #10
 804 0022 FFF7FEFF 		bl	UART_3_PutChar
 805              	.L52:
1238:.\Generated_Source\PSoC5/UART_3.c ****         }
1239:.\Generated_Source\PSoC5/UART_3.c ****     }
 806              		.loc 1 1239 0
 807 0026 0837     		adds	r7, r7, #8
 808              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 37


 809 0028 BD46     		mov	sp, r7
 810              		.cfi_def_cfa_register 13
 811              		@ sp needed
 812 002a 80BD     		pop	{r7, pc}
 813              	.L55:
 814              		.align	2
 815              	.L54:
 816 002c 00000000 		.word	UART_3_initVar
 817              		.cfi_endproc
 818              	.LFE12:
 819              		.size	UART_3_PutCRLF, .-UART_3_PutCRLF
 820              		.section	.text.UART_3_GetTxBufferSize,"ax",%progbits
 821              		.align	2
 822              		.global	UART_3_GetTxBufferSize
 823              		.thumb
 824              		.thumb_func
 825              		.type	UART_3_GetTxBufferSize, %function
 826              	UART_3_GetTxBufferSize:
 827              	.LFB13:
1240:.\Generated_Source\PSoC5/UART_3.c **** 
1241:.\Generated_Source\PSoC5/UART_3.c **** 
1242:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_GetTxBufferSize
1244:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/UART_3.c ****     *
1246:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1247:.\Generated_Source\PSoC5/UART_3.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/UART_3.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/UART_3.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/UART_3.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/UART_3.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/UART_3.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/UART_3.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/UART_3.c ****     *
1255:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1257:.\Generated_Source\PSoC5/UART_3.c ****     *
1258:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1259:.\Generated_Source\PSoC5/UART_3.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/UART_3.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/UART_3.c ****     *
1262:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/UART_3.c ****     *
1266:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
1268:.\Generated_Source\PSoC5/UART_3.c ****     *
1269:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
1270:.\Generated_Source\PSoC5/UART_3.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/UART_3.c ****     *
1272:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_3.c ****     uint8 UART_3_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/UART_3.c ****                                                             
1275:.\Generated_Source\PSoC5/UART_3.c ****     {
 828              		.loc 1 1275 0
 829              		.cfi_startproc
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 38


 830              		@ args = 0, pretend = 0, frame = 8
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 7, -4
 836 0002 83B0     		sub	sp, sp, #12
 837              		.cfi_def_cfa_offset 16
 838 0004 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/UART_3.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/UART_3.c **** 
1278:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/UART_3.c **** 
1280:.\Generated_Source\PSoC5/UART_3.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_DisableTxInt();
 840              		.loc 1 1281 0
 841 0006 174B     		ldr	r3, .L61
 842 0008 1022     		movs	r2, #16
 843 000a 1A60     		str	r2, [r3]
1282:.\Generated_Source\PSoC5/UART_3.c **** 
1283:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_txBufferRead == UART_3_txBufferWrite)
 844              		.loc 1 1283 0
 845 000c 164B     		ldr	r3, .L61+4
 846 000e 1B78     		ldrb	r3, [r3]
 847 0010 DAB2     		uxtb	r2, r3
 848 0012 164B     		ldr	r3, .L61+8
 849 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 0016 9A42     		cmp	r2, r3
 851 0018 02D1     		bne	.L57
1284:.\Generated_Source\PSoC5/UART_3.c ****         {
1285:.\Generated_Source\PSoC5/UART_3.c ****             size = 0u;
 852              		.loc 1 1285 0
 853 001a 0023     		movs	r3, #0
 854 001c FB71     		strb	r3, [r7, #7]
 855 001e 17E0     		b	.L58
 856              	.L57:
1286:.\Generated_Source\PSoC5/UART_3.c ****         }
1287:.\Generated_Source\PSoC5/UART_3.c ****         else if(UART_3_txBufferRead < UART_3_txBufferWrite)
 857              		.loc 1 1287 0
 858 0020 114B     		ldr	r3, .L61+4
 859 0022 1B78     		ldrb	r3, [r3]
 860 0024 DAB2     		uxtb	r2, r3
 861 0026 114B     		ldr	r3, .L61+8
 862 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 863 002a 9A42     		cmp	r2, r3
 864 002c 07D2     		bcs	.L59
1288:.\Generated_Source\PSoC5/UART_3.c ****         {
1289:.\Generated_Source\PSoC5/UART_3.c ****             size = (UART_3_txBufferWrite - UART_3_txBufferRead);
 865              		.loc 1 1289 0
 866 002e 0F4B     		ldr	r3, .L61+8
 867 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 868 0032 0D4B     		ldr	r3, .L61+4
 869 0034 1B78     		ldrb	r3, [r3]
 870 0036 DBB2     		uxtb	r3, r3
 871 0038 D31A     		subs	r3, r2, r3
 872 003a FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 39


 873 003c 08E0     		b	.L58
 874              	.L59:
1290:.\Generated_Source\PSoC5/UART_3.c ****         }
1291:.\Generated_Source\PSoC5/UART_3.c ****         else
1292:.\Generated_Source\PSoC5/UART_3.c ****         {
1293:.\Generated_Source\PSoC5/UART_3.c ****             size = (UART_3_TX_BUFFER_SIZE - UART_3_txBufferRead) +
 875              		.loc 1 1293 0
 876 003e 0B4B     		ldr	r3, .L61+8
 877 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 878 0042 094B     		ldr	r3, .L61+4
 879 0044 1B78     		ldrb	r3, [r3]
 880 0046 DBB2     		uxtb	r3, r3
 881 0048 D31A     		subs	r3, r2, r3
 882 004a DBB2     		uxtb	r3, r3
 883 004c 1B33     		adds	r3, r3, #27
 884 004e FB71     		strb	r3, [r7, #7]
 885              	.L58:
1294:.\Generated_Source\PSoC5/UART_3.c ****                     UART_3_txBufferWrite;
1295:.\Generated_Source\PSoC5/UART_3.c ****         }
1296:.\Generated_Source\PSoC5/UART_3.c **** 
1297:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_EnableTxInt();
 886              		.loc 1 1297 0
 887 0050 074B     		ldr	r3, .L61+12
 888 0052 1022     		movs	r2, #16
 889 0054 1A60     		str	r2, [r3]
1298:.\Generated_Source\PSoC5/UART_3.c **** 
1299:.\Generated_Source\PSoC5/UART_3.c ****     #else
1300:.\Generated_Source\PSoC5/UART_3.c **** 
1301:.\Generated_Source\PSoC5/UART_3.c ****         size = UART_3_TXSTATUS_REG;
1302:.\Generated_Source\PSoC5/UART_3.c **** 
1303:.\Generated_Source\PSoC5/UART_3.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/UART_3.c ****         if((size & UART_3_TX_STS_FIFO_FULL) != 0u)
1305:.\Generated_Source\PSoC5/UART_3.c ****         {
1306:.\Generated_Source\PSoC5/UART_3.c ****             size = UART_3_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/UART_3.c ****         }
1308:.\Generated_Source\PSoC5/UART_3.c ****         else if((size & UART_3_TX_STS_FIFO_EMPTY) != 0u)
1309:.\Generated_Source\PSoC5/UART_3.c ****         {
1310:.\Generated_Source\PSoC5/UART_3.c ****             size = 0u;
1311:.\Generated_Source\PSoC5/UART_3.c ****         }
1312:.\Generated_Source\PSoC5/UART_3.c ****         else
1313:.\Generated_Source\PSoC5/UART_3.c ****         {
1314:.\Generated_Source\PSoC5/UART_3.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/UART_3.c ****             size = 1u;
1316:.\Generated_Source\PSoC5/UART_3.c ****         }
1317:.\Generated_Source\PSoC5/UART_3.c **** 
1318:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/UART_3.c **** 
1320:.\Generated_Source\PSoC5/UART_3.c ****     return(size);
 890              		.loc 1 1320 0
 891 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/UART_3.c ****     }
 892              		.loc 1 1321 0
 893 0058 1846     		mov	r0, r3
 894 005a 0C37     		adds	r7, r7, #12
 895              		.cfi_def_cfa_offset 4
 896 005c BD46     		mov	sp, r7
 897              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 40


 898              		@ sp needed
 899 005e 5DF8047B 		ldr	r7, [sp], #4
 900              		.cfi_restore 7
 901              		.cfi_def_cfa_offset 0
 902 0062 7047     		bx	lr
 903              	.L62:
 904              		.align	2
 905              	.L61:
 906 0064 80E100E0 		.word	-536813184
 907 0068 00000000 		.word	UART_3_txBufferRead
 908 006c 00000000 		.word	UART_3_txBufferWrite
 909 0070 00E100E0 		.word	-536813312
 910              		.cfi_endproc
 911              	.LFE13:
 912              		.size	UART_3_GetTxBufferSize, .-UART_3_GetTxBufferSize
 913              		.section	.text.UART_3_ClearTxBuffer,"ax",%progbits
 914              		.align	2
 915              		.global	UART_3_ClearTxBuffer
 916              		.thumb
 917              		.thumb_func
 918              		.type	UART_3_ClearTxBuffer, %function
 919              	UART_3_ClearTxBuffer:
 920              	.LFB14:
1322:.\Generated_Source\PSoC5/UART_3.c **** 
1323:.\Generated_Source\PSoC5/UART_3.c **** 
1324:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_ClearTxBuffer
1326:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/UART_3.c ****     *
1328:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1329:.\Generated_Source\PSoC5/UART_3.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/UART_3.c ****     *
1331:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1333:.\Generated_Source\PSoC5/UART_3.c ****     *
1334:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1335:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1336:.\Generated_Source\PSoC5/UART_3.c ****     *
1337:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/UART_3.c ****     *
1341:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
1343:.\Generated_Source\PSoC5/UART_3.c ****     *
1344:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
1345:.\Generated_Source\PSoC5/UART_3.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/UART_3.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/UART_3.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/UART_3.c ****     *
1349:.\Generated_Source\PSoC5/UART_3.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/UART_3.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/UART_3.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/UART_3.c ****     *
1353:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/UART_3.c ****     {
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 41


 921              		.loc 1 1355 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 8
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925 0000 80B5     		push	{r7, lr}
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 82B0     		sub	sp, sp, #8
 930              		.cfi_def_cfa_offset 16
 931 0004 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/UART_3.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/UART_3.c **** 
1358:.\Generated_Source\PSoC5/UART_3.c ****         enableInterrupts = CyEnterCriticalSection();
 933              		.loc 1 1358 0
 934 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 935 000a 0346     		mov	r3, r0
 936 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/UART_3.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_TXDATA_AUX_CTL_REG |= (uint8)  UART_3_TX_FIFO_CLR;
 937              		.loc 1 1360 0
 938 000e 114A     		ldr	r2, .L64
 939 0010 104B     		ldr	r3, .L64
 940 0012 1B78     		ldrb	r3, [r3]
 941 0014 DBB2     		uxtb	r3, r3
 942 0016 43F00103 		orr	r3, r3, #1
 943 001a DBB2     		uxtb	r3, r3
 944 001c 1370     		strb	r3, [r2]
1361:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_TXDATA_AUX_CTL_REG &= (uint8) ~UART_3_TX_FIFO_CLR;
 945              		.loc 1 1361 0
 946 001e 0D4A     		ldr	r2, .L64
 947 0020 0C4B     		ldr	r3, .L64
 948 0022 1B78     		ldrb	r3, [r3]
 949 0024 DBB2     		uxtb	r3, r3
 950 0026 23F00103 		bic	r3, r3, #1
 951 002a DBB2     		uxtb	r3, r3
 952 002c 1370     		strb	r3, [r2]
1362:.\Generated_Source\PSoC5/UART_3.c ****         CyExitCriticalSection(enableInterrupts);
 953              		.loc 1 1362 0
 954 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 955 0030 1846     		mov	r0, r3
 956 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/UART_3.c **** 
1364:.\Generated_Source\PSoC5/UART_3.c ****     #if (UART_3_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/UART_3.c **** 
1366:.\Generated_Source\PSoC5/UART_3.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_DisableTxInt();
 957              		.loc 1 1367 0
 958 0036 084B     		ldr	r3, .L64+4
 959 0038 1022     		movs	r2, #16
 960 003a 1A60     		str	r2, [r3]
1368:.\Generated_Source\PSoC5/UART_3.c **** 
1369:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_txBufferRead = 0u;
 961              		.loc 1 1369 0
 962 003c 074B     		ldr	r3, .L64+8
 963 003e 0022     		movs	r2, #0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 42


 964 0040 1A70     		strb	r2, [r3]
1370:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_txBufferWrite = 0u;
 965              		.loc 1 1370 0
 966 0042 074B     		ldr	r3, .L64+12
 967 0044 0022     		movs	r2, #0
 968 0046 1A70     		strb	r2, [r3]
1371:.\Generated_Source\PSoC5/UART_3.c **** 
1372:.\Generated_Source\PSoC5/UART_3.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/UART_3.c ****         UART_3_EnableTxInt();
 969              		.loc 1 1373 0
 970 0048 064B     		ldr	r3, .L64+16
 971 004a 1022     		movs	r2, #16
 972 004c 1A60     		str	r2, [r3]
1374:.\Generated_Source\PSoC5/UART_3.c **** 
1375:.\Generated_Source\PSoC5/UART_3.c ****     #endif /* (UART_3_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/UART_3.c ****     }
 973              		.loc 1 1376 0
 974 004e 0837     		adds	r7, r7, #8
 975              		.cfi_def_cfa_offset 8
 976 0050 BD46     		mov	sp, r7
 977              		.cfi_def_cfa_register 13
 978              		@ sp needed
 979 0052 80BD     		pop	{r7, pc}
 980              	.L65:
 981              		.align	2
 982              	.L64:
 983 0054 96650040 		.word	1073767830
 984 0058 80E100E0 		.word	-536813184
 985 005c 00000000 		.word	UART_3_txBufferRead
 986 0060 00000000 		.word	UART_3_txBufferWrite
 987 0064 00E100E0 		.word	-536813312
 988              		.cfi_endproc
 989              	.LFE14:
 990              		.size	UART_3_ClearTxBuffer, .-UART_3_ClearTxBuffer
 991              		.section	.text.UART_3_SendBreak,"ax",%progbits
 992              		.align	2
 993              		.global	UART_3_SendBreak
 994              		.thumb
 995              		.thumb_func
 996              		.type	UART_3_SendBreak, %function
 997              	UART_3_SendBreak:
 998              	.LFB15:
1377:.\Generated_Source\PSoC5/UART_3.c **** 
1378:.\Generated_Source\PSoC5/UART_3.c **** 
1379:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_SendBreak
1381:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/UART_3.c ****     *
1383:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1384:.\Generated_Source\PSoC5/UART_3.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/UART_3.c ****     *
1386:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/UART_3.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/UART_3.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/UART_3.c ****     *       complete, reinitialize registers to normal transmission mode then return
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 43


1392:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/UART_3.c ****     *       then return.
1394:.\Generated_Source\PSoC5/UART_3.c ****     *   UART_3_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/UART_3.c ****     *      UART_3_SEND_BREAK and UART_3_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/UART_3.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/UART_3.c ****     *
1398:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1399:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1400:.\Generated_Source\PSoC5/UART_3.c ****     *
1401:.\Generated_Source\PSoC5/UART_3.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/UART_3.c ****     *  UART_3_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/UART_3.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/UART_3.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/UART_3.c ****     *
1406:.\Generated_Source\PSoC5/UART_3.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/UART_3.c ****     *  No.
1408:.\Generated_Source\PSoC5/UART_3.c ****     *
1409:.\Generated_Source\PSoC5/UART_3.c ****     * Theory:
1410:.\Generated_Source\PSoC5/UART_3.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/UART_3.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/UART_3.c ****     *  operation.
1413:.\Generated_Source\PSoC5/UART_3.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/UART_3.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/UART_3.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/UART_3.c ****     *     complete.
1417:.\Generated_Source\PSoC5/UART_3.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/UART_3.c ****     *     operation
1419:.\Generated_Source\PSoC5/UART_3.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/UART_3.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/UART_3.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/UART_3.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/UART_3.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/UART_3.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/UART_3.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/UART_3.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/UART_3.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/UART_3.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/UART_3.c ****     *     When interrupt appear with UART_3_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/UART_3.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/UART_3.c ****     *
1432:.\Generated_Source\PSoC5/UART_3.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/UART_3.c ****     *  The UART_3_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/UART_3.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/UART_3.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/UART_3.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/UART_3.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/UART_3.c ****     *
1439:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/UART_3.c ****     {
 999              		.loc 1 1441 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 16
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003              		@ link register save eliminated.
 1004 0000 80B4     		push	{r7}
 1005              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 44


 1006              		.cfi_offset 7, -4
 1007 0002 85B0     		sub	sp, sp, #20
 1008              		.cfi_def_cfa_offset 24
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 0346     		mov	r3, r0
 1012 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/UART_3.c **** 
1443:.\Generated_Source\PSoC5/UART_3.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/UART_3.c ****         if(UART_3_initVar != 0u)
 1013              		.loc 1 1444 0
 1014 000a 1F4B     		ldr	r3, .L74
 1015 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1016 000e 002B     		cmp	r3, #0
 1017 0010 35D0     		beq	.L66
 1018              	.LBB2:
1445:.\Generated_Source\PSoC5/UART_3.c ****         {
1446:.\Generated_Source\PSoC5/UART_3.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/UART_3.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/UART_3.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/UART_3.c **** 
1450:.\Generated_Source\PSoC5/UART_3.c ****         #if(UART_3_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/UART_3.c **** 
1452:.\Generated_Source\PSoC5/UART_3.c ****             if( (retMode == UART_3_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/UART_3.c ****             {
1455:.\Generated_Source\PSoC5/UART_3.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_WriteControlRegister(UART_3_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/UART_3.c ****                                                       UART_3_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/UART_3.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/UART_3.c **** 
1461:.\Generated_Source\PSoC5/UART_3.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/UART_3.c ****                 {
1463:.\Generated_Source\PSoC5/UART_3.c ****                     tmpStat = UART_3_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/UART_3.c ****                 }
1465:.\Generated_Source\PSoC5/UART_3.c ****                 while((tmpStat & UART_3_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/UART_3.c ****             }
1467:.\Generated_Source\PSoC5/UART_3.c **** 
1468:.\Generated_Source\PSoC5/UART_3.c ****             if( (retMode == UART_3_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/UART_3.c ****             {
1471:.\Generated_Source\PSoC5/UART_3.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/UART_3.c ****                 {
1473:.\Generated_Source\PSoC5/UART_3.c ****                     tmpStat = UART_3_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/UART_3.c ****                 }
1475:.\Generated_Source\PSoC5/UART_3.c ****                 while(((uint8)~tmpStat & UART_3_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/UART_3.c ****             }
1477:.\Generated_Source\PSoC5/UART_3.c **** 
1478:.\Generated_Source\PSoC5/UART_3.c ****             if( (retMode == UART_3_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_REINIT) ||
1480:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/UART_3.c ****             {
1482:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_WriteControlRegister(UART_3_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/UART_3.c ****                                               (uint8)~UART_3_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/UART_3.c ****             }
1485:.\Generated_Source\PSoC5/UART_3.c **** 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 45


1486:.\Generated_Source\PSoC5/UART_3.c ****         #else /* UART_3_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/UART_3.c **** 
1488:.\Generated_Source\PSoC5/UART_3.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/UART_3.c **** 
1490:.\Generated_Source\PSoC5/UART_3.c ****             if( (retMode == UART_3_SEND_BREAK) ||
 1019              		.loc 1 1490 0
 1020 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1021 0014 002B     		cmp	r3, #0
 1022 0016 02D0     		beq	.L68
 1023              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1024 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1025 001a 032B     		cmp	r3, #3
 1026 001c 12D1     		bne	.L69
 1027              	.L68:
1491:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/UART_3.c ****             {
1493:.\Generated_Source\PSoC5/UART_3.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/UART_3.c ****                 #if( (UART_3_PARITY_TYPE != UART_3__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/UART_3.c ****                                     (UART_3_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/UART_3.c ****                     UART_3_WriteControlRegister(UART_3_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/UART_3.c ****                                                           UART_3_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/UART_3.c ****                 #endif /* End UART_3_PARITY_TYPE != UART_3__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/UART_3.c **** 
1500:.\Generated_Source\PSoC5/UART_3.c ****                 #if(UART_3_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/UART_3.c ****                     txPeriod = UART_3_TXBITCLKTX_COMPLETE_REG;
 1028              		.loc 1 1501 0 is_stmt 1
 1029 001e 1B4B     		ldr	r3, .L74+4
 1030 0020 1B78     		ldrb	r3, [r3]
 1031 0022 DAB2     		uxtb	r2, r3
 1032 0024 1A4B     		ldr	r3, .L74+8
 1033 0026 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC5/UART_3.c ****                     UART_3_TXBITCLKTX_COMPLETE_REG = UART_3_TXBITCTR_BREAKBITS;
 1034              		.loc 1 1502 0
 1035 0028 184B     		ldr	r3, .L74+4
 1036 002a 6722     		movs	r2, #103
 1037 002c 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/UART_3.c ****                 #else
1504:.\Generated_Source\PSoC5/UART_3.c ****                     txPeriod = UART_3_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/UART_3.c ****                     UART_3_TXBITCTR_PERIOD_REG = UART_3_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/UART_3.c ****                 #endif /* End UART_3_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/UART_3.c **** 
1508:.\Generated_Source\PSoC5/UART_3.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_TXDATA_REG = 0u;
 1038              		.loc 1 1509 0
 1039 002e 194B     		ldr	r3, .L74+12
 1040 0030 0022     		movs	r2, #0
 1041 0032 1A70     		strb	r2, [r3]
 1042              	.L70:
1510:.\Generated_Source\PSoC5/UART_3.c **** 
1511:.\Generated_Source\PSoC5/UART_3.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/UART_3.c ****                 {
1513:.\Generated_Source\PSoC5/UART_3.c ****                     tmpStat = UART_3_TXSTATUS_REG;
 1043              		.loc 1 1513 0 discriminator 1
 1044 0034 184B     		ldr	r3, .L74+16
 1045 0036 1B78     		ldrb	r3, [r3]
 1046 0038 FB73     		strb	r3, [r7, #15]
1514:.\Generated_Source\PSoC5/UART_3.c ****                 }
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 46


1515:.\Generated_Source\PSoC5/UART_3.c ****                 while((tmpStat & UART_3_TX_STS_FIFO_EMPTY) != 0u);
 1047              		.loc 1 1515 0 discriminator 1
 1048 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1049 003c 03F00203 		and	r3, r3, #2
 1050 0040 002B     		cmp	r3, #0
 1051 0042 F7D1     		bne	.L70
 1052              	.L69:
1516:.\Generated_Source\PSoC5/UART_3.c ****             }
1517:.\Generated_Source\PSoC5/UART_3.c **** 
1518:.\Generated_Source\PSoC5/UART_3.c ****             if( (retMode == UART_3_WAIT_FOR_COMPLETE_REINIT) ||
 1053              		.loc 1 1518 0
 1054 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1055 0046 012B     		cmp	r3, #1
 1056 0048 02D0     		beq	.L71
 1057              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1058 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1059 004c 032B     		cmp	r3, #3
 1060 004e 09D1     		bne	.L72
 1061              	.L71:
1519:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/UART_3.c ****             {
1521:.\Generated_Source\PSoC5/UART_3.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/UART_3.c ****                 {
1523:.\Generated_Source\PSoC5/UART_3.c ****                     tmpStat = UART_3_TXSTATUS_REG;
 1062              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1063 0050 114B     		ldr	r3, .L74+16
 1064 0052 1B78     		ldrb	r3, [r3]
 1065 0054 FB73     		strb	r3, [r7, #15]
1524:.\Generated_Source\PSoC5/UART_3.c ****                 }
1525:.\Generated_Source\PSoC5/UART_3.c ****                 while(((uint8)~tmpStat & UART_3_TX_STS_COMPLETE) != 0u);
 1066              		.loc 1 1525 0 discriminator 1
 1067 0056 FB7B     		ldrb	r3, [r7, #15]
 1068 0058 DB43     		mvns	r3, r3
 1069 005a DBB2     		uxtb	r3, r3
 1070 005c 03F00103 		and	r3, r3, #1
 1071 0060 002B     		cmp	r3, #0
 1072 0062 F5D1     		bne	.L71
 1073              	.L72:
1526:.\Generated_Source\PSoC5/UART_3.c ****             }
1527:.\Generated_Source\PSoC5/UART_3.c **** 
1528:.\Generated_Source\PSoC5/UART_3.c ****             if( (retMode == UART_3_WAIT_FOR_COMPLETE_REINIT) ||
 1074              		.loc 1 1528 0
 1075 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1076 0066 012B     		cmp	r3, #1
 1077 0068 05D0     		beq	.L73
 1078              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1079 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1080 006c 022B     		cmp	r3, #2
 1081 006e 02D0     		beq	.L73
1529:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_REINIT) ||
 1082              		.loc 1 1529 0 is_stmt 1
 1083 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1084 0072 032B     		cmp	r3, #3
 1085 0074 03D1     		bne	.L66
 1086              	.L73:
1530:.\Generated_Source\PSoC5/UART_3.c ****                 (retMode == UART_3_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/UART_3.c ****             {
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 47


1532:.\Generated_Source\PSoC5/UART_3.c **** 
1533:.\Generated_Source\PSoC5/UART_3.c ****             #if(UART_3_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1087              		.loc 1 1534 0
 1088 0076 054B     		ldr	r3, .L74+4
 1089 0078 054A     		ldr	r2, .L74+8
 1090 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1091 007c 1A70     		strb	r2, [r3]
 1092              	.L66:
 1093              	.LBE2:
1535:.\Generated_Source\PSoC5/UART_3.c ****             #else
1536:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/UART_3.c ****             #endif /* End UART_3_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/UART_3.c **** 
1539:.\Generated_Source\PSoC5/UART_3.c ****             #if( (UART_3_PARITY_TYPE != UART_3__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/UART_3.c ****                  (UART_3_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/UART_3.c ****                 UART_3_WriteControlRegister(UART_3_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/UART_3.c ****                                                       (uint8) ~UART_3_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/UART_3.c ****             #endif /* End UART_3_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/UART_3.c ****             }
1545:.\Generated_Source\PSoC5/UART_3.c ****         #endif    /* End UART_3_HD_ENABLED */
1546:.\Generated_Source\PSoC5/UART_3.c ****         }
1547:.\Generated_Source\PSoC5/UART_3.c ****     }
 1094              		.loc 1 1547 0
 1095 007e 1437     		adds	r7, r7, #20
 1096              		.cfi_def_cfa_offset 4
 1097 0080 BD46     		mov	sp, r7
 1098              		.cfi_def_cfa_register 13
 1099              		@ sp needed
 1100 0082 5DF8047B 		ldr	r7, [sp], #4
 1101              		.cfi_restore 7
 1102              		.cfi_def_cfa_offset 0
 1103 0086 7047     		bx	lr
 1104              	.L75:
 1105              		.align	2
 1106              	.L74:
 1107 0088 00000000 		.word	UART_3_initVar
 1108 008c 35650040 		.word	1073767733
 1109 0090 03000000 		.word	txPeriod.4942
 1110 0094 46650040 		.word	1073767750
 1111 0098 66650040 		.word	1073767782
 1112              		.cfi_endproc
 1113              	.LFE15:
 1114              		.size	UART_3_SendBreak, .-UART_3_SendBreak
 1115              		.section	.text.UART_3_SetTxAddressMode,"ax",%progbits
 1116              		.align	2
 1117              		.global	UART_3_SetTxAddressMode
 1118              		.thumb
 1119              		.thumb_func
 1120              		.type	UART_3_SetTxAddressMode, %function
 1121              	UART_3_SetTxAddressMode:
 1122              	.LFB16:
1548:.\Generated_Source\PSoC5/UART_3.c **** 
1549:.\Generated_Source\PSoC5/UART_3.c **** 
1550:.\Generated_Source\PSoC5/UART_3.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/UART_3.c ****     * Function Name: UART_3_SetTxAddressMode
1552:.\Generated_Source\PSoC5/UART_3.c ****     ********************************************************************************
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 48


1553:.\Generated_Source\PSoC5/UART_3.c ****     *
1554:.\Generated_Source\PSoC5/UART_3.c ****     * Summary:
1555:.\Generated_Source\PSoC5/UART_3.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/UART_3.c ****     *
1557:.\Generated_Source\PSoC5/UART_3.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/UART_3.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/UART_3.c ****     *       UART_3_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/UART_3.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/UART_3.c ****     *       UART_3_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/UART_3.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/UART_3.c ****     *
1564:.\Generated_Source\PSoC5/UART_3.c ****     * Return:
1565:.\Generated_Source\PSoC5/UART_3.c ****     *  None.
1566:.\Generated_Source\PSoC5/UART_3.c ****     *
1567:.\Generated_Source\PSoC5/UART_3.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/UART_3.c ****     *  This function sets and clears UART_3_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/UART_3.c ****     *  register.
1570:.\Generated_Source\PSoC5/UART_3.c ****     *
1571:.\Generated_Source\PSoC5/UART_3.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/UART_3.c ****     void UART_3_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/UART_3.c ****     {
 1123              		.loc 1 1573 0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 8
 1126              		@ frame_needed = 1, uses_anonymous_args = 0
 1127              		@ link register save eliminated.
 1128 0000 80B4     		push	{r7}
 1129              		.cfi_def_cfa_offset 4
 1130              		.cfi_offset 7, -4
 1131 0002 83B0     		sub	sp, sp, #12
 1132              		.cfi_def_cfa_offset 16
 1133 0004 00AF     		add	r7, sp, #0
 1134              		.cfi_def_cfa_register 7
 1135 0006 0346     		mov	r3, r0
 1136 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/UART_3.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/UART_3.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC5/UART_3.c ****         {
1577:.\Generated_Source\PSoC5/UART_3.c ****         #if( UART_3_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_WriteControlRegister(UART_3_ReadControlRegister() |
1579:.\Generated_Source\PSoC5/UART_3.c ****                                                   UART_3_CTRL_MARK);
1580:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* End UART_3_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/UART_3.c ****         }
1582:.\Generated_Source\PSoC5/UART_3.c ****         else
1583:.\Generated_Source\PSoC5/UART_3.c ****         {
1584:.\Generated_Source\PSoC5/UART_3.c ****         #if( UART_3_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/UART_3.c ****             UART_3_WriteControlRegister(UART_3_ReadControlRegister() &
1586:.\Generated_Source\PSoC5/UART_3.c ****                                                   (uint8) ~UART_3_CTRL_MARK);
1587:.\Generated_Source\PSoC5/UART_3.c ****         #endif /* End UART_3_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/UART_3.c ****         }
1589:.\Generated_Source\PSoC5/UART_3.c ****     }
 1137              		.loc 1 1589 0
 1138 000a 0C37     		adds	r7, r7, #12
 1139              		.cfi_def_cfa_offset 4
 1140 000c BD46     		mov	sp, r7
 1141              		.cfi_def_cfa_register 13
 1142              		@ sp needed
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 49


 1143 000e 5DF8047B 		ldr	r7, [sp], #4
 1144              		.cfi_restore 7
 1145              		.cfi_def_cfa_offset 0
 1146 0012 7047     		bx	lr
 1147              		.cfi_endproc
 1148              	.LFE16:
 1149              		.size	UART_3_SetTxAddressMode, .-UART_3_SetTxAddressMode
 1150              		.bss
 1151              	txPeriod.4942:
 1152 0003 00       		.space	1
 1153              		.text
 1154              	.Letext0:
 1155              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1156              		.section	.debug_info,"",%progbits
 1157              	.Ldebug_info0:
 1158 0000 F7030000 		.4byte	0x3f7
 1159 0004 0400     		.2byte	0x4
 1160 0006 00000000 		.4byte	.Ldebug_abbrev0
 1161 000a 04       		.byte	0x4
 1162 000b 01       		.uleb128 0x1
 1163 000c 5C010000 		.4byte	.LASF53
 1164 0010 01       		.byte	0x1
 1165 0011 02020000 		.4byte	.LASF54
 1166 0015 6C000000 		.4byte	.LASF55
 1167 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1168 001d 00000000 		.4byte	0
 1169 0021 00000000 		.4byte	.Ldebug_line0
 1170 0025 02       		.uleb128 0x2
 1171 0026 01       		.byte	0x1
 1172 0027 06       		.byte	0x6
 1173 0028 81030000 		.4byte	.LASF0
 1174 002c 02       		.uleb128 0x2
 1175 002d 01       		.byte	0x1
 1176 002e 08       		.byte	0x8
 1177 002f 4E010000 		.4byte	.LASF1
 1178 0033 02       		.uleb128 0x2
 1179 0034 02       		.byte	0x2
 1180 0035 05       		.byte	0x5
 1181 0036 F8010000 		.4byte	.LASF2
 1182 003a 02       		.uleb128 0x2
 1183 003b 02       		.byte	0x2
 1184 003c 07       		.byte	0x7
 1185 003d 59000000 		.4byte	.LASF3
 1186 0041 02       		.uleb128 0x2
 1187 0042 04       		.byte	0x4
 1188 0043 05       		.byte	0x5
 1189 0044 60030000 		.4byte	.LASF4
 1190 0048 02       		.uleb128 0x2
 1191 0049 04       		.byte	0x4
 1192 004a 07       		.byte	0x7
 1193 004b E6000000 		.4byte	.LASF5
 1194 004f 02       		.uleb128 0x2
 1195 0050 08       		.byte	0x8
 1196 0051 05       		.byte	0x5
 1197 0052 00000000 		.4byte	.LASF6
 1198 0056 02       		.uleb128 0x2
 1199 0057 08       		.byte	0x8
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 50


 1200 0058 07       		.byte	0x7
 1201 0059 68020000 		.4byte	.LASF7
 1202 005d 03       		.uleb128 0x3
 1203 005e 04       		.byte	0x4
 1204 005f 05       		.byte	0x5
 1205 0060 696E7400 		.ascii	"int\000"
 1206 0064 02       		.uleb128 0x2
 1207 0065 04       		.byte	0x4
 1208 0066 07       		.byte	0x7
 1209 0067 4F020000 		.4byte	.LASF8
 1210 006b 04       		.uleb128 0x4
 1211 006c 14010000 		.4byte	.LASF9
 1212 0070 02       		.byte	0x2
 1213 0071 3801     		.2byte	0x138
 1214 0073 2C000000 		.4byte	0x2c
 1215 0077 04       		.uleb128 0x4
 1216 0078 24020000 		.4byte	.LASF10
 1217 007c 02       		.byte	0x2
 1218 007d 3901     		.2byte	0x139
 1219 007f 3A000000 		.4byte	0x3a
 1220 0083 04       		.uleb128 0x4
 1221 0084 3A020000 		.4byte	.LASF11
 1222 0088 02       		.byte	0x2
 1223 0089 3A01     		.2byte	0x13a
 1224 008b 48000000 		.4byte	0x48
 1225 008f 02       		.uleb128 0x2
 1226 0090 04       		.byte	0x4
 1227 0091 04       		.byte	0x4
 1228 0092 B4000000 		.4byte	.LASF12
 1229 0096 02       		.uleb128 0x2
 1230 0097 08       		.byte	0x8
 1231 0098 04       		.byte	0x4
 1232 0099 EA010000 		.4byte	.LASF13
 1233 009d 04       		.uleb128 0x4
 1234 009e 38000000 		.4byte	.LASF14
 1235 00a2 02       		.byte	0x2
 1236 00a3 4901     		.2byte	0x149
 1237 00a5 A9000000 		.4byte	0xa9
 1238 00a9 02       		.uleb128 0x2
 1239 00aa 01       		.byte	0x1
 1240 00ab 08       		.byte	0x8
 1241 00ac CB020000 		.4byte	.LASF15
 1242 00b0 04       		.uleb128 0x4
 1243 00b1 88020000 		.4byte	.LASF16
 1244 00b5 02       		.byte	0x2
 1245 00b6 E201     		.2byte	0x1e2
 1246 00b8 BC000000 		.4byte	0xbc
 1247 00bc 05       		.uleb128 0x5
 1248 00bd 6B000000 		.4byte	0x6b
 1249 00c1 04       		.uleb128 0x4
 1250 00c2 0E000000 		.4byte	.LASF17
 1251 00c6 02       		.byte	0x2
 1252 00c7 E401     		.2byte	0x1e4
 1253 00c9 CD000000 		.4byte	0xcd
 1254 00cd 05       		.uleb128 0x5
 1255 00ce 83000000 		.4byte	0x83
 1256 00d2 02       		.uleb128 0x2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 51


 1257 00d3 04       		.byte	0x4
 1258 00d4 07       		.byte	0x7
 1259 00d5 B7020000 		.4byte	.LASF18
 1260 00d9 06       		.uleb128 0x6
 1261 00da 90000000 		.4byte	.LASF19
 1262 00de 01       		.byte	0x1
 1263 00df 4C       		.byte	0x4c
 1264 00e0 00000000 		.4byte	.LFB0
 1265 00e4 20000000 		.4byte	.LFE0-.LFB0
 1266 00e8 01       		.uleb128 0x1
 1267 00e9 9C       		.byte	0x9c
 1268 00ea 06       		.uleb128 0x6
 1269 00eb 5C020000 		.4byte	.LASF20
 1270 00ef 01       		.byte	0x1
 1271 00f0 6A       		.byte	0x6a
 1272 00f1 00000000 		.4byte	.LFB1
 1273 00f5 38000000 		.4byte	.LFE1-.LFB1
 1274 00f9 01       		.uleb128 0x1
 1275 00fa 9C       		.byte	0x9c
 1276 00fb 07       		.uleb128 0x7
 1277 00fc 41020000 		.4byte	.LASF21
 1278 0100 01       		.byte	0x1
 1279 0101 B7       		.byte	0xb7
 1280 0102 00000000 		.4byte	.LFB2
 1281 0106 48000000 		.4byte	.LFE2-.LFB2
 1282 010a 01       		.uleb128 0x1
 1283 010b 9C       		.byte	0x9c
 1284 010c 1F010000 		.4byte	0x11f
 1285 0110 08       		.uleb128 0x8
 1286 0111 3D010000 		.4byte	.LASF23
 1287 0115 01       		.byte	0x1
 1288 0116 B9       		.byte	0xb9
 1289 0117 6B000000 		.4byte	0x6b
 1290 011b 02       		.uleb128 0x2
 1291 011c 91       		.byte	0x91
 1292 011d 77       		.sleb128 -9
 1293 011e 00       		.byte	0
 1294 011f 07       		.uleb128 0x7
 1295 0120 8D030000 		.4byte	.LASF22
 1296 0124 01       		.byte	0x1
 1297 0125 F0       		.byte	0xf0
 1298 0126 00000000 		.4byte	.LFB3
 1299 012a 40000000 		.4byte	.LFE3-.LFB3
 1300 012e 01       		.uleb128 0x1
 1301 012f 9C       		.byte	0x9c
 1302 0130 43010000 		.4byte	0x143
 1303 0134 08       		.uleb128 0x8
 1304 0135 3D010000 		.4byte	.LASF23
 1305 0139 01       		.byte	0x1
 1306 013a F2       		.byte	0xf2
 1307 013b 6B000000 		.4byte	0x6b
 1308 013f 02       		.uleb128 0x2
 1309 0140 91       		.byte	0x91
 1310 0141 77       		.sleb128 -9
 1311 0142 00       		.byte	0
 1312 0143 09       		.uleb128 0x9
 1313 0144 14000000 		.4byte	.LASF30
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 52


 1314 0148 01       		.byte	0x1
 1315 0149 2701     		.2byte	0x127
 1316 014b 6B000000 		.4byte	0x6b
 1317 014f 00000000 		.4byte	.LFB4
 1318 0153 10000000 		.4byte	.LFE4-.LFB4
 1319 0157 01       		.uleb128 0x1
 1320 0158 9C       		.byte	0x9c
 1321 0159 0A       		.uleb128 0xa
 1322 015a F8000000 		.4byte	.LASF24
 1323 015e 01       		.byte	0x1
 1324 015f 3F01     		.2byte	0x13f
 1325 0161 00000000 		.4byte	.LFB5
 1326 0165 14000000 		.4byte	.LFE5-.LFB5
 1327 0169 01       		.uleb128 0x1
 1328 016a 9C       		.byte	0x9c
 1329 016b 7F010000 		.4byte	0x17f
 1330 016f 0B       		.uleb128 0xb
 1331 0170 1A010000 		.4byte	.LASF26
 1332 0174 01       		.byte	0x1
 1333 0175 3F01     		.2byte	0x13f
 1334 0177 6B000000 		.4byte	0x6b
 1335 017b 02       		.uleb128 0x2
 1336 017c 91       		.byte	0x91
 1337 017d 77       		.sleb128 -9
 1338 017e 00       		.byte	0
 1339 017f 0A       		.uleb128 0xa
 1340 0180 8D020000 		.4byte	.LASF25
 1341 0184 01       		.byte	0x1
 1342 0185 8C03     		.2byte	0x38c
 1343 0187 00000000 		.4byte	.LFB6
 1344 018b 20000000 		.4byte	.LFE6-.LFB6
 1345 018f 01       		.uleb128 0x1
 1346 0190 9C       		.byte	0x9c
 1347 0191 A5010000 		.4byte	0x1a5
 1348 0195 0B       		.uleb128 0xb
 1349 0196 F1010000 		.4byte	.LASF27
 1350 019a 01       		.byte	0x1
 1351 019b 8C03     		.2byte	0x38c
 1352 019d 6B000000 		.4byte	0x6b
 1353 01a1 02       		.uleb128 0x2
 1354 01a2 91       		.byte	0x91
 1355 01a3 77       		.sleb128 -9
 1356 01a4 00       		.byte	0
 1357 01a5 0A       		.uleb128 0xa
 1358 01a6 46000000 		.4byte	.LASF28
 1359 01aa 01       		.byte	0x1
 1360 01ab AE03     		.2byte	0x3ae
 1361 01ad 00000000 		.4byte	.LFB7
 1362 01b1 94000000 		.4byte	.LFE7-.LFB7
 1363 01b5 01       		.uleb128 0x1
 1364 01b6 9C       		.byte	0x9c
 1365 01b7 CB010000 		.4byte	0x1cb
 1366 01bb 0B       		.uleb128 0xb
 1367 01bc C0020000 		.4byte	.LASF29
 1368 01c0 01       		.byte	0x1
 1369 01c1 AE03     		.2byte	0x3ae
 1370 01c3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 53


 1371 01c7 02       		.uleb128 0x2
 1372 01c8 91       		.byte	0x91
 1373 01c9 77       		.sleb128 -9
 1374 01ca 00       		.byte	0
 1375 01cb 09       		.uleb128 0x9
 1376 01cc D0020000 		.4byte	.LASF31
 1377 01d0 01       		.byte	0x1
 1378 01d1 EB03     		.2byte	0x3eb
 1379 01d3 6B000000 		.4byte	0x6b
 1380 01d7 00000000 		.4byte	.LFB8
 1381 01db 18000000 		.4byte	.LFE8-.LFB8
 1382 01df 01       		.uleb128 0x1
 1383 01e0 9C       		.byte	0x9c
 1384 01e1 0A       		.uleb128 0xa
 1385 01e2 D7000000 		.4byte	.LASF32
 1386 01e6 01       		.byte	0x1
 1387 01e7 1104     		.2byte	0x411
 1388 01e9 00000000 		.4byte	.LFB9
 1389 01ed B8000000 		.4byte	.LFE9-.LFB9
 1390 01f1 01       		.uleb128 0x1
 1391 01f2 9C       		.byte	0x9c
 1392 01f3 25020000 		.4byte	0x225
 1393 01f7 0B       		.uleb128 0xb
 1394 01f8 C0020000 		.4byte	.LASF29
 1395 01fc 01       		.byte	0x1
 1396 01fd 1104     		.2byte	0x411
 1397 01ff 6B000000 		.4byte	0x6b
 1398 0203 02       		.uleb128 0x2
 1399 0204 91       		.byte	0x91
 1400 0205 6F       		.sleb128 -17
 1401 0206 0C       		.uleb128 0xc
 1402 0207 BA000000 		.4byte	.LASF33
 1403 020b 01       		.byte	0x1
 1404 020c 1804     		.2byte	0x418
 1405 020e 6B000000 		.4byte	0x6b
 1406 0212 02       		.uleb128 0x2
 1407 0213 91       		.byte	0x91
 1408 0214 77       		.sleb128 -9
 1409 0215 0C       		.uleb128 0xc
 1410 0216 50030000 		.4byte	.LASF34
 1411 021a 01       		.byte	0x1
 1412 021b 1904     		.2byte	0x419
 1413 021d 6B000000 		.4byte	0x6b
 1414 0221 02       		.uleb128 0x2
 1415 0222 91       		.byte	0x91
 1416 0223 76       		.sleb128 -10
 1417 0224 00       		.byte	0
 1418 0225 0D       		.uleb128 0xd
 1419 0226 22010000 		.4byte	.LASF35
 1420 022a 01       		.byte	0x1
 1421 022b 7904     		.2byte	0x479
 1422 022d 00000000 		.4byte	.LFB10
 1423 0231 40000000 		.4byte	.LFE10-.LFB10
 1424 0235 01       		.uleb128 0x1
 1425 0236 9C       		.byte	0x9c
 1426 0237 5A020000 		.4byte	0x25a
 1427 023b 0B       		.uleb128 0xb
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 54


 1428 023c 9D000000 		.4byte	.LASF36
 1429 0240 01       		.byte	0x1
 1430 0241 7904     		.2byte	0x479
 1431 0243 5A020000 		.4byte	0x25a
 1432 0247 02       		.uleb128 0x2
 1433 0248 91       		.byte	0x91
 1434 0249 6C       		.sleb128 -20
 1435 024a 0C       		.uleb128 0xc
 1436 024b 7F020000 		.4byte	.LASF37
 1437 024f 01       		.byte	0x1
 1438 0250 7B04     		.2byte	0x47b
 1439 0252 77000000 		.4byte	0x77
 1440 0256 02       		.uleb128 0x2
 1441 0257 91       		.byte	0x91
 1442 0258 76       		.sleb128 -10
 1443 0259 00       		.byte	0
 1444 025a 0E       		.uleb128 0xe
 1445 025b 04       		.byte	0x4
 1446 025c 60020000 		.4byte	0x260
 1447 0260 0F       		.uleb128 0xf
 1448 0261 9D000000 		.4byte	0x9d
 1449 0265 0D       		.uleb128 0xd
 1450 0266 A7020000 		.4byte	.LASF38
 1451 026a 01       		.byte	0x1
 1452 026b A704     		.2byte	0x4a7
 1453 026d 00000000 		.4byte	.LFB11
 1454 0271 40000000 		.4byte	.LFE11-.LFB11
 1455 0275 01       		.uleb128 0x1
 1456 0276 9C       		.byte	0x9c
 1457 0277 A9020000 		.4byte	0x2a9
 1458 027b 0B       		.uleb128 0xb
 1459 027c 9D000000 		.4byte	.LASF36
 1460 0280 01       		.byte	0x1
 1461 0281 A704     		.2byte	0x4a7
 1462 0283 A9020000 		.4byte	0x2a9
 1463 0287 02       		.uleb128 0x2
 1464 0288 91       		.byte	0x91
 1465 0289 6C       		.sleb128 -20
 1466 028a 0B       		.uleb128 0xb
 1467 028b 33010000 		.4byte	.LASF39
 1468 028f 01       		.byte	0x1
 1469 0290 A704     		.2byte	0x4a7
 1470 0292 6B000000 		.4byte	0x6b
 1471 0296 02       		.uleb128 0x2
 1472 0297 91       		.byte	0x91
 1473 0298 6B       		.sleb128 -21
 1474 0299 0C       		.uleb128 0xc
 1475 029a 7F020000 		.4byte	.LASF37
 1476 029e 01       		.byte	0x1
 1477 029f AA04     		.2byte	0x4aa
 1478 02a1 6B000000 		.4byte	0x6b
 1479 02a5 02       		.uleb128 0x2
 1480 02a6 91       		.byte	0x91
 1481 02a7 77       		.sleb128 -9
 1482 02a8 00       		.byte	0
 1483 02a9 0E       		.uleb128 0xe
 1484 02aa 04       		.byte	0x4
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 55


 1485 02ab AF020000 		.4byte	0x2af
 1486 02af 0F       		.uleb128 0xf
 1487 02b0 6B000000 		.4byte	0x6b
 1488 02b4 0D       		.uleb128 0xd
 1489 02b5 2B020000 		.4byte	.LASF40
 1490 02b9 01       		.byte	0x1
 1491 02ba CE04     		.2byte	0x4ce
 1492 02bc 00000000 		.4byte	.LFB12
 1493 02c0 30000000 		.4byte	.LFE12-.LFB12
 1494 02c4 01       		.uleb128 0x1
 1495 02c5 9C       		.byte	0x9c
 1496 02c6 DA020000 		.4byte	0x2da
 1497 02ca 0B       		.uleb128 0xb
 1498 02cb C0020000 		.4byte	.LASF29
 1499 02cf 01       		.byte	0x1
 1500 02d0 CE04     		.2byte	0x4ce
 1501 02d2 6B000000 		.4byte	0x6b
 1502 02d6 02       		.uleb128 0x2
 1503 02d7 91       		.byte	0x91
 1504 02d8 77       		.sleb128 -9
 1505 02d9 00       		.byte	0
 1506 02da 10       		.uleb128 0x10
 1507 02db 00030000 		.4byte	.LASF56
 1508 02df 01       		.byte	0x1
 1509 02e0 F904     		.2byte	0x4f9
 1510 02e2 6B000000 		.4byte	0x6b
 1511 02e6 00000000 		.4byte	.LFB13
 1512 02ea 74000000 		.4byte	.LFE13-.LFB13
 1513 02ee 01       		.uleb128 0x1
 1514 02ef 9C       		.byte	0x9c
 1515 02f0 04030000 		.4byte	0x304
 1516 02f4 0C       		.uleb128 0xc
 1517 02f5 99030000 		.4byte	.LASF41
 1518 02f9 01       		.byte	0x1
 1519 02fa FC04     		.2byte	0x4fc
 1520 02fc 6B000000 		.4byte	0x6b
 1521 0300 02       		.uleb128 0x2
 1522 0301 91       		.byte	0x91
 1523 0302 77       		.sleb128 -9
 1524 0303 00       		.byte	0
 1525 0304 0D       		.uleb128 0xd
 1526 0305 17030000 		.4byte	.LASF42
 1527 0309 01       		.byte	0x1
 1528 030a 4A05     		.2byte	0x54a
 1529 030c 00000000 		.4byte	.LFB14
 1530 0310 68000000 		.4byte	.LFE14-.LFB14
 1531 0314 01       		.uleb128 0x1
 1532 0315 9C       		.byte	0x9c
 1533 0316 2A030000 		.4byte	0x32a
 1534 031a 0C       		.uleb128 0xc
 1535 031b 3D010000 		.4byte	.LASF23
 1536 031f 01       		.byte	0x1
 1537 0320 4C05     		.2byte	0x54c
 1538 0322 6B000000 		.4byte	0x6b
 1539 0326 02       		.uleb128 0x2
 1540 0327 91       		.byte	0x91
 1541 0328 77       		.sleb128 -9
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 56


 1542 0329 00       		.byte	0
 1543 032a 0A       		.uleb128 0xa
 1544 032b 9E030000 		.4byte	.LASF43
 1545 032f 01       		.byte	0x1
 1546 0330 A005     		.2byte	0x5a0
 1547 0332 00000000 		.4byte	.LFB15
 1548 0336 9C000000 		.4byte	.LFE15-.LFB15
 1549 033a 01       		.uleb128 0x1
 1550 033b 9C       		.byte	0x9c
 1551 033c 7B030000 		.4byte	0x37b
 1552 0340 0B       		.uleb128 0xb
 1553 0341 F8020000 		.4byte	.LASF44
 1554 0345 01       		.byte	0x1
 1555 0346 A005     		.2byte	0x5a0
 1556 0348 6B000000 		.4byte	0x6b
 1557 034c 02       		.uleb128 0x2
 1558 034d 91       		.byte	0x91
 1559 034e 6F       		.sleb128 -17
 1560 034f 11       		.uleb128 0x11
 1561 0350 12000000 		.4byte	.LBB2
 1562 0354 6C000000 		.4byte	.LBE2-.LBB2
 1563 0358 0C       		.uleb128 0xc
 1564 0359 3E000000 		.4byte	.LASF45
 1565 035d 01       		.byte	0x1
 1566 035e A805     		.2byte	0x5a8
 1567 0360 6B000000 		.4byte	0x6b
 1568 0364 02       		.uleb128 0x2
 1569 0365 91       		.byte	0x91
 1570 0366 77       		.sleb128 -9
 1571 0367 0C       		.uleb128 0xc
 1572 0368 2F000000 		.4byte	.LASF46
 1573 036c 01       		.byte	0x1
 1574 036d D005     		.2byte	0x5d0
 1575 036f 6B000000 		.4byte	0x6b
 1576 0373 05       		.uleb128 0x5
 1577 0374 03       		.byte	0x3
 1578 0375 03000000 		.4byte	txPeriod.4942
 1579 0379 00       		.byte	0
 1580 037a 00       		.byte	0
 1581 037b 0A       		.uleb128 0xa
 1582 037c 69030000 		.4byte	.LASF47
 1583 0380 01       		.byte	0x1
 1584 0381 2406     		.2byte	0x624
 1585 0383 00000000 		.4byte	.LFB16
 1586 0387 14000000 		.4byte	.LFE16-.LFB16
 1587 038b 01       		.uleb128 0x1
 1588 038c 9C       		.byte	0x9c
 1589 038d A1030000 		.4byte	0x3a1
 1590 0391 0B       		.uleb128 0xb
 1591 0392 CB000000 		.4byte	.LASF48
 1592 0396 01       		.byte	0x1
 1593 0397 2406     		.2byte	0x624
 1594 0399 6B000000 		.4byte	0x6b
 1595 039d 02       		.uleb128 0x2
 1596 039e 91       		.byte	0x91
 1597 039f 77       		.sleb128 -9
 1598 03a0 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 57


 1599 03a1 12       		.uleb128 0x12
 1600 03a2 2C030000 		.4byte	.LASF49
 1601 03a6 01       		.byte	0x1
 1602 03a7 1B       		.byte	0x1b
 1603 03a8 6B000000 		.4byte	0x6b
 1604 03ac 05       		.uleb128 0x5
 1605 03ad 03       		.byte	0x3
 1606 03ae 00000000 		.4byte	UART_3_initVar
 1607 03b2 13       		.uleb128 0x13
 1608 03b3 6B000000 		.4byte	0x6b
 1609 03b7 C2030000 		.4byte	0x3c2
 1610 03bb 14       		.uleb128 0x14
 1611 03bc D2000000 		.4byte	0xd2
 1612 03c0 1A       		.byte	0x1a
 1613 03c1 00       		.byte	0
 1614 03c2 12       		.uleb128 0x12
 1615 03c3 A4000000 		.4byte	.LASF50
 1616 03c7 01       		.byte	0x1
 1617 03c8 1E       		.byte	0x1e
 1618 03c9 D3030000 		.4byte	0x3d3
 1619 03cd 05       		.uleb128 0x5
 1620 03ce 03       		.byte	0x3
 1621 03cf 00000000 		.4byte	UART_3_txBuffer
 1622 03d3 05       		.uleb128 0x5
 1623 03d4 B2030000 		.4byte	0x3b2
 1624 03d8 12       		.uleb128 0x12
 1625 03d9 E4020000 		.4byte	.LASF51
 1626 03dd 01       		.byte	0x1
 1627 03de 1F       		.byte	0x1f
 1628 03df BC000000 		.4byte	0xbc
 1629 03e3 05       		.uleb128 0x5
 1630 03e4 03       		.byte	0x3
 1631 03e5 00000000 		.4byte	UART_3_txBufferRead
 1632 03e9 12       		.uleb128 0x12
 1633 03ea 3B030000 		.4byte	.LASF52
 1634 03ee 01       		.byte	0x1
 1635 03ef 20       		.byte	0x20
 1636 03f0 6B000000 		.4byte	0x6b
 1637 03f4 05       		.uleb128 0x5
 1638 03f5 03       		.byte	0x3
 1639 03f6 00000000 		.4byte	UART_3_txBufferWrite
 1640 03fa 00       		.byte	0
 1641              		.section	.debug_abbrev,"",%progbits
 1642              	.Ldebug_abbrev0:
 1643 0000 01       		.uleb128 0x1
 1644 0001 11       		.uleb128 0x11
 1645 0002 01       		.byte	0x1
 1646 0003 25       		.uleb128 0x25
 1647 0004 0E       		.uleb128 0xe
 1648 0005 13       		.uleb128 0x13
 1649 0006 0B       		.uleb128 0xb
 1650 0007 03       		.uleb128 0x3
 1651 0008 0E       		.uleb128 0xe
 1652 0009 1B       		.uleb128 0x1b
 1653 000a 0E       		.uleb128 0xe
 1654 000b 55       		.uleb128 0x55
 1655 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 58


 1656 000d 11       		.uleb128 0x11
 1657 000e 01       		.uleb128 0x1
 1658 000f 10       		.uleb128 0x10
 1659 0010 17       		.uleb128 0x17
 1660 0011 00       		.byte	0
 1661 0012 00       		.byte	0
 1662 0013 02       		.uleb128 0x2
 1663 0014 24       		.uleb128 0x24
 1664 0015 00       		.byte	0
 1665 0016 0B       		.uleb128 0xb
 1666 0017 0B       		.uleb128 0xb
 1667 0018 3E       		.uleb128 0x3e
 1668 0019 0B       		.uleb128 0xb
 1669 001a 03       		.uleb128 0x3
 1670 001b 0E       		.uleb128 0xe
 1671 001c 00       		.byte	0
 1672 001d 00       		.byte	0
 1673 001e 03       		.uleb128 0x3
 1674 001f 24       		.uleb128 0x24
 1675 0020 00       		.byte	0
 1676 0021 0B       		.uleb128 0xb
 1677 0022 0B       		.uleb128 0xb
 1678 0023 3E       		.uleb128 0x3e
 1679 0024 0B       		.uleb128 0xb
 1680 0025 03       		.uleb128 0x3
 1681 0026 08       		.uleb128 0x8
 1682 0027 00       		.byte	0
 1683 0028 00       		.byte	0
 1684 0029 04       		.uleb128 0x4
 1685 002a 16       		.uleb128 0x16
 1686 002b 00       		.byte	0
 1687 002c 03       		.uleb128 0x3
 1688 002d 0E       		.uleb128 0xe
 1689 002e 3A       		.uleb128 0x3a
 1690 002f 0B       		.uleb128 0xb
 1691 0030 3B       		.uleb128 0x3b
 1692 0031 05       		.uleb128 0x5
 1693 0032 49       		.uleb128 0x49
 1694 0033 13       		.uleb128 0x13
 1695 0034 00       		.byte	0
 1696 0035 00       		.byte	0
 1697 0036 05       		.uleb128 0x5
 1698 0037 35       		.uleb128 0x35
 1699 0038 00       		.byte	0
 1700 0039 49       		.uleb128 0x49
 1701 003a 13       		.uleb128 0x13
 1702 003b 00       		.byte	0
 1703 003c 00       		.byte	0
 1704 003d 06       		.uleb128 0x6
 1705 003e 2E       		.uleb128 0x2e
 1706 003f 00       		.byte	0
 1707 0040 3F       		.uleb128 0x3f
 1708 0041 19       		.uleb128 0x19
 1709 0042 03       		.uleb128 0x3
 1710 0043 0E       		.uleb128 0xe
 1711 0044 3A       		.uleb128 0x3a
 1712 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 59


 1713 0046 3B       		.uleb128 0x3b
 1714 0047 0B       		.uleb128 0xb
 1715 0048 27       		.uleb128 0x27
 1716 0049 19       		.uleb128 0x19
 1717 004a 11       		.uleb128 0x11
 1718 004b 01       		.uleb128 0x1
 1719 004c 12       		.uleb128 0x12
 1720 004d 06       		.uleb128 0x6
 1721 004e 40       		.uleb128 0x40
 1722 004f 18       		.uleb128 0x18
 1723 0050 9642     		.uleb128 0x2116
 1724 0052 19       		.uleb128 0x19
 1725 0053 00       		.byte	0
 1726 0054 00       		.byte	0
 1727 0055 07       		.uleb128 0x7
 1728 0056 2E       		.uleb128 0x2e
 1729 0057 01       		.byte	0x1
 1730 0058 3F       		.uleb128 0x3f
 1731 0059 19       		.uleb128 0x19
 1732 005a 03       		.uleb128 0x3
 1733 005b 0E       		.uleb128 0xe
 1734 005c 3A       		.uleb128 0x3a
 1735 005d 0B       		.uleb128 0xb
 1736 005e 3B       		.uleb128 0x3b
 1737 005f 0B       		.uleb128 0xb
 1738 0060 27       		.uleb128 0x27
 1739 0061 19       		.uleb128 0x19
 1740 0062 11       		.uleb128 0x11
 1741 0063 01       		.uleb128 0x1
 1742 0064 12       		.uleb128 0x12
 1743 0065 06       		.uleb128 0x6
 1744 0066 40       		.uleb128 0x40
 1745 0067 18       		.uleb128 0x18
 1746 0068 9642     		.uleb128 0x2116
 1747 006a 19       		.uleb128 0x19
 1748 006b 01       		.uleb128 0x1
 1749 006c 13       		.uleb128 0x13
 1750 006d 00       		.byte	0
 1751 006e 00       		.byte	0
 1752 006f 08       		.uleb128 0x8
 1753 0070 34       		.uleb128 0x34
 1754 0071 00       		.byte	0
 1755 0072 03       		.uleb128 0x3
 1756 0073 0E       		.uleb128 0xe
 1757 0074 3A       		.uleb128 0x3a
 1758 0075 0B       		.uleb128 0xb
 1759 0076 3B       		.uleb128 0x3b
 1760 0077 0B       		.uleb128 0xb
 1761 0078 49       		.uleb128 0x49
 1762 0079 13       		.uleb128 0x13
 1763 007a 02       		.uleb128 0x2
 1764 007b 18       		.uleb128 0x18
 1765 007c 00       		.byte	0
 1766 007d 00       		.byte	0
 1767 007e 09       		.uleb128 0x9
 1768 007f 2E       		.uleb128 0x2e
 1769 0080 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 60


 1770 0081 3F       		.uleb128 0x3f
 1771 0082 19       		.uleb128 0x19
 1772 0083 03       		.uleb128 0x3
 1773 0084 0E       		.uleb128 0xe
 1774 0085 3A       		.uleb128 0x3a
 1775 0086 0B       		.uleb128 0xb
 1776 0087 3B       		.uleb128 0x3b
 1777 0088 05       		.uleb128 0x5
 1778 0089 27       		.uleb128 0x27
 1779 008a 19       		.uleb128 0x19
 1780 008b 49       		.uleb128 0x49
 1781 008c 13       		.uleb128 0x13
 1782 008d 11       		.uleb128 0x11
 1783 008e 01       		.uleb128 0x1
 1784 008f 12       		.uleb128 0x12
 1785 0090 06       		.uleb128 0x6
 1786 0091 40       		.uleb128 0x40
 1787 0092 18       		.uleb128 0x18
 1788 0093 9742     		.uleb128 0x2117
 1789 0095 19       		.uleb128 0x19
 1790 0096 00       		.byte	0
 1791 0097 00       		.byte	0
 1792 0098 0A       		.uleb128 0xa
 1793 0099 2E       		.uleb128 0x2e
 1794 009a 01       		.byte	0x1
 1795 009b 3F       		.uleb128 0x3f
 1796 009c 19       		.uleb128 0x19
 1797 009d 03       		.uleb128 0x3
 1798 009e 0E       		.uleb128 0xe
 1799 009f 3A       		.uleb128 0x3a
 1800 00a0 0B       		.uleb128 0xb
 1801 00a1 3B       		.uleb128 0x3b
 1802 00a2 05       		.uleb128 0x5
 1803 00a3 27       		.uleb128 0x27
 1804 00a4 19       		.uleb128 0x19
 1805 00a5 11       		.uleb128 0x11
 1806 00a6 01       		.uleb128 0x1
 1807 00a7 12       		.uleb128 0x12
 1808 00a8 06       		.uleb128 0x6
 1809 00a9 40       		.uleb128 0x40
 1810 00aa 18       		.uleb128 0x18
 1811 00ab 9742     		.uleb128 0x2117
 1812 00ad 19       		.uleb128 0x19
 1813 00ae 01       		.uleb128 0x1
 1814 00af 13       		.uleb128 0x13
 1815 00b0 00       		.byte	0
 1816 00b1 00       		.byte	0
 1817 00b2 0B       		.uleb128 0xb
 1818 00b3 05       		.uleb128 0x5
 1819 00b4 00       		.byte	0
 1820 00b5 03       		.uleb128 0x3
 1821 00b6 0E       		.uleb128 0xe
 1822 00b7 3A       		.uleb128 0x3a
 1823 00b8 0B       		.uleb128 0xb
 1824 00b9 3B       		.uleb128 0x3b
 1825 00ba 05       		.uleb128 0x5
 1826 00bb 49       		.uleb128 0x49
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 61


 1827 00bc 13       		.uleb128 0x13
 1828 00bd 02       		.uleb128 0x2
 1829 00be 18       		.uleb128 0x18
 1830 00bf 00       		.byte	0
 1831 00c0 00       		.byte	0
 1832 00c1 0C       		.uleb128 0xc
 1833 00c2 34       		.uleb128 0x34
 1834 00c3 00       		.byte	0
 1835 00c4 03       		.uleb128 0x3
 1836 00c5 0E       		.uleb128 0xe
 1837 00c6 3A       		.uleb128 0x3a
 1838 00c7 0B       		.uleb128 0xb
 1839 00c8 3B       		.uleb128 0x3b
 1840 00c9 05       		.uleb128 0x5
 1841 00ca 49       		.uleb128 0x49
 1842 00cb 13       		.uleb128 0x13
 1843 00cc 02       		.uleb128 0x2
 1844 00cd 18       		.uleb128 0x18
 1845 00ce 00       		.byte	0
 1846 00cf 00       		.byte	0
 1847 00d0 0D       		.uleb128 0xd
 1848 00d1 2E       		.uleb128 0x2e
 1849 00d2 01       		.byte	0x1
 1850 00d3 3F       		.uleb128 0x3f
 1851 00d4 19       		.uleb128 0x19
 1852 00d5 03       		.uleb128 0x3
 1853 00d6 0E       		.uleb128 0xe
 1854 00d7 3A       		.uleb128 0x3a
 1855 00d8 0B       		.uleb128 0xb
 1856 00d9 3B       		.uleb128 0x3b
 1857 00da 05       		.uleb128 0x5
 1858 00db 27       		.uleb128 0x27
 1859 00dc 19       		.uleb128 0x19
 1860 00dd 11       		.uleb128 0x11
 1861 00de 01       		.uleb128 0x1
 1862 00df 12       		.uleb128 0x12
 1863 00e0 06       		.uleb128 0x6
 1864 00e1 40       		.uleb128 0x40
 1865 00e2 18       		.uleb128 0x18
 1866 00e3 9642     		.uleb128 0x2116
 1867 00e5 19       		.uleb128 0x19
 1868 00e6 01       		.uleb128 0x1
 1869 00e7 13       		.uleb128 0x13
 1870 00e8 00       		.byte	0
 1871 00e9 00       		.byte	0
 1872 00ea 0E       		.uleb128 0xe
 1873 00eb 0F       		.uleb128 0xf
 1874 00ec 00       		.byte	0
 1875 00ed 0B       		.uleb128 0xb
 1876 00ee 0B       		.uleb128 0xb
 1877 00ef 49       		.uleb128 0x49
 1878 00f0 13       		.uleb128 0x13
 1879 00f1 00       		.byte	0
 1880 00f2 00       		.byte	0
 1881 00f3 0F       		.uleb128 0xf
 1882 00f4 26       		.uleb128 0x26
 1883 00f5 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 62


 1884 00f6 49       		.uleb128 0x49
 1885 00f7 13       		.uleb128 0x13
 1886 00f8 00       		.byte	0
 1887 00f9 00       		.byte	0
 1888 00fa 10       		.uleb128 0x10
 1889 00fb 2E       		.uleb128 0x2e
 1890 00fc 01       		.byte	0x1
 1891 00fd 3F       		.uleb128 0x3f
 1892 00fe 19       		.uleb128 0x19
 1893 00ff 03       		.uleb128 0x3
 1894 0100 0E       		.uleb128 0xe
 1895 0101 3A       		.uleb128 0x3a
 1896 0102 0B       		.uleb128 0xb
 1897 0103 3B       		.uleb128 0x3b
 1898 0104 05       		.uleb128 0x5
 1899 0105 27       		.uleb128 0x27
 1900 0106 19       		.uleb128 0x19
 1901 0107 49       		.uleb128 0x49
 1902 0108 13       		.uleb128 0x13
 1903 0109 11       		.uleb128 0x11
 1904 010a 01       		.uleb128 0x1
 1905 010b 12       		.uleb128 0x12
 1906 010c 06       		.uleb128 0x6
 1907 010d 40       		.uleb128 0x40
 1908 010e 18       		.uleb128 0x18
 1909 010f 9742     		.uleb128 0x2117
 1910 0111 19       		.uleb128 0x19
 1911 0112 01       		.uleb128 0x1
 1912 0113 13       		.uleb128 0x13
 1913 0114 00       		.byte	0
 1914 0115 00       		.byte	0
 1915 0116 11       		.uleb128 0x11
 1916 0117 0B       		.uleb128 0xb
 1917 0118 01       		.byte	0x1
 1918 0119 11       		.uleb128 0x11
 1919 011a 01       		.uleb128 0x1
 1920 011b 12       		.uleb128 0x12
 1921 011c 06       		.uleb128 0x6
 1922 011d 00       		.byte	0
 1923 011e 00       		.byte	0
 1924 011f 12       		.uleb128 0x12
 1925 0120 34       		.uleb128 0x34
 1926 0121 00       		.byte	0
 1927 0122 03       		.uleb128 0x3
 1928 0123 0E       		.uleb128 0xe
 1929 0124 3A       		.uleb128 0x3a
 1930 0125 0B       		.uleb128 0xb
 1931 0126 3B       		.uleb128 0x3b
 1932 0127 0B       		.uleb128 0xb
 1933 0128 49       		.uleb128 0x49
 1934 0129 13       		.uleb128 0x13
 1935 012a 3F       		.uleb128 0x3f
 1936 012b 19       		.uleb128 0x19
 1937 012c 02       		.uleb128 0x2
 1938 012d 18       		.uleb128 0x18
 1939 012e 00       		.byte	0
 1940 012f 00       		.byte	0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 63


 1941 0130 13       		.uleb128 0x13
 1942 0131 01       		.uleb128 0x1
 1943 0132 01       		.byte	0x1
 1944 0133 49       		.uleb128 0x49
 1945 0134 13       		.uleb128 0x13
 1946 0135 01       		.uleb128 0x1
 1947 0136 13       		.uleb128 0x13
 1948 0137 00       		.byte	0
 1949 0138 00       		.byte	0
 1950 0139 14       		.uleb128 0x14
 1951 013a 21       		.uleb128 0x21
 1952 013b 00       		.byte	0
 1953 013c 49       		.uleb128 0x49
 1954 013d 13       		.uleb128 0x13
 1955 013e 2F       		.uleb128 0x2f
 1956 013f 0B       		.uleb128 0xb
 1957 0140 00       		.byte	0
 1958 0141 00       		.byte	0
 1959 0142 00       		.byte	0
 1960              		.section	.debug_aranges,"",%progbits
 1961 0000 9C000000 		.4byte	0x9c
 1962 0004 0200     		.2byte	0x2
 1963 0006 00000000 		.4byte	.Ldebug_info0
 1964 000a 04       		.byte	0x4
 1965 000b 00       		.byte	0
 1966 000c 0000     		.2byte	0
 1967 000e 0000     		.2byte	0
 1968 0010 00000000 		.4byte	.LFB0
 1969 0014 20000000 		.4byte	.LFE0-.LFB0
 1970 0018 00000000 		.4byte	.LFB1
 1971 001c 38000000 		.4byte	.LFE1-.LFB1
 1972 0020 00000000 		.4byte	.LFB2
 1973 0024 48000000 		.4byte	.LFE2-.LFB2
 1974 0028 00000000 		.4byte	.LFB3
 1975 002c 40000000 		.4byte	.LFE3-.LFB3
 1976 0030 00000000 		.4byte	.LFB4
 1977 0034 10000000 		.4byte	.LFE4-.LFB4
 1978 0038 00000000 		.4byte	.LFB5
 1979 003c 14000000 		.4byte	.LFE5-.LFB5
 1980 0040 00000000 		.4byte	.LFB6
 1981 0044 20000000 		.4byte	.LFE6-.LFB6
 1982 0048 00000000 		.4byte	.LFB7
 1983 004c 94000000 		.4byte	.LFE7-.LFB7
 1984 0050 00000000 		.4byte	.LFB8
 1985 0054 18000000 		.4byte	.LFE8-.LFB8
 1986 0058 00000000 		.4byte	.LFB9
 1987 005c B8000000 		.4byte	.LFE9-.LFB9
 1988 0060 00000000 		.4byte	.LFB10
 1989 0064 40000000 		.4byte	.LFE10-.LFB10
 1990 0068 00000000 		.4byte	.LFB11
 1991 006c 40000000 		.4byte	.LFE11-.LFB11
 1992 0070 00000000 		.4byte	.LFB12
 1993 0074 30000000 		.4byte	.LFE12-.LFB12
 1994 0078 00000000 		.4byte	.LFB13
 1995 007c 74000000 		.4byte	.LFE13-.LFB13
 1996 0080 00000000 		.4byte	.LFB14
 1997 0084 68000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 64


 1998 0088 00000000 		.4byte	.LFB15
 1999 008c 9C000000 		.4byte	.LFE15-.LFB15
 2000 0090 00000000 		.4byte	.LFB16
 2001 0094 14000000 		.4byte	.LFE16-.LFB16
 2002 0098 00000000 		.4byte	0
 2003 009c 00000000 		.4byte	0
 2004              		.section	.debug_ranges,"",%progbits
 2005              	.Ldebug_ranges0:
 2006 0000 00000000 		.4byte	.LFB0
 2007 0004 20000000 		.4byte	.LFE0
 2008 0008 00000000 		.4byte	.LFB1
 2009 000c 38000000 		.4byte	.LFE1
 2010 0010 00000000 		.4byte	.LFB2
 2011 0014 48000000 		.4byte	.LFE2
 2012 0018 00000000 		.4byte	.LFB3
 2013 001c 40000000 		.4byte	.LFE3
 2014 0020 00000000 		.4byte	.LFB4
 2015 0024 10000000 		.4byte	.LFE4
 2016 0028 00000000 		.4byte	.LFB5
 2017 002c 14000000 		.4byte	.LFE5
 2018 0030 00000000 		.4byte	.LFB6
 2019 0034 20000000 		.4byte	.LFE6
 2020 0038 00000000 		.4byte	.LFB7
 2021 003c 94000000 		.4byte	.LFE7
 2022 0040 00000000 		.4byte	.LFB8
 2023 0044 18000000 		.4byte	.LFE8
 2024 0048 00000000 		.4byte	.LFB9
 2025 004c B8000000 		.4byte	.LFE9
 2026 0050 00000000 		.4byte	.LFB10
 2027 0054 40000000 		.4byte	.LFE10
 2028 0058 00000000 		.4byte	.LFB11
 2029 005c 40000000 		.4byte	.LFE11
 2030 0060 00000000 		.4byte	.LFB12
 2031 0064 30000000 		.4byte	.LFE12
 2032 0068 00000000 		.4byte	.LFB13
 2033 006c 74000000 		.4byte	.LFE13
 2034 0070 00000000 		.4byte	.LFB14
 2035 0074 68000000 		.4byte	.LFE14
 2036 0078 00000000 		.4byte	.LFB15
 2037 007c 9C000000 		.4byte	.LFE15
 2038 0080 00000000 		.4byte	.LFB16
 2039 0084 14000000 		.4byte	.LFE16
 2040 0088 00000000 		.4byte	0
 2041 008c 00000000 		.4byte	0
 2042              		.section	.debug_line,"",%progbits
 2043              	.Ldebug_line0:
 2044 0000 2E020000 		.section	.debug_str,"MS",%progbits,1
 2044      02004500 
 2044      00000201 
 2044      FB0E0D00 
 2044      01010101 
 2045              	.LASF6:
 2046 0000 6C6F6E67 		.ascii	"long long int\000"
 2046      206C6F6E 
 2046      6720696E 
 2046      7400
 2047              	.LASF17:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 65


 2048 000e 72656733 		.ascii	"reg32\000"
 2048      3200
 2049              	.LASF30:
 2050 0014 55415254 		.ascii	"UART_3_ReadControlRegister\000"
 2050      5F335F52 
 2050      65616443 
 2050      6F6E7472 
 2050      6F6C5265 
 2051              	.LASF46:
 2052 002f 74785065 		.ascii	"txPeriod\000"
 2052      72696F64 
 2052      00
 2053              	.LASF14:
 2054 0038 63686172 		.ascii	"char8\000"
 2054      3800
 2055              	.LASF45:
 2056 003e 746D7053 		.ascii	"tmpStat\000"
 2056      74617400 
 2057              	.LASF28:
 2058 0046 55415254 		.ascii	"UART_3_WriteTxData\000"
 2058      5F335F57 
 2058      72697465 
 2058      54784461 
 2058      746100
 2059              	.LASF3:
 2060 0059 73686F72 		.ascii	"short unsigned int\000"
 2060      7420756E 
 2060      7369676E 
 2060      65642069 
 2060      6E7400
 2061              	.LASF55:
 2062 006c 433A5C55 		.ascii	"C:\\Users\\kingi\\Desktop\\972057.cydsn\000"
 2062      73657273 
 2062      5C6B696E 
 2062      67695C44 
 2062      65736B74 
 2063              	.LASF19:
 2064 0090 55415254 		.ascii	"UART_3_Start\000"
 2064      5F335F53 
 2064      74617274 
 2064      00
 2065              	.LASF36:
 2066 009d 73747269 		.ascii	"string\000"
 2066      6E6700
 2067              	.LASF50:
 2068 00a4 55415254 		.ascii	"UART_3_txBuffer\000"
 2068      5F335F74 
 2068      78427566 
 2068      66657200 
 2069              	.LASF12:
 2070 00b4 666C6F61 		.ascii	"float\000"
 2070      7400
 2071              	.LASF33:
 2072 00ba 6C6F6354 		.ascii	"locTxBufferWrite\000"
 2072      78427566 
 2072      66657257 
 2072      72697465 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 66


 2072      00
 2073              	.LASF48:
 2074 00cb 61646472 		.ascii	"addressMode\000"
 2074      6573734D 
 2074      6F646500 
 2075              	.LASF32:
 2076 00d7 55415254 		.ascii	"UART_3_PutChar\000"
 2076      5F335F50 
 2076      75744368 
 2076      617200
 2077              	.LASF5:
 2078 00e6 6C6F6E67 		.ascii	"long unsigned int\000"
 2078      20756E73 
 2078      69676E65 
 2078      6420696E 
 2078      7400
 2079              	.LASF24:
 2080 00f8 55415254 		.ascii	"UART_3_WriteControlRegister\000"
 2080      5F335F57 
 2080      72697465 
 2080      436F6E74 
 2080      726F6C52 
 2081              	.LASF9:
 2082 0114 75696E74 		.ascii	"uint8\000"
 2082      3800
 2083              	.LASF26:
 2084 011a 636F6E74 		.ascii	"control\000"
 2084      726F6C00 
 2085              	.LASF35:
 2086 0122 55415254 		.ascii	"UART_3_PutString\000"
 2086      5F335F50 
 2086      75745374 
 2086      72696E67 
 2086      00
 2087              	.LASF39:
 2088 0133 62797465 		.ascii	"byteCount\000"
 2088      436F756E 
 2088      7400
 2089              	.LASF23:
 2090 013d 656E6162 		.ascii	"enableInterrupts\000"
 2090      6C65496E 
 2090      74657272 
 2090      75707473 
 2090      00
 2091              	.LASF1:
 2092 014e 756E7369 		.ascii	"unsigned char\000"
 2092      676E6564 
 2092      20636861 
 2092      7200
 2093              	.LASF53:
 2094 015c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2094      4320342E 
 2094      392E3320 
 2094      32303135 
 2094      30333033 
 2095 018f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2095      20726576 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 67


 2095      6973696F 
 2095      6E203232 
 2095      31323230 
 2096 01c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2096      66756E63 
 2096      74696F6E 
 2096      2D736563 
 2096      74696F6E 
 2097              	.LASF13:
 2098 01ea 646F7562 		.ascii	"double\000"
 2098      6C6500
 2099              	.LASF27:
 2100 01f1 696E7453 		.ascii	"intSrc\000"
 2100      726300
 2101              	.LASF2:
 2102 01f8 73686F72 		.ascii	"short int\000"
 2102      7420696E 
 2102      7400
 2103              	.LASF54:
 2104 0202 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_3.c\000"
 2104      6E657261 
 2104      7465645F 
 2104      536F7572 
 2104      63655C50 
 2105              	.LASF10:
 2106 0224 75696E74 		.ascii	"uint16\000"
 2106      313600
 2107              	.LASF40:
 2108 022b 55415254 		.ascii	"UART_3_PutCRLF\000"
 2108      5F335F50 
 2108      75744352 
 2108      4C4600
 2109              	.LASF11:
 2110 023a 75696E74 		.ascii	"uint32\000"
 2110      333200
 2111              	.LASF21:
 2112 0241 55415254 		.ascii	"UART_3_Enable\000"
 2112      5F335F45 
 2112      6E61626C 
 2112      6500
 2113              	.LASF8:
 2114 024f 756E7369 		.ascii	"unsigned int\000"
 2114      676E6564 
 2114      20696E74 
 2114      00
 2115              	.LASF20:
 2116 025c 55415254 		.ascii	"UART_3_Init\000"
 2116      5F335F49 
 2116      6E697400 
 2117              	.LASF7:
 2118 0268 6C6F6E67 		.ascii	"long long unsigned int\000"
 2118      206C6F6E 
 2118      6720756E 
 2118      7369676E 
 2118      65642069 
 2119              	.LASF37:
 2120 027f 62756649 		.ascii	"bufIndex\000"
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 68


 2120      6E646578 
 2120      00
 2121              	.LASF16:
 2122 0288 72656738 		.ascii	"reg8\000"
 2122      00
 2123              	.LASF25:
 2124 028d 55415254 		.ascii	"UART_3_SetTxInterruptMode\000"
 2124      5F335F53 
 2124      65745478 
 2124      496E7465 
 2124      72727570 
 2125              	.LASF38:
 2126 02a7 55415254 		.ascii	"UART_3_PutArray\000"
 2126      5F335F50 
 2126      75744172 
 2126      72617900 
 2127              	.LASF18:
 2128 02b7 73697A65 		.ascii	"sizetype\000"
 2128      74797065 
 2128      00
 2129              	.LASF29:
 2130 02c0 74784461 		.ascii	"txDataByte\000"
 2130      74614279 
 2130      746500
 2131              	.LASF15:
 2132 02cb 63686172 		.ascii	"char\000"
 2132      00
 2133              	.LASF31:
 2134 02d0 55415254 		.ascii	"UART_3_ReadTxStatus\000"
 2134      5F335F52 
 2134      65616454 
 2134      78537461 
 2134      74757300 
 2135              	.LASF51:
 2136 02e4 55415254 		.ascii	"UART_3_txBufferRead\000"
 2136      5F335F74 
 2136      78427566 
 2136      66657252 
 2136      65616400 
 2137              	.LASF44:
 2138 02f8 7265744D 		.ascii	"retMode\000"
 2138      6F646500 
 2139              	.LASF56:
 2140 0300 55415254 		.ascii	"UART_3_GetTxBufferSize\000"
 2140      5F335F47 
 2140      65745478 
 2140      42756666 
 2140      65725369 
 2141              	.LASF42:
 2142 0317 55415254 		.ascii	"UART_3_ClearTxBuffer\000"
 2142      5F335F43 
 2142      6C656172 
 2142      54784275 
 2142      66666572 
 2143              	.LASF49:
 2144 032c 55415254 		.ascii	"UART_3_initVar\000"
 2144      5F335F69 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\ccQc3vxb.s 			page 69


 2144      6E697456 
 2144      617200
 2145              	.LASF52:
 2146 033b 55415254 		.ascii	"UART_3_txBufferWrite\000"
 2146      5F335F74 
 2146      78427566 
 2146      66657257 
 2146      72697465 
 2147              	.LASF34:
 2148 0350 6C6F6354 		.ascii	"locTxBufferRead\000"
 2148      78427566 
 2148      66657252 
 2148      65616400 
 2149              	.LASF4:
 2150 0360 6C6F6E67 		.ascii	"long int\000"
 2150      20696E74 
 2150      00
 2151              	.LASF47:
 2152 0369 55415254 		.ascii	"UART_3_SetTxAddressMode\000"
 2152      5F335F53 
 2152      65745478 
 2152      41646472 
 2152      6573734D 
 2153              	.LASF0:
 2154 0381 7369676E 		.ascii	"signed char\000"
 2154      65642063 
 2154      68617200 
 2155              	.LASF22:
 2156 038d 55415254 		.ascii	"UART_3_Stop\000"
 2156      5F335F53 
 2156      746F7000 
 2157              	.LASF41:
 2158 0399 73697A65 		.ascii	"size\000"
 2158      00
 2159              	.LASF43:
 2160 039e 55415254 		.ascii	"UART_3_SendBreak\000"
 2160      5F335F53 
 2160      656E6442 
 2160      7265616B 
 2160      00
 2161              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
