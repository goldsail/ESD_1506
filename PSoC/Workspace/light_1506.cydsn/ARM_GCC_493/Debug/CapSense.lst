ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              	CapSense_initVar:
  20 0000 00       		.space	1
  21              		.comm	CapSense_csv,1,1
  22              		.comm	CapSense_sensorIndex,1,1
  23              		.comm	CapSense_sensorRaw,14,4
  24              		.global	CapSense_sensorEnableMask
  25              		.data
  26              		.align	2
  27              		.type	CapSense_sensorEnableMask, %object
  28              		.size	CapSense_sensorEnableMask, 1
  29              	CapSense_sensorEnableMask:
  30 0000 7F       		.byte	127
  31              		.global	CapSense_pcTable
  32              		.section	.rodata
  33              		.align	2
  34              		.type	CapSense_pcTable, %object
  35              		.size	CapSense_pcTable, 28
  36              	CapSense_pcTable:
  37 0000 2D500040 		.word	1073762349
  38 0004 2E500040 		.word	1073762350
  39 0008 28500040 		.word	1073762344
  40 000c 29500040 		.word	1073762345
  41 0010 2A500040 		.word	1073762346
  42 0014 2B500040 		.word	1073762347
  43 0018 2C500040 		.word	1073762348
  44              		.global	CapSense_portTable
  45              		.align	2
  46              		.type	CapSense_portTable, %object
  47              		.size	CapSense_portTable, 7
  48              	CapSense_portTable:
  49 001c 05       		.byte	5
  50 001d 05       		.byte	5
  51 001e 05       		.byte	5
  52 001f 05       		.byte	5
  53 0020 05       		.byte	5
  54 0021 05       		.byte	5
  55 0022 05       		.byte	5
  56              		.global	CapSense_maskTable
  57 0023 00       		.align	2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 2


  58              		.type	CapSense_maskTable, %object
  59              		.size	CapSense_maskTable, 7
  60              	CapSense_maskTable:
  61 0024 20       		.byte	32
  62 0025 40       		.byte	64
  63 0026 01       		.byte	1
  64 0027 02       		.byte	2
  65 0028 04       		.byte	4
  66 0029 08       		.byte	8
  67 002a 10       		.byte	16
  68              		.global	CapSense_csTable
  69 002b 00       		.align	2
  70              		.type	CapSense_csTable, %object
  71              		.size	CapSense_csTable, 32
  72              	CapSense_csTable:
  73 002c 06520040 		.word	1073762822
  74 0030 0E520040 		.word	1073762830
  75 0034 16520040 		.word	1073762838
  76 0038 1E520040 		.word	1073762846
  77 003c 26520040 		.word	1073762854
  78 0040 2E520040 		.word	1073762862
  79 0044 36520040 		.word	1073762870
  80 0048 7E520040 		.word	1073762942
  81              		.global	CapSense_idacSettings
  82              		.data
  83 0001 000000   		.align	2
  84              		.type	CapSense_idacSettings, %object
  85              		.size	CapSense_idacSettings, 7
  86              	CapSense_idacSettings:
  87 0004 37       		.byte	55
  88 0005 37       		.byte	55
  89 0006 28       		.byte	40
  90 0007 28       		.byte	40
  91 0008 28       		.byte	40
  92 0009 28       		.byte	40
  93 000a 28       		.byte	40
  94              		.global	CapSense_widgetResolution
  95              		.bss
  96 0001 000000   		.align	2
  97              		.type	CapSense_widgetResolution, %object
  98              		.size	CapSense_widgetResolution, 3
  99              	CapSense_widgetResolution:
 100 0004 000000   		.space	3
 101              		.global	CapSense_analogSwitchDivider
 102 0007 00       		.data
 103              		.type	CapSense_analogSwitchDivider, %object
 104              		.size	CapSense_analogSwitchDivider, 1
 105              	CapSense_analogSwitchDivider:
 106 000b 02       		.byte	2
 107              		.global	CapSense_widgetNumber
 108              		.section	.rodata
 109              		.align	2
 110              		.type	CapSense_widgetNumber, %object
 111              		.size	CapSense_widgetNumber, 7
 112              	CapSense_widgetNumber:
 113 004c 01       		.byte	1
 114 004d 02       		.byte	2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 3


 115 004e 00       		.byte	0
 116 004f 00       		.byte	0
 117 0050 00       		.byte	0
 118 0051 00       		.byte	0
 119 0052 00       		.byte	0
 120 0053 00       		.section	.text.CapSense_Init,"ax",%progbits
 121              		.align	2
 122              		.global	CapSense_Init
 123              		.thumb
 124              		.thumb_func
 125              		.type	CapSense_Init, %function
 126              	CapSense_Init:
 127              	.LFB0:
 128              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense.c"
   1:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:.\Generated_Source\PSoC5/CapSense.c **** * Version 3.40
   4:.\Generated_Source\PSoC5/CapSense.c **** *
   5:.\Generated_Source\PSoC5/CapSense.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:.\Generated_Source\PSoC5/CapSense.c **** *  component.
   8:.\Generated_Source\PSoC5/CapSense.c **** *
   9:.\Generated_Source\PSoC5/CapSense.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense.c **** *
  11:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense.c **** 
  18:.\Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:.\Generated_Source\PSoC5/CapSense.c **** 
  20:.\Generated_Source\PSoC5/CapSense.c **** 
  21:.\Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  22:.\Generated_Source\PSoC5/CapSense.c ****             
  23:.\Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  24:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  25:.\Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  26:.\Generated_Source\PSoC5/CapSense.c **** 
  27:.\Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  28:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  29:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
  30:.\Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  31:.\Generated_Source\PSoC5/CapSense.c **** 
  32:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  33:.\Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  34:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  35:.\Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  36:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  37:.\Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  38:.\Generated_Source\PSoC5/CapSense.c ****         
  39:.\Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  40:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  41:.\Generated_Source\PSoC5/CapSense.c **** 
  42:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  43:.\Generated_Source\PSoC5/CapSense.c **** 0x7Fu, };
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 4


  44:.\Generated_Source\PSoC5/CapSense.c **** 
  45:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  46:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  47:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  48:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e0__LS__PC, 
  49:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e1__LS__PC, 
  50:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e2__LS__PC, 
  51:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e3__LS__PC, 
  52:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__LinearSlider0_e4__LS__PC, 
  53:.\Generated_Source\PSoC5/CapSense.c **** };
  54:.\Generated_Source\PSoC5/CapSense.c **** 
  55:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  56:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
  57:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
  58:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__PORT, 
  59:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__PORT, 
  60:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__PORT, 
  61:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__PORT, 
  62:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__PORT, 
  63:.\Generated_Source\PSoC5/CapSense.c **** };
  64:.\Generated_Source\PSoC5/CapSense.c **** 
  65:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  66:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
  67:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
  68:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e0__LS__MASK,
  69:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e1__LS__MASK,
  70:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e2__LS__MASK,
  71:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e3__LS__MASK,
  72:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__LinearSlider0_e4__LS__MASK,
  73:.\Generated_Source\PSoC5/CapSense.c **** };
  74:.\Generated_Source\PSoC5/CapSense.c **** 
  75:.\Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  76:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  77:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  78:.\Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  79:.\Generated_Source\PSoC5/CapSense.c **** };
  80:.\Generated_Source\PSoC5/CapSense.c **** 
  81:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  82:.\Generated_Source\PSoC5/CapSense.c ****     55u,55u,40u,40u,40u,40u,40u,
  83:.\Generated_Source\PSoC5/CapSense.c **** };
  84:.\Generated_Source\PSoC5/CapSense.c **** 
  85:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  86:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  87:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  88:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  89:.\Generated_Source\PSoC5/CapSense.c **** };
  90:.\Generated_Source\PSoC5/CapSense.c **** 
  91:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider = 2u;
  92:.\Generated_Source\PSoC5/CapSense.c **** 
  93:.\Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
  94:.\Generated_Source\PSoC5/CapSense.c ****     1u, /* Button0__BTN */
  95:.\Generated_Source\PSoC5/CapSense.c ****     2u, /* Button1__BTN */
  96:.\Generated_Source\PSoC5/CapSense.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
  97:.\Generated_Source\PSoC5/CapSense.c ****     
  98:.\Generated_Source\PSoC5/CapSense.c **** };
  99:.\Generated_Source\PSoC5/CapSense.c **** 
 100:.\Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 5


 101:.\Generated_Source\PSoC5/CapSense.c **** 
 102:.\Generated_Source\PSoC5/CapSense.c **** 
 103:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 104:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 105:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 106:.\Generated_Source\PSoC5/CapSense.c **** *
 107:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 108:.\Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 109:.\Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 110:.\Generated_Source\PSoC5/CapSense.c **** *
 111:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 112:.\Generated_Source\PSoC5/CapSense.c **** *  None
 113:.\Generated_Source\PSoC5/CapSense.c **** *
 114:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 115:.\Generated_Source\PSoC5/CapSense.c **** *  None
 116:.\Generated_Source\PSoC5/CapSense.c **** *
 117:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 118:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 119:.\Generated_Source\PSoC5/CapSense.c **** {
 129              		.loc 1 119 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133 0000 80B5     		push	{r7, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 82B0     		sub	sp, sp, #8
 138              		.cfi_def_cfa_offset 16
 139 0004 00AF     		add	r7, sp, #0
 140              		.cfi_def_cfa_register 7
 120:.\Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 121:.\Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 122:.\Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 123:.\Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 124:.\Generated_Source\PSoC5/CapSense.c ****         
 125:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 126:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 127:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 128:.\Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 129:.\Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 130:.\Generated_Source\PSoC5/CapSense.c ****            */
 131:.\Generated_Source\PSoC5/CapSense.c ****     
 132:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 133:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 141              		.loc 1 133 0
 142 0006 FFF7FEFF 		bl	CapSense_ClearSensors
 134:.\Generated_Source\PSoC5/CapSense.c **** 
 135:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 136:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 137:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 138:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 139:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 140:.\Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 141:.\Generated_Source\PSoC5/CapSense.c ****                                                
 142:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 143:.\Generated_Source\PSoC5/CapSense.c ****     #else
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 6


 144:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 145:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 146:.\Generated_Source\PSoC5/CapSense.c **** 
 147:.\Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 148:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 149:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 143              		.loc 1 149 0
 144 000a 0220     		movs	r0, #2
 145 000c FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 150:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 151:.\Generated_Source\PSoC5/CapSense.c **** 
 152:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 153:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 154:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 146              		.loc 1 154 0
 147 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 148 0014 0346     		mov	r3, r0
 149 0016 FB71     		strb	r3, [r7, #7]
 155:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 150              		.loc 1 155 0
 151 0018 364A     		ldr	r2, .L2
 152 001a 364B     		ldr	r3, .L2
 153 001c 1B78     		ldrb	r3, [r3]
 154 001e DBB2     		uxtb	r3, r3
 155 0020 43F00303 		orr	r3, r3, #3
 156 0024 DBB2     		uxtb	r3, r3
 157 0026 1370     		strb	r3, [r2]
 156:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 158              		.loc 1 156 0
 159 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 160 002a 1846     		mov	r0, r3
 161 002c FFF7FEFF 		bl	CyExitCriticalSection
 157:.\Generated_Source\PSoC5/CapSense.c ****         
 158:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 159:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 162              		.loc 1 159 0
 163 0030 314B     		ldr	r3, .L2+4
 164 0032 B822     		movs	r2, #184
 165 0034 1A70     		strb	r2, [r3]
 160:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 161:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 166              		.loc 1 161 0
 167 0036 314B     		ldr	r3, .L2+8
 168 0038 FF22     		movs	r2, #255
 169 003a 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC5/CapSense.c ****         
 163:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 164:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 165:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 166:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 167:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 168:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 169:.\Generated_Source\PSoC5/CapSense.c ****         
 170:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 171:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 172:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 173:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 7


 174:.\Generated_Source\PSoC5/CapSense.c ****                 
 175:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 176:.\Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 177:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 178:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 179:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 180:.\Generated_Source\PSoC5/CapSense.c ****         
 181:.\Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 182:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 183:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 184:.\Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 185:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 186:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 187:.\Generated_Source\PSoC5/CapSense.c ****         
 188:.\Generated_Source\PSoC5/CapSense.c ****     #else
 189:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 190:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 191:.\Generated_Source\PSoC5/CapSense.c ****     
 192:.\Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 193:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 170              		.loc 1 193 0
 171 003c 304B     		ldr	r3, .L2+12
 172 003e 0122     		movs	r2, #1
 173 0040 1A70     		strb	r2, [r3]
 194:.\Generated_Source\PSoC5/CapSense.c ****     
 195:.\Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 196:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 197:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 198:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 199:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 200:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 201:.\Generated_Source\PSoC5/CapSense.c ****         
 202:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 203:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 204:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 205:.\Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 206:.\Generated_Source\PSoC5/CapSense.c ****     
 207:.\Generated_Source\PSoC5/CapSense.c ****     #else
 208:.\Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 209:.\Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 174              		.loc 1 209 0
 175 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 176 0046 0346     		mov	r3, r0
 177 0048 FB71     		strb	r3, [r7, #7]
 210:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 178              		.loc 1 210 0
 179 004a 2E4A     		ldr	r2, .L2+16
 180 004c 2D4B     		ldr	r3, .L2+16
 181 004e 1B78     		ldrb	r3, [r3]
 182 0050 DBB2     		uxtb	r3, r3
 183 0052 43F00303 		orr	r3, r3, #3
 184 0056 DBB2     		uxtb	r3, r3
 185 0058 1370     		strb	r3, [r2]
 211:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 186              		.loc 1 211 0
 187 005a 2B4A     		ldr	r2, .L2+20
 188 005c 2A4B     		ldr	r3, .L2+20
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 8


 189 005e 1B78     		ldrb	r3, [r3]
 190 0060 DBB2     		uxtb	r3, r3
 191 0062 43F00303 		orr	r3, r3, #3
 192 0066 DBB2     		uxtb	r3, r3
 193 0068 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 194              		.loc 1 212 0
 195 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 196 006c 1846     		mov	r0, r3
 197 006e FFF7FEFF 		bl	CyExitCriticalSection
 213:.\Generated_Source\PSoC5/CapSense.c ****         
 214:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 215:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 198              		.loc 1 215 0
 199 0072 264B     		ldr	r3, .L2+24
 200 0074 FF22     		movs	r2, #255
 201 0076 1A70     		strb	r2, [r3]
 216:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 202              		.loc 1 216 0
 203 0078 254B     		ldr	r3, .L2+28
 204 007a FF22     		movs	r2, #255
 205 007c 1A70     		strb	r2, [r3]
 217:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 206              		.loc 1 217 0
 207 007e 254B     		ldr	r3, .L2+32
 208 0080 FF22     		movs	r2, #255
 209 0082 1A70     		strb	r2, [r3]
 218:.\Generated_Source\PSoC5/CapSense.c ****         
 219:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 220:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 210              		.loc 1 220 0
 211 0084 244B     		ldr	r3, .L2+36
 212 0086 FF22     		movs	r2, #255
 213 0088 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 214              		.loc 1 221 0
 215 008a 244B     		ldr	r3, .L2+40
 216 008c FF22     		movs	r2, #255
 217 008e 1A70     		strb	r2, [r3]
 222:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 218              		.loc 1 222 0
 219 0090 234B     		ldr	r3, .L2+44
 220 0092 FF22     		movs	r2, #255
 221 0094 1A70     		strb	r2, [r3]
 223:.\Generated_Source\PSoC5/CapSense.c ****         
 224:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 225:.\Generated_Source\PSoC5/CapSense.c ****     
 226:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 227:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 228:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 229:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 230:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 231:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 232:.\Generated_Source\PSoC5/CapSense.c ****             
 233:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 234:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 235:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 9


 236:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 237:.\Generated_Source\PSoC5/CapSense.c ****            
 238:.\Generated_Source\PSoC5/CapSense.c ****         #else
 239:.\Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 240:.\Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 241:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 242:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 243:.\Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 244:.\Generated_Source\PSoC5/CapSense.c ****             
 245:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 246:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 247:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 248:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 249:.\Generated_Source\PSoC5/CapSense.c ****             
 250:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 251:.\Generated_Source\PSoC5/CapSense.c ****             
 252:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 253:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 254:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 255:.\Generated_Source\PSoC5/CapSense.c ****             
 256:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 257:.\Generated_Source\PSoC5/CapSense.c ****     
 258:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 259:.\Generated_Source\PSoC5/CapSense.c ****     
 260:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 261:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 222              		.loc 1 261 0
 223 0096 234B     		ldr	r3, .L2+48
 224 0098 0122     		movs	r2, #1
 225 009a 1A60     		str	r2, [r3]
 262:.\Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 226              		.loc 1 262 0
 227 009c 0020     		movs	r0, #0
 228 009e 2249     		ldr	r1, .L2+52
 229 00a0 FFF7FEFF 		bl	CyIntSetVector
 263:.\Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 230              		.loc 1 263 0
 231 00a4 0020     		movs	r0, #0
 232 00a6 0721     		movs	r1, #7
 233 00a8 FFF7FEFF 		bl	CyIntSetPriority
 264:.\Generated_Source\PSoC5/CapSense.c ****     
 265:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 266:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 267:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 268:.\Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 269:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 270:.\Generated_Source\PSoC5/CapSense.c ****     
 271:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 272:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 234              		.loc 1 272 0
 235 00ac FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 273:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 236              		.loc 1 273 0
 237 00b0 0720     		movs	r0, #7
 238 00b2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 274:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 239              		.loc 1 274 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 10


 240 00b6 0820     		movs	r0, #8
 241 00b8 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 275:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 276:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 242              		.loc 1 276 0
 243 00bc 0920     		movs	r0, #9
 244 00be FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 277:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 278:.\Generated_Source\PSoC5/CapSense.c ****     
 279:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 280:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 281:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 282:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 283:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 284:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 285:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 286:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 287:.\Generated_Source\PSoC5/CapSense.c ****     
 288:.\Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 289:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 290:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 291:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 292:.\Generated_Source\PSoC5/CapSense.c ****     
 293:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 294:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 245              		.loc 1 294 0
 246 00c2 1A4A     		ldr	r2, .L2+56
 247 00c4 194B     		ldr	r3, .L2+56
 248 00c6 1B78     		ldrb	r3, [r3]
 249 00c8 DBB2     		uxtb	r3, r3
 250 00ca 43F00403 		orr	r3, r3, #4
 251 00ce DBB2     		uxtb	r3, r3
 252 00d0 1370     		strb	r3, [r2]
 295:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 296:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 297:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 298:.\Generated_Source\PSoC5/CapSense.c ****     
 299:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 300:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 253              		.loc 1 300 0
 254 00d2 FFF7FEFF 		bl	CapSense_CompCH0_Init
 301:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 302:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 255              		.loc 1 302 0
 256 00d6 FFF7FEFF 		bl	CapSense_IdacCH0_Init
 303:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 257              		.loc 1 303 0
 258 00da 0020     		movs	r0, #0
 259 00dc FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 304:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 260              		.loc 1 304 0
 261 00e0 0420     		movs	r0, #4
 262 00e2 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 305:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 263              		.loc 1 305 0
 264 00e6 0020     		movs	r0, #0
 265 00e8 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 11


 306:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 307:.\Generated_Source\PSoC5/CapSense.c ****     
 308:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 309:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 310:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 311:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 312:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 313:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 314:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 315:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 316:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 317:.\Generated_Source\PSoC5/CapSense.c ****     
 318:.\Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 319:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 320:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 321:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 322:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 323:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 324:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 325:.\Generated_Source\PSoC5/CapSense.c **** }
 266              		.loc 1 325 0
 267 00ec 0837     		adds	r7, r7, #8
 268              		.cfi_def_cfa_offset 8
 269 00ee BD46     		mov	sp, r7
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 00f0 80BD     		pop	{r7, pc}
 273              	.L3:
 274 00f2 00BF     		.align	2
 275              	.L2:
 276 00f4 9B650040 		.word	1073767835
 277 00f8 2B650040 		.word	1073767723
 278 00fc 4B650040 		.word	1073767755
 279 0100 88650040 		.word	1073767816
 280 0104 99640040 		.word	1073767577
 281 0108 98640040 		.word	1073767576
 282 010c 29640040 		.word	1073767465
 283 0110 49640040 		.word	1073767497
 284 0114 09640040 		.word	1073767433
 285 0118 28640040 		.word	1073767464
 286 011c 58640040 		.word	1073767512
 287 0120 48640040 		.word	1073767496
 288 0124 80E100E0 		.word	-536813184
 289 0128 00000000 		.word	CapSense_IsrCH0_ISR
 290 012c 7B650040 		.word	1073767803
 291              		.cfi_endproc
 292              	.LFE0:
 293              		.size	CapSense_Init, .-CapSense_Init
 294              		.section	.text.CapSense_Enable,"ax",%progbits
 295              		.align	2
 296              		.global	CapSense_Enable
 297              		.thumb
 298              		.thumb_func
 299              		.type	CapSense_Enable, %function
 300              	CapSense_Enable:
 301              	.LFB1:
 326:.\Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 12


 327:.\Generated_Source\PSoC5/CapSense.c **** 
 328:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 329:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 330:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 331:.\Generated_Source\PSoC5/CapSense.c **** *
 332:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 333:.\Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 334:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 335:.\Generated_Source\PSoC5/CapSense.c **** *
 336:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 337:.\Generated_Source\PSoC5/CapSense.c **** *  None
 338:.\Generated_Source\PSoC5/CapSense.c **** *
 339:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 340:.\Generated_Source\PSoC5/CapSense.c **** *  None
 341:.\Generated_Source\PSoC5/CapSense.c **** *
 342:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 344:.\Generated_Source\PSoC5/CapSense.c **** {
 302              		.loc 1 344 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 8
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 82B0     		sub	sp, sp, #8
 311              		.cfi_def_cfa_offset 16
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 345:.\Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC5/CapSense.c ****     
 347:.\Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
 314              		.loc 1 347 0
 315 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 316 000a 0346     		mov	r3, r0
 317 000c FB71     		strb	r3, [r7, #7]
 348:.\Generated_Source\PSoC5/CapSense.c ****     
 349:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 350:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 351:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 352:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 353:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 354:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 355:.\Generated_Source\PSoC5/CapSense.c ****         
 356:.\Generated_Source\PSoC5/CapSense.c ****     #else
 357:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 358:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 359:.\Generated_Source\PSoC5/CapSense.c ****     
 360:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 361:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
 318              		.loc 1 361 0
 319 000e 1C4A     		ldr	r2, .L5
 320 0010 1B4B     		ldr	r3, .L5
 321 0012 1B78     		ldrb	r3, [r3]
 322 0014 DBB2     		uxtb	r3, r3
 323 0016 43F02003 		orr	r3, r3, #32
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 13


 324 001a DBB2     		uxtb	r3, r3
 325 001c 1370     		strb	r3, [r2]
 362:.\Generated_Source\PSoC5/CapSense.c ****     
 363:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 364:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 365:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 366:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 367:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 368:.\Generated_Source\PSoC5/CapSense.c ****         
 369:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 370:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 371:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 372:.\Generated_Source\PSoC5/CapSense.c ****         
 373:.\Generated_Source\PSoC5/CapSense.c ****     #else
 374:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 375:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 376:.\Generated_Source\PSoC5/CapSense.c ****         
 377:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 378:.\Generated_Source\PSoC5/CapSense.c ****     
 379:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 380:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 381:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 382:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 383:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 384:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 385:.\Generated_Source\PSoC5/CapSense.c ****             
 386:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 387:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 388:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 389:.\Generated_Source\PSoC5/CapSense.c ****            
 390:.\Generated_Source\PSoC5/CapSense.c ****         #else
 391:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 392:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 393:.\Generated_Source\PSoC5/CapSense.c ****         
 394:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 395:.\Generated_Source\PSoC5/CapSense.c ****     
 396:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 397:.\Generated_Source\PSoC5/CapSense.c ****     
 398:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 399:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 400:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
 326              		.loc 1 400 0
 327 001e FFF7FEFF 		bl	CapSense_IntClock_Start
 401:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 402:.\Generated_Source\PSoC5/CapSense.c ****     
 403:.\Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 404:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
 328              		.loc 1 404 0
 329 0022 FFF7FEFF 		bl	CapSense_CompCH0_Enable
 405:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 406:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
 330              		.loc 1 406 0
 331 0026 FFF7FEFF 		bl	CapSense_IdacCH0_Enable
 407:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 408:.\Generated_Source\PSoC5/CapSense.c ****     
 409:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 410:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 14


 411:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 412:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 413:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 414:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 415:.\Generated_Source\PSoC5/CapSense.c ****     
 416:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 417:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 418:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 419:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 420:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 421:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 422:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 423:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 424:.\Generated_Source\PSoC5/CapSense.c ****     #else
 425:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 426:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
 332              		.loc 1 426 0
 333 002a 164A     		ldr	r2, .L5+4
 334 002c 154B     		ldr	r3, .L5+4
 335 002e 1B78     		ldrb	r3, [r3]
 336 0030 DBB2     		uxtb	r3, r3
 337 0032 43F01003 		orr	r3, r3, #16
 338 0036 DBB2     		uxtb	r3, r3
 339 0038 1370     		strb	r3, [r2]
 427:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
 340              		.loc 1 427 0
 341 003a 134A     		ldr	r2, .L5+8
 342 003c 124B     		ldr	r3, .L5+8
 343 003e 1B78     		ldrb	r3, [r3]
 344 0040 DBB2     		uxtb	r3, r3
 345 0042 43F01003 		orr	r3, r3, #16
 346 0046 DBB2     		uxtb	r3, r3
 347 0048 1370     		strb	r3, [r2]
 428:.\Generated_Source\PSoC5/CapSense.c ****         
 429:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 430:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 431:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 432:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 433:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 434:.\Generated_Source\PSoC5/CapSense.c ****     
 435:.\Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 436:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 437:.\Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 438:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 439:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 440:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 441:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 442:.\Generated_Source\PSoC5/CapSense.c ****         
 443:.\Generated_Source\PSoC5/CapSense.c ****     #else
 444:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 445:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 348              		.loc 1 445 0
 349 004a 104A     		ldr	r2, .L5+12
 350 004c 0F4B     		ldr	r3, .L5+12
 351 004e 1B78     		ldrb	r3, [r3]
 352 0050 DBB2     		uxtb	r3, r3
 353 0052 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 15


 354 0056 DBB2     		uxtb	r3, r3
 355 0058 1370     		strb	r3, [r2]
 446:.\Generated_Source\PSoC5/CapSense.c ****         
 447:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 448:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 449:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 450:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 451:.\Generated_Source\PSoC5/CapSense.c ****     
 452:.\Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
 356              		.loc 1 452 0
 357 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 005c 1846     		mov	r0, r3
 359 005e FFF7FEFF 		bl	CyExitCriticalSection
 453:.\Generated_Source\PSoC5/CapSense.c ****     
 454:.\Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 455:.\Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
 360              		.loc 1 455 0
 361 0062 0B4B     		ldr	r3, .L5+16
 362 0064 0122     		movs	r2, #1
 363 0066 1A60     		str	r2, [r3]
 456:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 457:.\Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 458:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 459:.\Generated_Source\PSoC5/CapSense.c ****     
 460:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 461:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
 364              		.loc 1 461 0
 365 0068 0A4A     		ldr	r2, .L5+20
 366 006a 0A4B     		ldr	r3, .L5+20
 367 006c 1B78     		ldrb	r3, [r3]
 368 006e DBB2     		uxtb	r3, r3
 369 0070 63F07F03 		orn	r3, r3, #127
 370 0074 DBB2     		uxtb	r3, r3
 371 0076 1370     		strb	r3, [r2]
 462:.\Generated_Source\PSoC5/CapSense.c **** }
 372              		.loc 1 462 0
 373 0078 0837     		adds	r7, r7, #8
 374              		.cfi_def_cfa_offset 8
 375 007a BD46     		mov	sp, r7
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 007c 80BD     		pop	{r7, pc}
 379              	.L6:
 380 007e 00BF     		.align	2
 381              	.L5:
 382 0080 98650040 		.word	1073767832
 383 0084 BB430040 		.word	1073759163
 384 0088 AB430040 		.word	1073759147
 385 008c 70580040 		.word	1073764464
 386 0090 00E100E0 		.word	-536813312
 387 0094 7B650040 		.word	1073767803
 388              		.cfi_endproc
 389              	.LFE1:
 390              		.size	CapSense_Enable, .-CapSense_Enable
 391              		.section	.text.CapSense_Start,"ax",%progbits
 392              		.align	2
 393              		.global	CapSense_Start
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 16


 394              		.thumb
 395              		.thumb_func
 396              		.type	CapSense_Start, %function
 397              	CapSense_Start:
 398              	.LFB2:
 463:.\Generated_Source\PSoC5/CapSense.c **** 
 464:.\Generated_Source\PSoC5/CapSense.c **** 
 465:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 466:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 467:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 468:.\Generated_Source\PSoC5/CapSense.c **** *
 469:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 470:.\Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 471:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 472:.\Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 473:.\Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 474:.\Generated_Source\PSoC5/CapSense.c **** *
 475:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 476:.\Generated_Source\PSoC5/CapSense.c **** *  None
 477:.\Generated_Source\PSoC5/CapSense.c **** *
 478:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 479:.\Generated_Source\PSoC5/CapSense.c **** *  None
 480:.\Generated_Source\PSoC5/CapSense.c **** *
 481:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 482:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 483:.\Generated_Source\PSoC5/CapSense.c **** *  first function call.
 484:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 485:.\Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 486:.\Generated_Source\PSoC5/CapSense.c **** *
 487:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 488:.\Generated_Source\PSoC5/CapSense.c **** *  No
 489:.\Generated_Source\PSoC5/CapSense.c **** *
 490:.\Generated_Source\PSoC5/CapSense.c **** * Note:
 491:.\Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 492:.\Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 493:.\Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 494:.\Generated_Source\PSoC5/CapSense.c **** *
 495:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 496:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 497:.\Generated_Source\PSoC5/CapSense.c **** {
 399              		.loc 1 497 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403 0000 80B5     		push	{r7, lr}
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 00AF     		add	r7, sp, #0
 408              		.cfi_def_cfa_register 7
 498:.\Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 409              		.loc 1 498 0
 410 0004 054B     		ldr	r3, .L9
 411 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 412 0008 002B     		cmp	r3, #0
 413 000a 04D1     		bne	.L8
 499:.\Generated_Source\PSoC5/CapSense.c ****     {
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 17


 500:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 414              		.loc 1 500 0
 415 000c FFF7FEFF 		bl	CapSense_Init
 501:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 416              		.loc 1 501 0
 417 0010 024B     		ldr	r3, .L9
 418 0012 0122     		movs	r2, #1
 419 0014 1A70     		strb	r2, [r3]
 420              	.L8:
 502:.\Generated_Source\PSoC5/CapSense.c ****     }
 503:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 421              		.loc 1 503 0
 422 0016 FFF7FEFF 		bl	CapSense_Enable
 504:.\Generated_Source\PSoC5/CapSense.c ****     
 505:.\Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 506:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 507:.\Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 508:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 509:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 510:.\Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 511:.\Generated_Source\PSoC5/CapSense.c **** }
 423              		.loc 1 511 0
 424 001a 80BD     		pop	{r7, pc}
 425              	.L10:
 426              		.align	2
 427              	.L9:
 428 001c 00000000 		.word	CapSense_initVar
 429              		.cfi_endproc
 430              	.LFE2:
 431              		.size	CapSense_Start, .-CapSense_Start
 432              		.section	.text.CapSense_Stop,"ax",%progbits
 433              		.align	2
 434              		.global	CapSense_Stop
 435              		.thumb
 436              		.thumb_func
 437              		.type	CapSense_Stop, %function
 438              	CapSense_Stop:
 439              	.LFB3:
 512:.\Generated_Source\PSoC5/CapSense.c **** 
 513:.\Generated_Source\PSoC5/CapSense.c **** 
 514:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 516:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 517:.\Generated_Source\PSoC5/CapSense.c **** *
 518:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 519:.\Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 520:.\Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 521:.\Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 522:.\Generated_Source\PSoC5/CapSense.c **** *
 523:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 524:.\Generated_Source\PSoC5/CapSense.c **** *  None
 525:.\Generated_Source\PSoC5/CapSense.c **** *
 526:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 527:.\Generated_Source\PSoC5/CapSense.c **** *  None
 528:.\Generated_Source\PSoC5/CapSense.c **** *
 529:.\Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 530:.\Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 18


 531:.\Generated_Source\PSoC5/CapSense.c **** *
 532:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 533:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 534:.\Generated_Source\PSoC5/CapSense.c **** {
 440              		.loc 1 534 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 535:.\Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 536:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 450              		.loc 1 536 0
 451 0004 1D4A     		ldr	r2, .L12
 452 0006 1D4B     		ldr	r3, .L12
 453 0008 1B78     		ldrb	r3, [r3]
 454 000a DBB2     		uxtb	r3, r3
 455 000c 23F00203 		bic	r3, r3, #2
 456 0010 DBB2     		uxtb	r3, r3
 457 0012 1370     		strb	r3, [r2]
 537:.\Generated_Source\PSoC5/CapSense.c ****     
 538:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 539:.\Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 458              		.loc 1 539 0
 459 0014 1A4B     		ldr	r3, .L12+4
 460 0016 0122     		movs	r2, #1
 461 0018 1A60     		str	r2, [r3]
 540:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 541:.\Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 542:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 543:.\Generated_Source\PSoC5/CapSense.c ****     
 544:.\Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 545:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 462              		.loc 1 545 0
 463 001a FFF7FEFF 		bl	CapSense_ClearSensors
 546:.\Generated_Source\PSoC5/CapSense.c ****     
 547:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 548:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 549:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 550:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 551:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 552:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 553:.\Generated_Source\PSoC5/CapSense.c ****         
 554:.\Generated_Source\PSoC5/CapSense.c ****     #else
 555:.\Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 556:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 557:.\Generated_Source\PSoC5/CapSense.c ****     
 558:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 559:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 464              		.loc 1 559 0
 465 001e 194A     		ldr	r2, .L12+8
 466 0020 184B     		ldr	r3, .L12+8
 467 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 19


 468 0024 DBB2     		uxtb	r3, r3
 469 0026 23F02003 		bic	r3, r3, #32
 470 002a DBB2     		uxtb	r3, r3
 471 002c 1370     		strb	r3, [r2]
 560:.\Generated_Source\PSoC5/CapSense.c ****     
 561:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 562:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 563:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 564:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 565:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 566:.\Generated_Source\PSoC5/CapSense.c **** 
 567:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 568:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 569:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 570:.\Generated_Source\PSoC5/CapSense.c **** 
 571:.\Generated_Source\PSoC5/CapSense.c ****     #else
 572:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 573:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 574:.\Generated_Source\PSoC5/CapSense.c ****         
 575:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 576:.\Generated_Source\PSoC5/CapSense.c ****     
 577:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 578:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 579:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 580:.\Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 581:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 582:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 583:.\Generated_Source\PSoC5/CapSense.c ****     
 584:.\Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 585:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 586:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 587:.\Generated_Source\PSoC5/CapSense.c ****            
 588:.\Generated_Source\PSoC5/CapSense.c ****         #else
 589:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 590:.\Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 591:.\Generated_Source\PSoC5/CapSense.c ****         
 592:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 593:.\Generated_Source\PSoC5/CapSense.c ****     
 594:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 595:.\Generated_Source\PSoC5/CapSense.c ****     
 596:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 597:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 598:.\Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 472              		.loc 1 598 0
 473 002e FFF7FEFF 		bl	CapSense_IntClock_Stop
 599:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 600:.\Generated_Source\PSoC5/CapSense.c ****     
 601:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 602:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 474              		.loc 1 602 0
 475 0032 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 603:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 604:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 476              		.loc 1 604 0
 477 0036 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 605:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 606:.\Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 20


 607:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 608:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 609:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 610:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 611:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 612:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 613:.\Generated_Source\PSoC5/CapSense.c ****     
 614:.\Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 615:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 616:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 617:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 618:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 619:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 620:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 621:.\Generated_Source\PSoC5/CapSense.c **** 
 622:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 623:.\Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 624:.\Generated_Source\PSoC5/CapSense.c ****     #else
 625:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 626:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 478              		.loc 1 626 0
 479 003a 134A     		ldr	r2, .L12+12
 480 003c 124B     		ldr	r3, .L12+12
 481 003e 1B78     		ldrb	r3, [r3]
 482 0040 DBB2     		uxtb	r3, r3
 483 0042 23F00103 		bic	r3, r3, #1
 484 0046 DBB2     		uxtb	r3, r3
 485 0048 1370     		strb	r3, [r2]
 627:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 486              		.loc 1 627 0
 487 004a 104A     		ldr	r2, .L12+16
 488 004c 0F4B     		ldr	r3, .L12+16
 489 004e 1B78     		ldrb	r3, [r3]
 490 0050 DBB2     		uxtb	r3, r3
 491 0052 23F01003 		bic	r3, r3, #16
 492 0056 DBB2     		uxtb	r3, r3
 493 0058 1370     		strb	r3, [r2]
 628:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 494              		.loc 1 628 0
 495 005a 0D4A     		ldr	r2, .L12+20
 496 005c 0C4B     		ldr	r3, .L12+20
 497 005e 1B78     		ldrb	r3, [r3]
 498 0060 DBB2     		uxtb	r3, r3
 499 0062 23F01003 		bic	r3, r3, #16
 500 0066 DBB2     		uxtb	r3, r3
 501 0068 1370     		strb	r3, [r2]
 629:.\Generated_Source\PSoC5/CapSense.c ****         
 630:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 631:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 632:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 633:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 634:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 635:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 636:.\Generated_Source\PSoC5/CapSense.c ****     
 637:.\Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 638:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 502              		.loc 1 638 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 21


 503 006a 044A     		ldr	r2, .L12
 504 006c 034B     		ldr	r3, .L12
 505 006e 1B78     		ldrb	r3, [r3]
 506 0070 DBB2     		uxtb	r3, r3
 507 0072 03F07F03 		and	r3, r3, #127
 508 0076 DBB2     		uxtb	r3, r3
 509 0078 1370     		strb	r3, [r2]
 639:.\Generated_Source\PSoC5/CapSense.c **** }
 510              		.loc 1 639 0
 511 007a 80BD     		pop	{r7, pc}
 512              	.L13:
 513              		.align	2
 514              	.L12:
 515 007c 7B650040 		.word	1073767803
 516 0080 80E100E0 		.word	-536813184
 517 0084 98650040 		.word	1073767832
 518 0088 70580040 		.word	1073764464
 519 008c AB430040 		.word	1073759147
 520 0090 BB430040 		.word	1073759163
 521              		.cfi_endproc
 522              	.LFE3:
 523              		.size	CapSense_Stop, .-CapSense_Stop
 524              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 525              		.align	2
 526              		.global	CapSense_FindNextSensor
 527              		.thumb
 528              		.thumb_func
 529              		.type	CapSense_FindNextSensor, %function
 530              	CapSense_FindNextSensor:
 531              	.LFB4:
 640:.\Generated_Source\PSoC5/CapSense.c **** 
 641:.\Generated_Source\PSoC5/CapSense.c **** 
 642:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 643:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 644:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 645:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 646:.\Generated_Source\PSoC5/CapSense.c ****     *
 647:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 648:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 649:.\Generated_Source\PSoC5/CapSense.c ****     *
 650:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 651:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 652:.\Generated_Source\PSoC5/CapSense.c ****     *
 653:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
 654:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 655:.\Generated_Source\PSoC5/CapSense.c ****     *
 656:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 657:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 658:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 659:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 660:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 661:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 662:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 663:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 664:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 665:.\Generated_Source\PSoC5/CapSense.c ****     *
 666:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 22


 667:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 668:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 669:.\Generated_Source\PSoC5/CapSense.c ****     *
 670:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 671:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 672:.\Generated_Source\PSoC5/CapSense.c ****     {
 532              		.loc 1 672 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537 0000 80B4     		push	{r7}
 538              		.cfi_def_cfa_offset 4
 539              		.cfi_offset 7, -4
 540 0002 85B0     		sub	sp, sp, #20
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 0346     		mov	r3, r0
 545 0008 FB71     		strb	r3, [r7, #7]
 546              	.L17:
 673:.\Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 674:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 675:.\Generated_Source\PSoC5/CapSense.c ****         
 676:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 677:.\Generated_Source\PSoC5/CapSense.c ****         do
 678:.\Generated_Source\PSoC5/CapSense.c ****         {
 679:.\Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 680:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 547              		.loc 1 680 0
 548 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 549 000c 0133     		adds	r3, r3, #1
 550 000e FB71     		strb	r3, [r7, #7]
 681:.\Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 551              		.loc 1 681 0
 552 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 553 0012 072B     		cmp	r3, #7
 554 0014 00D1     		bne	.L15
 682:.\Generated_Source\PSoC5/CapSense.c ****             {
 683:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 555              		.loc 1 683 0
 556 0016 11E0     		b	.L16
 557              	.L15:
 684:.\Generated_Source\PSoC5/CapSense.c ****             }
 685:.\Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 558              		.loc 1 685 0
 559 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 560 001a DB08     		lsrs	r3, r3, #3
 561 001c FB73     		strb	r3, [r7, #15]
 686:.\Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 562              		.loc 1 686 0
 563 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 564 0020 03F00703 		and	r3, r3, #7
 565 0024 0122     		movs	r2, #1
 566 0026 02FA03F3 		lsl	r3, r2, r3
 567 002a BB73     		strb	r3, [r7, #14]
 687:.\Generated_Source\PSoC5/CapSense.c ****         }    
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 23


 688:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 568              		.loc 1 688 0
 569 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 570 002e 074A     		ldr	r2, .L19
 571 0030 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 572 0032 BB7B     		ldrb	r3, [r7, #14]
 573 0034 1340     		ands	r3, r3, r2
 574 0036 DBB2     		uxtb	r3, r3
 575 0038 002B     		cmp	r3, #0
 576 003a E6D0     		beq	.L17
 577              	.L16:
 689:.\Generated_Source\PSoC5/CapSense.c ****         
 690:.\Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 578              		.loc 1 690 0
 579 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 691:.\Generated_Source\PSoC5/CapSense.c ****     }
 580              		.loc 1 691 0
 581 003e 1846     		mov	r0, r3
 582 0040 1437     		adds	r7, r7, #20
 583              		.cfi_def_cfa_offset 4
 584 0042 BD46     		mov	sp, r7
 585              		.cfi_def_cfa_register 13
 586              		@ sp needed
 587 0044 5DF8047B 		ldr	r7, [sp], #4
 588              		.cfi_restore 7
 589              		.cfi_def_cfa_offset 0
 590 0048 7047     		bx	lr
 591              	.L20:
 592 004a 00BF     		.align	2
 593              	.L19:
 594 004c 00000000 		.word	CapSense_sensorEnableMask
 595              		.cfi_endproc
 596              	.LFE4:
 597              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 598              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 599              		.align	2
 600              		.global	CapSense_SetScanSlotSettings
 601              		.thumb
 602              		.thumb_func
 603              		.type	CapSense_SetScanSlotSettings, %function
 604              	CapSense_SetScanSlotSettings:
 605              	.LFB5:
 692:.\Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 693:.\Generated_Source\PSoC5/CapSense.c ****  
 694:.\Generated_Source\PSoC5/CapSense.c ****  
 695:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 696:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 697:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 698:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 699:.\Generated_Source\PSoC5/CapSense.c ****     *
 700:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
 701:.\Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 702:.\Generated_Source\PSoC5/CapSense.c ****     *  
 703:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 704:.\Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 705:.\Generated_Source\PSoC5/CapSense.c ****     *
 706:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 24


 707:.\Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 708:.\Generated_Source\PSoC5/CapSense.c ****     *
 709:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 710:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 711:.\Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 712:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 713:.\Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 714:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 715:.\Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 716:.\Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 717:.\Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 718:.\Generated_Source\PSoC5/CapSense.c ****     *
 719:.\Generated_Source\PSoC5/CapSense.c ****     * Note: 
 720:.\Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 721:.\Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 722:.\Generated_Source\PSoC5/CapSense.c ****     *
 723:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 724:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 725:.\Generated_Source\PSoC5/CapSense.c ****     {
 726:.\Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 727:.\Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 728:.\Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 729:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 730:.\Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 731:.\Generated_Source\PSoC5/CapSense.c ****         
 732:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 733:.\Generated_Source\PSoC5/CapSense.c ****         do
 734:.\Generated_Source\PSoC5/CapSense.c ****         {
 735:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 736:.\Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 737:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 738:.\Generated_Source\PSoC5/CapSense.c ****             {
 739:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 740:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 741:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 742:.\Generated_Source\PSoC5/CapSense.c ****             }
 743:.\Generated_Source\PSoC5/CapSense.c ****             
 744:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 745:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 746:.\Generated_Source\PSoC5/CapSense.c ****         }
 747:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 748:.\Generated_Source\PSoC5/CapSense.c ****         
 749:.\Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 750:.\Generated_Source\PSoC5/CapSense.c ****         do
 751:.\Generated_Source\PSoC5/CapSense.c ****         {
 752:.\Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 753:.\Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 754:.\Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 755:.\Generated_Source\PSoC5/CapSense.c ****             {
 756:.\Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 757:.\Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 758:.\Generated_Source\PSoC5/CapSense.c ****                 break;
 759:.\Generated_Source\PSoC5/CapSense.c ****             }
 760:.\Generated_Source\PSoC5/CapSense.c ****             
 761:.\Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 762:.\Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 763:.\Generated_Source\PSoC5/CapSense.c ****         } 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 25


 764:.\Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 765:.\Generated_Source\PSoC5/CapSense.c ****         
 766:.\Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 767:.\Generated_Source\PSoC5/CapSense.c ****         
 768:.\Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 769:.\Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 770:.\Generated_Source\PSoC5/CapSense.c ****         {
 771:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 772:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 773:.\Generated_Source\PSoC5/CapSense.c ****             
 774:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 775:.\Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 776:.\Generated_Source\PSoC5/CapSense.c ****         }
 777:.\Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 778:.\Generated_Source\PSoC5/CapSense.c ****         {
 779:.\Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 780:.\Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 781:.\Generated_Source\PSoC5/CapSense.c ****            
 782:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 783:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 784:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 785:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 786:.\Generated_Source\PSoC5/CapSense.c ****         }
 787:.\Generated_Source\PSoC5/CapSense.c ****         else
 788:.\Generated_Source\PSoC5/CapSense.c ****         {
 789:.\Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 790:.\Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 791:.\Generated_Source\PSoC5/CapSense.c ****             
 792:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 793:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 794:.\Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 795:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 796:.\Generated_Source\PSoC5/CapSense.c ****         }
 797:.\Generated_Source\PSoC5/CapSense.c ****         
 798:.\Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 799:.\Generated_Source\PSoC5/CapSense.c ****     }
 800:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 801:.\Generated_Source\PSoC5/CapSense.c **** 
 802:.\Generated_Source\PSoC5/CapSense.c **** 
 803:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 804:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 805:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 806:.\Generated_Source\PSoC5/CapSense.c **** *
 807:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 808:.\Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 809:.\Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 810:.\Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 811:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
 812:.\Generated_Source\PSoC5/CapSense.c **** *
 813:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 814:.\Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 815:.\Generated_Source\PSoC5/CapSense.c **** *
 816:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 817:.\Generated_Source\PSoC5/CapSense.c **** *  None
 818:.\Generated_Source\PSoC5/CapSense.c **** *
 819:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 820:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 26


 821:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 822:.\Generated_Source\PSoC5/CapSense.c **** *  widget.
 823:.\Generated_Source\PSoC5/CapSense.c **** *
 824:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 825:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 826:.\Generated_Source\PSoC5/CapSense.c **** {
 606              		.loc 1 826 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 16
 609              		@ frame_needed = 1, uses_anonymous_args = 0
 610 0000 80B5     		push	{r7, lr}
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 7, -8
 613              		.cfi_offset 14, -4
 614 0002 84B0     		sub	sp, sp, #16
 615              		.cfi_def_cfa_offset 24
 616 0004 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 618 0006 0346     		mov	r3, r0
 619 0008 FB71     		strb	r3, [r7, #7]
 827:.\Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 828:.\Generated_Source\PSoC5/CapSense.c ****     
 829:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 830:.\Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 831:.\Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 620              		.loc 1 831 0
 621 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 622 000c 0A4A     		ldr	r2, .L22
 623 000e D35C     		ldrb	r3, [r2, r3]
 624 0010 FB73     		strb	r3, [r7, #15]
 832:.\Generated_Source\PSoC5/CapSense.c ****         
 833:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 834:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 835:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 625              		.loc 1 835 0
 626 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 627 0014 094A     		ldr	r2, .L22+4
 628 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 629 0018 1846     		mov	r0, r3
 630 001a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 836:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 837:.\Generated_Source\PSoC5/CapSense.c ****         
 838:.\Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 839:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 840:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 841:.\Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 842:.\Generated_Source\PSoC5/CapSense.c ****         #else
 843:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 631              		.loc 1 843 0
 632 001e 084A     		ldr	r2, .L22+8
 633 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 634 0022 0849     		ldr	r1, .L22+12
 635 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 636 0026 1370     		strb	r3, [r2]
 844:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 845:.\Generated_Source\PSoC5/CapSense.c **** 
 846:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 27


 847:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 848:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 849:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 850:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 637              		.loc 1 850 0
 638 0028 074B     		ldr	r3, .L22+16
 639 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 640 002c 1846     		mov	r0, r3
 641 002e FFF7FEFF 		bl	CapSense_SetPrescaler
 851:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 852:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 853:.\Generated_Source\PSoC5/CapSense.c ****                */
 854:.\Generated_Source\PSoC5/CapSense.c **** 
 855:.\Generated_Source\PSoC5/CapSense.c ****     #else
 856:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 857:.\Generated_Source\PSoC5/CapSense.c ****         {
 858:.\Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 859:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 860:.\Generated_Source\PSoC5/CapSense.c ****             
 861:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 862:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 863:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 864:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 865:.\Generated_Source\PSoC5/CapSense.c ****             
 866:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 867:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 868:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 869:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 870:.\Generated_Source\PSoC5/CapSense.c ****             #else
 871:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 872:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 873:.\Generated_Source\PSoC5/CapSense.c ****         }
 874:.\Generated_Source\PSoC5/CapSense.c ****         
 875:.\Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 876:.\Generated_Source\PSoC5/CapSense.c ****         {
 877:.\Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 878:.\Generated_Source\PSoC5/CapSense.c ****         
 879:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 880:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 881:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 882:.\Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 883:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 884:.\Generated_Source\PSoC5/CapSense.c ****             
 885:.\Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 886:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 887:.\Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 888:.\Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 889:.\Generated_Source\PSoC5/CapSense.c ****             #else
 890:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 891:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 892:.\Generated_Source\PSoC5/CapSense.c ****         }
 893:.\Generated_Source\PSoC5/CapSense.c **** 
 894:.\Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 895:.\Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 896:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 897:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 898:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 28


 899:.\Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 900:.\Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 901:.\Generated_Source\PSoC5/CapSense.c ****                */
 902:.\Generated_Source\PSoC5/CapSense.c **** 
 903:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 904:.\Generated_Source\PSoC5/CapSense.c **** }
 642              		.loc 1 904 0
 643 0032 1037     		adds	r7, r7, #16
 644              		.cfi_def_cfa_offset 8
 645 0034 BD46     		mov	sp, r7
 646              		.cfi_def_cfa_register 13
 647              		@ sp needed
 648 0036 80BD     		pop	{r7, pc}
 649              	.L23:
 650              		.align	2
 651              	.L22:
 652 0038 00000000 		.word	CapSense_widgetNumber
 653 003c 00000000 		.word	CapSense_idacSettings
 654 0040 59640040 		.word	1073767513
 655 0044 00000000 		.word	CapSense_widgetResolution
 656 0048 00000000 		.word	CapSense_analogSwitchDivider
 657              		.cfi_endproc
 658              	.LFE5:
 659              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 660              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 661              		.align	2
 662              		.global	CapSense_ScanSensor
 663              		.thumb
 664              		.thumb_func
 665              		.type	CapSense_ScanSensor, %function
 666              	CapSense_ScanSensor:
 667              	.LFB6:
 905:.\Generated_Source\PSoC5/CapSense.c **** 
 906:.\Generated_Source\PSoC5/CapSense.c **** 
 907:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 908:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 909:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 910:.\Generated_Source\PSoC5/CapSense.c **** *
 911:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 912:.\Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 913:.\Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 914:.\Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 915:.\Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 916:.\Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 917:.\Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 918:.\Generated_Source\PSoC5/CapSense.c **** *
 919:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 920:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 921:.\Generated_Source\PSoC5/CapSense.c **** *
 922:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 923:.\Generated_Source\PSoC5/CapSense.c **** *  None
 924:.\Generated_Source\PSoC5/CapSense.c **** *
 925:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 926:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 927:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 928:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 929:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 29


 930:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 931:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 932:.\Generated_Source\PSoC5/CapSense.c **** *
 933:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 934:.\Generated_Source\PSoC5/CapSense.c **** *  No
 935:.\Generated_Source\PSoC5/CapSense.c **** *
 936:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 937:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 938:.\Generated_Source\PSoC5/CapSense.c **** {
 668              		.loc 1 938 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 8
 671              		@ frame_needed = 1, uses_anonymous_args = 0
 672 0000 80B5     		push	{r7, lr}
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 82B0     		sub	sp, sp, #8
 677              		.cfi_def_cfa_offset 16
 678 0004 00AF     		add	r7, sp, #0
 679              		.cfi_def_cfa_register 7
 680 0006 0346     		mov	r3, r0
 681 0008 FB71     		strb	r3, [r7, #7]
 939:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 940:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 682              		.loc 1 940 0
 683 000a 084B     		ldr	r3, .L25
 684 000c 0022     		movs	r2, #0
 685 000e 1A70     		strb	r2, [r3]
 941:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 686              		.loc 1 941 0
 687 0010 074A     		ldr	r2, .L25+4
 688 0012 FB79     		ldrb	r3, [r7, #7]
 689 0014 1370     		strb	r3, [r2]
 942:.\Generated_Source\PSoC5/CapSense.c ****     
 943:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 944:.\Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 945:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 690              		.loc 1 945 0
 691 0016 054B     		ldr	r3, .L25
 692 0018 8122     		movs	r2, #129
 693 001a 1A70     		strb	r2, [r3]
 946:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 694              		.loc 1 946 0
 695 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 696 001e 1846     		mov	r0, r3
 697 0020 FFF7FEFF 		bl	CapSense_PreScan
 947:.\Generated_Source\PSoC5/CapSense.c ****         
 948:.\Generated_Source\PSoC5/CapSense.c ****     #else
 949:.\Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 950:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 951:.\Generated_Source\PSoC5/CapSense.c ****         {
 952:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 953:.\Generated_Source\PSoC5/CapSense.c ****         }
 954:.\Generated_Source\PSoC5/CapSense.c ****         else
 955:.\Generated_Source\PSoC5/CapSense.c ****         {
 956:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 30


 957:.\Generated_Source\PSoC5/CapSense.c ****         }
 958:.\Generated_Source\PSoC5/CapSense.c ****         
 959:.\Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 960:.\Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 961:.\Generated_Source\PSoC5/CapSense.c ****         {
 962:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 963:.\Generated_Source\PSoC5/CapSense.c ****         }
 964:.\Generated_Source\PSoC5/CapSense.c ****         else
 965:.\Generated_Source\PSoC5/CapSense.c ****         {
 966:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 967:.\Generated_Source\PSoC5/CapSense.c ****         }
 968:.\Generated_Source\PSoC5/CapSense.c ****         
 969:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 970:.\Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 971:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 972:.\Generated_Source\PSoC5/CapSense.c ****         {
 973:.\Generated_Source\PSoC5/CapSense.c ****         
 974:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 975:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 976:.\Generated_Source\PSoC5/CapSense.c ****         }
 977:.\Generated_Source\PSoC5/CapSense.c ****         
 978:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 979:.\Generated_Source\PSoC5/CapSense.c **** }
 698              		.loc 1 979 0
 699 0024 0837     		adds	r7, r7, #8
 700              		.cfi_def_cfa_offset 8
 701 0026 BD46     		mov	sp, r7
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 0028 80BD     		pop	{r7, pc}
 705              	.L26:
 706 002a 00BF     		.align	2
 707              	.L25:
 708 002c 00000000 		.word	CapSense_csv
 709 0030 00000000 		.word	CapSense_sensorIndex
 710              		.cfi_endproc
 711              	.LFE6:
 712              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 713              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 714              		.align	2
 715              		.global	CapSense_ScanEnabledWidgets
 716              		.thumb
 717              		.thumb_func
 718              		.type	CapSense_ScanEnabledWidgets, %function
 719              	CapSense_ScanEnabledWidgets:
 720              	.LFB7:
 980:.\Generated_Source\PSoC5/CapSense.c **** 
 981:.\Generated_Source\PSoC5/CapSense.c **** 
 982:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 983:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 984:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 985:.\Generated_Source\PSoC5/CapSense.c **** *
 986:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
 987:.\Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 988:.\Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 989:.\Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 990:.\Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 31


 991:.\Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 992:.\Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
 993:.\Generated_Source\PSoC5/CapSense.c **** *
 994:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
 995:.\Generated_Source\PSoC5/CapSense.c **** *  None
 996:.\Generated_Source\PSoC5/CapSense.c **** *
 997:.\Generated_Source\PSoC5/CapSense.c **** * Return:
 998:.\Generated_Source\PSoC5/CapSense.c **** *  None
 999:.\Generated_Source\PSoC5/CapSense.c **** *
1000:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1001:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1002:.\Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1003:.\Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1004:.\Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1005:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1006:.\Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1007:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1008:.\Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1009:.\Generated_Source\PSoC5/CapSense.c **** *
1010:.\Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1011:.\Generated_Source\PSoC5/CapSense.c **** *  No
1012:.\Generated_Source\PSoC5/CapSense.c **** *
1013:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1014:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1015:.\Generated_Source\PSoC5/CapSense.c **** {
 721              		.loc 1 1015 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725 0000 80B5     		push	{r7, lr}
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 7, -8
 728              		.cfi_offset 14, -4
 729 0002 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
1016:.\Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1017:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 731              		.loc 1 1017 0
 732 0004 114B     		ldr	r3, .L29
 733 0006 0022     		movs	r2, #0
 734 0008 1A70     		strb	r2, [r3]
1018:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 735              		.loc 1 1018 0
 736 000a 114B     		ldr	r3, .L29+4
 737 000c FF22     		movs	r2, #255
 738 000e 1A70     		strb	r2, [r3]
1019:.\Generated_Source\PSoC5/CapSense.c ****     
1020:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1021:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1022:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
 739              		.loc 1 1022 0
 740 0010 0F4B     		ldr	r3, .L29+4
 741 0012 1B78     		ldrb	r3, [r3]
 742 0014 DBB2     		uxtb	r3, r3
 743 0016 1846     		mov	r0, r3
 744 0018 FFF7FEFF 		bl	CapSense_FindNextSensor
 745 001c 0346     		mov	r3, r0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 32


 746 001e 1A46     		mov	r2, r3
 747 0020 0B4B     		ldr	r3, .L29+4
 748 0022 1A70     		strb	r2, [r3]
1023:.\Generated_Source\PSoC5/CapSense.c **** 
1024:.\Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1025:.\Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 749              		.loc 1 1025 0
 750 0024 0A4B     		ldr	r3, .L29+4
 751 0026 1B78     		ldrb	r3, [r3]
 752 0028 DBB2     		uxtb	r3, r3
 753 002a 062B     		cmp	r3, #6
 754 002c 0DD8     		bhi	.L27
1026:.\Generated_Source\PSoC5/CapSense.c ****         {
1027:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
 755              		.loc 1 1027 0
 756 002e 074B     		ldr	r3, .L29
 757 0030 1B78     		ldrb	r3, [r3]
 758 0032 DBB2     		uxtb	r3, r3
 759 0034 43F00103 		orr	r3, r3, #1
 760 0038 DAB2     		uxtb	r2, r3
 761 003a 044B     		ldr	r3, .L29
 762 003c 1A70     		strb	r2, [r3]
1028:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 763              		.loc 1 1028 0
 764 003e 044B     		ldr	r3, .L29+4
 765 0040 1B78     		ldrb	r3, [r3]
 766 0042 DBB2     		uxtb	r3, r3
 767 0044 1846     		mov	r0, r3
 768 0046 FFF7FEFF 		bl	CapSense_PreScan
 769              	.L27:
1029:.\Generated_Source\PSoC5/CapSense.c ****         }
1030:.\Generated_Source\PSoC5/CapSense.c ****         
1031:.\Generated_Source\PSoC5/CapSense.c ****     #else
1032:.\Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1033:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1034:.\Generated_Source\PSoC5/CapSense.c ****         
1035:.\Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1036:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1037:.\Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1038:.\Generated_Source\PSoC5/CapSense.c ****         {
1039:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1040:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1041:.\Generated_Source\PSoC5/CapSense.c ****         }
1042:.\Generated_Source\PSoC5/CapSense.c ****         
1043:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1044:.\Generated_Source\PSoC5/CapSense.c **** }
 770              		.loc 1 1044 0
 771 004a 80BD     		pop	{r7, pc}
 772              	.L30:
 773              		.align	2
 774              	.L29:
 775 004c 00000000 		.word	CapSense_csv
 776 0050 00000000 		.word	CapSense_sensorIndex
 777              		.cfi_endproc
 778              	.LFE7:
 779              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 780              		.section	.text.CapSense_IsBusy,"ax",%progbits
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 33


 781              		.align	2
 782              		.global	CapSense_IsBusy
 783              		.thumb
 784              		.thumb_func
 785              		.type	CapSense_IsBusy, %function
 786              	CapSense_IsBusy:
 787              	.LFB8:
1045:.\Generated_Source\PSoC5/CapSense.c **** 
1046:.\Generated_Source\PSoC5/CapSense.c **** 
1047:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1048:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1049:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1050:.\Generated_Source\PSoC5/CapSense.c **** *
1051:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1052:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1053:.\Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1054:.\Generated_Source\PSoC5/CapSense.c **** *
1055:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1056:.\Generated_Source\PSoC5/CapSense.c **** *  None
1057:.\Generated_Source\PSoC5/CapSense.c **** *
1058:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1059:.\Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1060:.\Generated_Source\PSoC5/CapSense.c **** *  completed.
1061:.\Generated_Source\PSoC5/CapSense.c **** *
1062:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1063:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1064:.\Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1065:.\Generated_Source\PSoC5/CapSense.c **** *
1066:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1068:.\Generated_Source\PSoC5/CapSense.c **** {
 788              		.loc 1 1068 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 1, uses_anonymous_args = 0
 792              		@ link register save eliminated.
 793 0000 80B4     		push	{r7}
 794              		.cfi_def_cfa_offset 4
 795              		.cfi_offset 7, -4
 796 0002 00AF     		add	r7, sp, #0
 797              		.cfi_def_cfa_register 7
1069:.\Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 798              		.loc 1 1069 0
 799 0004 054B     		ldr	r3, .L33
 800 0006 1B78     		ldrb	r3, [r3]
 801 0008 DBB2     		uxtb	r3, r3
 802 000a 03F00103 		and	r3, r3, #1
 803 000e DBB2     		uxtb	r3, r3
1070:.\Generated_Source\PSoC5/CapSense.c **** }
 804              		.loc 1 1070 0
 805 0010 1846     		mov	r0, r3
 806 0012 BD46     		mov	sp, r7
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 0014 5DF8047B 		ldr	r7, [sp], #4
 810              		.cfi_restore 7
 811              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 34


 812 0018 7047     		bx	lr
 813              	.L34:
 814 001a 00BF     		.align	2
 815              	.L33:
 816 001c 00000000 		.word	CapSense_csv
 817              		.cfi_endproc
 818              	.LFE8:
 819              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 820              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 821              		.align	2
 822              		.global	CapSense_ReadSensorRaw
 823              		.thumb
 824              		.thumb_func
 825              		.type	CapSense_ReadSensorRaw, %function
 826              	CapSense_ReadSensorRaw:
 827              	.LFB9:
1071:.\Generated_Source\PSoC5/CapSense.c **** 
1072:.\Generated_Source\PSoC5/CapSense.c **** 
1073:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1075:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1076:.\Generated_Source\PSoC5/CapSense.c **** *
1077:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1078:.\Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1079:.\Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1080:.\Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1081:.\Generated_Source\PSoC5/CapSense.c **** *
1082:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1083:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1084:.\Generated_Source\PSoC5/CapSense.c **** *
1085:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1086:.\Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1087:.\Generated_Source\PSoC5/CapSense.c **** *
1088:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1089:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1090:.\Generated_Source\PSoC5/CapSense.c **** *
1091:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1093:.\Generated_Source\PSoC5/CapSense.c **** {
 828              		.loc 1 1093 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 8
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 7, -4
 836 0002 83B0     		sub	sp, sp, #12
 837              		.cfi_def_cfa_offset 16
 838 0004 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
 840 0006 0346     		mov	r3, r0
 841 0008 FB71     		strb	r3, [r7, #7]
1094:.\Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
 842              		.loc 1 1094 0
 843 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 844 000c 044A     		ldr	r2, .L37
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 35


 845 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1095:.\Generated_Source\PSoC5/CapSense.c **** }
 846              		.loc 1 1095 0
 847 0012 1846     		mov	r0, r3
 848 0014 0C37     		adds	r7, r7, #12
 849              		.cfi_def_cfa_offset 4
 850 0016 BD46     		mov	sp, r7
 851              		.cfi_def_cfa_register 13
 852              		@ sp needed
 853 0018 5DF8047B 		ldr	r7, [sp], #4
 854              		.cfi_restore 7
 855              		.cfi_def_cfa_offset 0
 856 001c 7047     		bx	lr
 857              	.L38:
 858 001e 00BF     		.align	2
 859              	.L37:
 860 0020 00000000 		.word	CapSense_sensorRaw
 861              		.cfi_endproc
 862              	.LFE9:
 863              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 864              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 865              		.align	2
 866              		.global	CapSense_ClearSensors
 867              		.thumb
 868              		.thumb_func
 869              		.type	CapSense_ClearSensors, %function
 870              	CapSense_ClearSensors:
 871              	.LFB10:
1096:.\Generated_Source\PSoC5/CapSense.c **** 
1097:.\Generated_Source\PSoC5/CapSense.c **** 
1098:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1099:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1100:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1101:.\Generated_Source\PSoC5/CapSense.c **** *
1102:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1103:.\Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1104:.\Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1105:.\Generated_Source\PSoC5/CapSense.c **** *
1106:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1107:.\Generated_Source\PSoC5/CapSense.c **** *  None
1108:.\Generated_Source\PSoC5/CapSense.c **** *
1109:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1110:.\Generated_Source\PSoC5/CapSense.c **** *  None
1111:.\Generated_Source\PSoC5/CapSense.c **** *
1112:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1113:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1114:.\Generated_Source\PSoC5/CapSense.c **** {
 872              		.loc 1 1114 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 8
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 80B5     		push	{r7, lr}
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 7, -8
 879              		.cfi_offset 14, -4
 880 0002 82B0     		sub	sp, sp, #8
 881              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 36


 882 0004 00AF     		add	r7, sp, #0
 883              		.cfi_def_cfa_register 7
1115:.\Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1116:.\Generated_Source\PSoC5/CapSense.c ****    
1117:.\Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 884              		.loc 1 1117 0
 885 0006 0023     		movs	r3, #0
 886 0008 FB71     		strb	r3, [r7, #7]
 887 000a 06E0     		b	.L40
 888              	.L41:
1118:.\Generated_Source\PSoC5/CapSense.c ****     {
1119:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
 889              		.loc 1 1119 0 discriminator 3
 890 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 891 000e 1846     		mov	r0, r3
 892 0010 FFF7FEFF 		bl	CapSense_DisableSensor
1117:.\Generated_Source\PSoC5/CapSense.c ****     {
 893              		.loc 1 1117 0 discriminator 3
 894 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 895 0016 0133     		adds	r3, r3, #1
 896 0018 FB71     		strb	r3, [r7, #7]
 897              	.L40:
1117:.\Generated_Source\PSoC5/CapSense.c ****     {
 898              		.loc 1 1117 0 is_stmt 0 discriminator 1
 899 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 900 001c 062B     		cmp	r3, #6
 901 001e F5D9     		bls	.L41
1120:.\Generated_Source\PSoC5/CapSense.c ****     }
1121:.\Generated_Source\PSoC5/CapSense.c **** }
 902              		.loc 1 1121 0 is_stmt 1
 903 0020 0837     		adds	r7, r7, #8
 904              		.cfi_def_cfa_offset 8
 905 0022 BD46     		mov	sp, r7
 906              		.cfi_def_cfa_register 13
 907              		@ sp needed
 908 0024 80BD     		pop	{r7, pc}
 909              		.cfi_endproc
 910              	.LFE10:
 911              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 912 0026 00BF     		.section	.text.CapSense_EnableSensor,"ax",%progbits
 913              		.align	2
 914              		.global	CapSense_EnableSensor
 915              		.thumb
 916              		.thumb_func
 917              		.type	CapSense_EnableSensor, %function
 918              	CapSense_EnableSensor:
 919              	.LFB11:
1122:.\Generated_Source\PSoC5/CapSense.c **** 
1123:.\Generated_Source\PSoC5/CapSense.c **** 
1124:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1125:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1126:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1127:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1128:.\Generated_Source\PSoC5/CapSense.c ****     *
1129:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1130:.\Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1131:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 37


1132:.\Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1133:.\Generated_Source\PSoC5/CapSense.c ****     *
1134:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1135:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1136:.\Generated_Source\PSoC5/CapSense.c ****     *
1137:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1138:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1139:.\Generated_Source\PSoC5/CapSense.c ****     *
1140:.\Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1141:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1142:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1143:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1144:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1145:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1146:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1147:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1148:.\Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1149:.\Generated_Source\PSoC5/CapSense.c ****     *
1150:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1151:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1152:.\Generated_Source\PSoC5/CapSense.c ****     {
1153:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1154:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1155:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1156:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1157:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1158:.\Generated_Source\PSoC5/CapSense.c ****         
1159:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1160:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1161:.\Generated_Source\PSoC5/CapSense.c ****         {
1162:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1163:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1164:.\Generated_Source\PSoC5/CapSense.c ****         }
1165:.\Generated_Source\PSoC5/CapSense.c ****         else
1166:.\Generated_Source\PSoC5/CapSense.c ****         {
1167:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1168:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1169:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1170:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1171:.\Generated_Source\PSoC5/CapSense.c ****                         
1172:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1173:.\Generated_Source\PSoC5/CapSense.c ****             {
1174:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1175:.\Generated_Source\PSoC5/CapSense.c ****             }
1176:.\Generated_Source\PSoC5/CapSense.c ****         } 
1177:.\Generated_Source\PSoC5/CapSense.c ****     }
1178:.\Generated_Source\PSoC5/CapSense.c ****     
1179:.\Generated_Source\PSoC5/CapSense.c ****     
1180:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1181:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1182:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1183:.\Generated_Source\PSoC5/CapSense.c ****     *
1184:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1185:.\Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1186:.\Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1187:.\Generated_Source\PSoC5/CapSense.c ****     *
1188:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 38


1189:.\Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1190:.\Generated_Source\PSoC5/CapSense.c ****     *
1191:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1192:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1193:.\Generated_Source\PSoC5/CapSense.c ****     *
1194:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1195:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1196:.\Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1197:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1198:.\Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1199:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1200:.\Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1201:.\Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1202:.\Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1203:.\Generated_Source\PSoC5/CapSense.c ****     *
1204:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1205:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1206:.\Generated_Source\PSoC5/CapSense.c ****     {
1207:.\Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1208:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1209:.\Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1210:.\Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1211:.\Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1212:.\Generated_Source\PSoC5/CapSense.c ****         
1213:.\Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1214:.\Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1215:.\Generated_Source\PSoC5/CapSense.c ****         {
1216:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1217:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1218:.\Generated_Source\PSoC5/CapSense.c ****         }
1219:.\Generated_Source\PSoC5/CapSense.c ****         else
1220:.\Generated_Source\PSoC5/CapSense.c ****         {
1221:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1222:.\Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1223:.\Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1224:.\Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1225:.\Generated_Source\PSoC5/CapSense.c ****                         
1226:.\Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1227:.\Generated_Source\PSoC5/CapSense.c ****             {
1228:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1229:.\Generated_Source\PSoC5/CapSense.c ****             }
1230:.\Generated_Source\PSoC5/CapSense.c ****         } 
1231:.\Generated_Source\PSoC5/CapSense.c ****     }
1232:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1233:.\Generated_Source\PSoC5/CapSense.c **** 
1234:.\Generated_Source\PSoC5/CapSense.c **** 
1235:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1236:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1237:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1238:.\Generated_Source\PSoC5/CapSense.c **** *
1239:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1240:.\Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1241:.\Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1242:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1243:.\Generated_Source\PSoC5/CapSense.c **** *
1244:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1245:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 39


1246:.\Generated_Source\PSoC5/CapSense.c **** *
1247:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1248:.\Generated_Source\PSoC5/CapSense.c **** *  None
1249:.\Generated_Source\PSoC5/CapSense.c **** *
1250:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1251:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1252:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1253:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1254:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1255:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1256:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1257:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1258:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1259:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1260:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1261:.\Generated_Source\PSoC5/CapSense.c **** *
1262:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1263:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1264:.\Generated_Source\PSoC5/CapSense.c **** {
 920              		.loc 1 1264 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 16
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 80B5     		push	{r7, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 84B0     		sub	sp, sp, #16
 929              		.cfi_def_cfa_offset 24
 930 0004 00AF     		add	r7, sp, #0
 931              		.cfi_def_cfa_register 7
 932 0006 0346     		mov	r3, r0
 933 0008 FB71     		strb	r3, [r7, #7]
1265:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 934              		.loc 1 1265 0
 935 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 936 000c 124A     		ldr	r2, .L44
 937 000e D35C     		ldrb	r3, [r2, r3]
 938 0010 FB73     		strb	r3, [r7, #15]
1266:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 939              		.loc 1 1266 0
 940 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 941 0014 114A     		ldr	r2, .L44+4
 942 0016 D35C     		ldrb	r3, [r2, r3]
 943 0018 BB73     		strb	r3, [r7, #14]
1267:.\Generated_Source\PSoC5/CapSense.c ****     
1268:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1269:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1270:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1271:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1272:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1273:.\Generated_Source\PSoC5/CapSense.c ****             */
1274:.\Generated_Source\PSoC5/CapSense.c ****     
1275:.\Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1276:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 944              		.loc 1 1276 0
 945 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 40


 946 001c 104A     		ldr	r2, .L44+8
 947 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 948 0022 0922     		movs	r2, #9
 949 0024 1A70     		strb	r2, [r3]
1277:.\Generated_Source\PSoC5/CapSense.c ****     
1278:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1279:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 950              		.loc 1 1279 0
 951 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 952 0028 0F2B     		cmp	r3, #15
 953 002a 01D1     		bne	.L43
1280:.\Generated_Source\PSoC5/CapSense.c **** 	{
1281:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 954              		.loc 1 1281 0
 955 002c 0723     		movs	r3, #7
 956 002e FB73     		strb	r3, [r7, #15]
 957              	.L43:
1282:.\Generated_Source\PSoC5/CapSense.c **** 	}
1283:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 958              		.loc 1 1283 0
 959 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 960 0032 0C4A     		ldr	r2, .L44+12
 961 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 962 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 963 003a 0A49     		ldr	r1, .L44+12
 964 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 965 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 966 0042 BA7B     		ldrb	r2, [r7, #14]
 967 0044 0A43     		orrs	r2, r2, r1
 968 0046 D2B2     		uxtb	r2, r2
 969 0048 1A70     		strb	r2, [r3]
1284:.\Generated_Source\PSoC5/CapSense.c ****     
1285:.\Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1286:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1287:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1288:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1289:.\Generated_Source\PSoC5/CapSense.c ****         #else
1290:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 970              		.loc 1 1290 0
 971 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 972 004c 1846     		mov	r0, r3
 973 004e FFF7FEFF 		bl	CapSense_AMuxCH0_Set
1291:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1292:.\Generated_Source\PSoC5/CapSense.c ****                 
1293:.\Generated_Source\PSoC5/CapSense.c ****     #else
1294:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1295:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1296:.\Generated_Source\PSoC5/CapSense.c ****             {
1297:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1298:.\Generated_Source\PSoC5/CapSense.c ****             } 
1299:.\Generated_Source\PSoC5/CapSense.c ****             else
1300:.\Generated_Source\PSoC5/CapSense.c ****             {
1301:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1302:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1303:.\Generated_Source\PSoC5/CapSense.c ****             }
1304:.\Generated_Source\PSoC5/CapSense.c ****             
1305:.\Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 41


1306:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1307:.\Generated_Source\PSoC5/CapSense.c ****             {
1308:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1309:.\Generated_Source\PSoC5/CapSense.c ****             } 
1310:.\Generated_Source\PSoC5/CapSense.c ****             else
1311:.\Generated_Source\PSoC5/CapSense.c ****             {
1312:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1313:.\Generated_Source\PSoC5/CapSense.c ****             }
1314:.\Generated_Source\PSoC5/CapSense.c ****             
1315:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1316:.\Generated_Source\PSoC5/CapSense.c ****         
1317:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1318:.\Generated_Source\PSoC5/CapSense.c **** }
 974              		.loc 1 1318 0
 975 0052 1037     		adds	r7, r7, #16
 976              		.cfi_def_cfa_offset 8
 977 0054 BD46     		mov	sp, r7
 978              		.cfi_def_cfa_register 13
 979              		@ sp needed
 980 0056 80BD     		pop	{r7, pc}
 981              	.L45:
 982              		.align	2
 983              	.L44:
 984 0058 00000000 		.word	CapSense_portTable
 985 005c 00000000 		.word	CapSense_maskTable
 986 0060 00000000 		.word	CapSense_pcTable
 987 0064 00000000 		.word	CapSense_csTable
 988              		.cfi_endproc
 989              	.LFE11:
 990              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 991              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 992              		.align	2
 993              		.global	CapSense_DisableSensor
 994              		.thumb
 995              		.thumb_func
 996              		.type	CapSense_DisableSensor, %function
 997              	CapSense_DisableSensor:
 998              	.LFB12:
1319:.\Generated_Source\PSoC5/CapSense.c **** 
1320:.\Generated_Source\PSoC5/CapSense.c **** 
1321:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1322:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1323:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1324:.\Generated_Source\PSoC5/CapSense.c **** *
1325:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1326:.\Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1327:.\Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1328:.\Generated_Source\PSoC5/CapSense.c **** *
1329:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1330:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1331:.\Generated_Source\PSoC5/CapSense.c **** *
1332:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1333:.\Generated_Source\PSoC5/CapSense.c **** *  None
1334:.\Generated_Source\PSoC5/CapSense.c **** *
1335:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1336:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1337:.\Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 42


1338:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1339:.\Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1340:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1341:.\Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1342:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1343:.\Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1344:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1345:.\Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1346:.\Generated_Source\PSoC5/CapSense.c **** *
1347:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1349:.\Generated_Source\PSoC5/CapSense.c **** {
 999              		.loc 1 1349 0
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 16
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003 0000 80B5     		push	{r7, lr}
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 7, -8
 1006              		.cfi_offset 14, -4
 1007 0002 84B0     		sub	sp, sp, #16
 1008              		.cfi_def_cfa_offset 24
 1009 0004 00AF     		add	r7, sp, #0
 1010              		.cfi_def_cfa_register 7
 1011 0006 0346     		mov	r3, r0
 1012 0008 FB71     		strb	r3, [r7, #7]
1350:.\Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 1013              		.loc 1 1350 0
 1014 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1015 000c 134A     		ldr	r2, .L48
 1016 000e D35C     		ldrb	r3, [r2, r3]
 1017 0010 FB73     		strb	r3, [r7, #15]
1351:.\Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 1018              		.loc 1 1351 0
 1019 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1020 0014 124A     		ldr	r2, .L48+4
 1021 0016 D35C     		ldrb	r3, [r2, r3]
 1022 0018 BB73     		strb	r3, [r7, #14]
1352:.\Generated_Source\PSoC5/CapSense.c ****     
1353:.\Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1354:.\Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1355:.\Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1356:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1357:.\Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1358:.\Generated_Source\PSoC5/CapSense.c ****             */
1359:.\Generated_Source\PSoC5/CapSense.c ****     
1360:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1361:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1362:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1363:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1364:.\Generated_Source\PSoC5/CapSense.c ****         #else
1365:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 1023              		.loc 1 1365 0
 1024 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1025 001c 1846     		mov	r0, r3
 1026 001e FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
1366:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 43


1367:.\Generated_Source\PSoC5/CapSense.c ****                 
1368:.\Generated_Source\PSoC5/CapSense.c ****     #else
1369:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1370:.\Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1371:.\Generated_Source\PSoC5/CapSense.c ****             {
1372:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1373:.\Generated_Source\PSoC5/CapSense.c ****             } 
1374:.\Generated_Source\PSoC5/CapSense.c ****             else
1375:.\Generated_Source\PSoC5/CapSense.c ****             {
1376:.\Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1377:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1378:.\Generated_Source\PSoC5/CapSense.c ****             }
1379:.\Generated_Source\PSoC5/CapSense.c ****             
1380:.\Generated_Source\PSoC5/CapSense.c ****         #else
1381:.\Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1382:.\Generated_Source\PSoC5/CapSense.c ****             {
1383:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1384:.\Generated_Source\PSoC5/CapSense.c ****             } 
1385:.\Generated_Source\PSoC5/CapSense.c ****             else
1386:.\Generated_Source\PSoC5/CapSense.c ****             {
1387:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1388:.\Generated_Source\PSoC5/CapSense.c ****             }
1389:.\Generated_Source\PSoC5/CapSense.c ****             
1390:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1391:.\Generated_Source\PSoC5/CapSense.c ****         
1392:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1393:.\Generated_Source\PSoC5/CapSense.c ****     
1394:.\Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1395:.\Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 1027              		.loc 1 1395 0
 1028 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1029 0024 0F2B     		cmp	r3, #15
 1030 0026 01D1     		bne	.L47
1396:.\Generated_Source\PSoC5/CapSense.c **** 	{
1397:.\Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 1031              		.loc 1 1397 0
 1032 0028 0723     		movs	r3, #7
 1033 002a FB73     		strb	r3, [r7, #15]
 1034              	.L47:
1398:.\Generated_Source\PSoC5/CapSense.c **** 	}
1399:.\Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 1035              		.loc 1 1399 0
 1036 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1037 002e 0D4A     		ldr	r2, .L48+8
 1038 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1039 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1040 0036 0B49     		ldr	r1, .L48+8
 1041 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1042 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1043 003e BA7B     		ldrb	r2, [r7, #14]
 1044 0040 D243     		mvns	r2, r2
 1045 0042 D2B2     		uxtb	r2, r2
 1046 0044 0A40     		ands	r2, r2, r1
 1047 0046 D2B2     		uxtb	r2, r2
 1048 0048 1A70     		strb	r2, [r3]
1400:.\Generated_Source\PSoC5/CapSense.c ****     
1401:.\Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 44


1402:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1403:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
 1049              		.loc 1 1403 0
 1050 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1051 004c 064A     		ldr	r2, .L48+12
 1052 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1053 0052 0822     		movs	r2, #8
 1054 0054 1A70     		strb	r2, [r3]
1404:.\Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1405:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
1406:.\Generated_Source\PSoC5/CapSense.c ****     #else
1407:.\Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1408:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1409:.\Generated_Source\PSoC5/CapSense.c **** }
 1055              		.loc 1 1409 0
 1056 0056 1037     		adds	r7, r7, #16
 1057              		.cfi_def_cfa_offset 8
 1058 0058 BD46     		mov	sp, r7
 1059              		.cfi_def_cfa_register 13
 1060              		@ sp needed
 1061 005a 80BD     		pop	{r7, pc}
 1062              	.L49:
 1063              		.align	2
 1064              	.L48:
 1065 005c 00000000 		.word	CapSense_portTable
 1066 0060 00000000 		.word	CapSense_maskTable
 1067 0064 00000000 		.word	CapSense_csTable
 1068 0068 00000000 		.word	CapSense_pcTable
 1069              		.cfi_endproc
 1070              	.LFE12:
 1071              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1072              		.section	.text.CapSense_PreScan,"ax",%progbits
 1073              		.align	2
 1074              		.global	CapSense_PreScan
 1075              		.thumb
 1076              		.thumb_func
 1077              		.type	CapSense_PreScan, %function
 1078              	CapSense_PreScan:
 1079              	.LFB13:
1410:.\Generated_Source\PSoC5/CapSense.c **** 
1411:.\Generated_Source\PSoC5/CapSense.c **** 
1412:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1413:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1414:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1415:.\Generated_Source\PSoC5/CapSense.c **** *
1416:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1417:.\Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1418:.\Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1419:.\Generated_Source\PSoC5/CapSense.c **** *
1420:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1421:.\Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1422:.\Generated_Source\PSoC5/CapSense.c **** *
1423:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1424:.\Generated_Source\PSoC5/CapSense.c **** *  None
1425:.\Generated_Source\PSoC5/CapSense.c **** *
1426:.\Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1427:.\Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 45


1428:.\Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1429:.\Generated_Source\PSoC5/CapSense.c **** *  resistor.
1430:.\Generated_Source\PSoC5/CapSense.c **** *
1431:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1432:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1433:.\Generated_Source\PSoC5/CapSense.c **** {
 1080              		.loc 1 1433 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 8
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 82B0     		sub	sp, sp, #8
 1089              		.cfi_def_cfa_offset 16
 1090 0004 00AF     		add	r7, sp, #0
 1091              		.cfi_def_cfa_register 7
 1092 0006 0346     		mov	r3, r0
 1093 0008 FB71     		strb	r3, [r7, #7]
1434:.\Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1435:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
 1094              		.loc 1 1435 0
 1095 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1096 000c 1846     		mov	r0, r3
 1097 000e FFF7FEFF 		bl	CapSense_SetScanSlotSettings
1436:.\Generated_Source\PSoC5/CapSense.c ****     
1437:.\Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1438:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1439:.\Generated_Source\PSoC5/CapSense.c **** 
1440:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1441:.\Generated_Source\PSoC5/CapSense.c ****     
1442:.\Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1443:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
 1098              		.loc 1 1443 0
 1099 0012 0F4A     		ldr	r2, .L51
 1100 0014 0E4B     		ldr	r3, .L51
 1101 0016 1B78     		ldrb	r3, [r3]
 1102 0018 DBB2     		uxtb	r3, r3
 1103 001a 43F00103 		orr	r3, r3, #1
 1104 001e DBB2     		uxtb	r3, r3
 1105 0020 1370     		strb	r3, [r2]
1444:.\Generated_Source\PSoC5/CapSense.c ****         
1445:.\Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1446:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1447:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1448:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1449:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1450:.\Generated_Source\PSoC5/CapSense.c ****             #else
1451:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 1106              		.loc 1 1451 0
 1107 0022 0C4A     		ldr	r2, .L51+4
 1108 0024 0B4B     		ldr	r3, .L51+4
 1109 0026 1B78     		ldrb	r3, [r3]
 1110 0028 DBB2     		uxtb	r3, r3
 1111 002a 23F00103 		bic	r3, r3, #1
 1112 002e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 46


 1113 0030 1370     		strb	r3, [r2]
1452:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1453:.\Generated_Source\PSoC5/CapSense.c **** 
1454:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1455:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
 1114              		.loc 1 1455 0
 1115 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1116 0034 1846     		mov	r0, r3
 1117 0036 FFF7FEFF 		bl	CapSense_EnableSensor
1456:.\Generated_Source\PSoC5/CapSense.c ****             
1457:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1458:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1459:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1460:.\Generated_Source\PSoC5/CapSense.c ****             
1461:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1462:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1463:.\Generated_Source\PSoC5/CapSense.c ****                 
1464:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1465:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1466:.\Generated_Source\PSoC5/CapSense.c ****             
1467:.\Generated_Source\PSoC5/CapSense.c ****         #else
1468:.\Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1469:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1470:.\Generated_Source\PSoC5/CapSense.c ****             
1471:.\Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1472:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1473:.\Generated_Source\PSoC5/CapSense.c ****              
1474:.\Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1475:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1476:.\Generated_Source\PSoC5/CapSense.c ****         
1477:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1478:.\Generated_Source\PSoC5/CapSense.c ****         
1479:.\Generated_Source\PSoC5/CapSense.c ****     #else
1480:.\Generated_Source\PSoC5/CapSense.c **** 
1481:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1482:.\Generated_Source\PSoC5/CapSense.c ****         {
1483:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1484:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1485:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1486:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1487:.\Generated_Source\PSoC5/CapSense.c ****                 #else
1488:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1489:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1490:.\Generated_Source\PSoC5/CapSense.c ****                 
1491:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1492:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1493:.\Generated_Source\PSoC5/CapSense.c ****                 
1494:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1495:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1496:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1497:.\Generated_Source\PSoC5/CapSense.c ****                 
1498:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1499:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1500:.\Generated_Source\PSoC5/CapSense.c ****                     
1501:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1502:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1503:.\Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 47


1504:.\Generated_Source\PSoC5/CapSense.c ****             #else
1505:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1506:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1507:.\Generated_Source\PSoC5/CapSense.c ****                 
1508:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1509:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1510:.\Generated_Source\PSoC5/CapSense.c ****                     
1511:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1512:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1513:.\Generated_Source\PSoC5/CapSense.c ****             
1514:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1515:.\Generated_Source\PSoC5/CapSense.c ****             
1516:.\Generated_Source\PSoC5/CapSense.c ****         }
1517:.\Generated_Source\PSoC5/CapSense.c ****         
1518:.\Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1519:.\Generated_Source\PSoC5/CapSense.c ****         {
1520:.\Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1521:.\Generated_Source\PSoC5/CapSense.c ****             
1522:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1523:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1524:.\Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1525:.\Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1526:.\Generated_Source\PSoC5/CapSense.c ****                 #else 
1527:.\Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1528:.\Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1529:.\Generated_Source\PSoC5/CapSense.c ****                 
1530:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1531:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1532:.\Generated_Source\PSoC5/CapSense.c ****                 
1533:.\Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1534:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1535:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1536:.\Generated_Source\PSoC5/CapSense.c ****                 
1537:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1538:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1539:.\Generated_Source\PSoC5/CapSense.c ****                     
1540:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1541:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1542:.\Generated_Source\PSoC5/CapSense.c ****                 
1543:.\Generated_Source\PSoC5/CapSense.c ****             #else
1544:.\Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1545:.\Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1546:.\Generated_Source\PSoC5/CapSense.c ****                 
1547:.\Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1548:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1549:.\Generated_Source\PSoC5/CapSense.c ****                 
1550:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1551:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1552:.\Generated_Source\PSoC5/CapSense.c ****             
1553:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1554:.\Generated_Source\PSoC5/CapSense.c ****         }
1555:.\Generated_Source\PSoC5/CapSense.c ****     
1556:.\Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1557:.\Generated_Source\PSoC5/CapSense.c ****     
1558:.\Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1559:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
 1118              		.loc 1 1559 0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 48


 1119 003a 054A     		ldr	r2, .L51
 1120 003c 044B     		ldr	r3, .L51
 1121 003e 1B78     		ldrb	r3, [r3]
 1122 0040 DBB2     		uxtb	r3, r3
 1123 0042 43F00203 		orr	r3, r3, #2
 1124 0046 DBB2     		uxtb	r3, r3
 1125 0048 1370     		strb	r3, [r2]
1560:.\Generated_Source\PSoC5/CapSense.c ****     
1561:.\Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1562:.\Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1563:.\Generated_Source\PSoC5/CapSense.c **** 
1564:.\Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1565:.\Generated_Source\PSoC5/CapSense.c **** }
 1126              		.loc 1 1565 0
 1127 004a 0837     		adds	r7, r7, #8
 1128              		.cfi_def_cfa_offset 8
 1129 004c BD46     		mov	sp, r7
 1130              		.cfi_def_cfa_register 13
 1131              		@ sp needed
 1132 004e 80BD     		pop	{r7, pc}
 1133              	.L52:
 1134              		.align	2
 1135              	.L51:
 1136 0050 7B650040 		.word	1073767803
 1137 0054 70580040 		.word	1073764464
 1138              		.cfi_endproc
 1139              	.LFE13:
 1140              		.size	CapSense_PreScan, .-CapSense_PreScan
 1141              		.section	.text.CapSense_PostScan,"ax",%progbits
 1142              		.align	2
 1143              		.global	CapSense_PostScan
 1144              		.thumb
 1145              		.thumb_func
 1146              		.type	CapSense_PostScan, %function
 1147              	CapSense_PostScan:
 1148              	.LFB14:
1566:.\Generated_Source\PSoC5/CapSense.c **** 
1567:.\Generated_Source\PSoC5/CapSense.c **** 
1568:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1569:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1570:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1571:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1572:.\Generated_Source\PSoC5/CapSense.c ****     *
1573:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1574:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1575:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1576:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1577:.\Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1578:.\Generated_Source\PSoC5/CapSense.c ****     *
1579:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1580:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1581:.\Generated_Source\PSoC5/CapSense.c ****     *
1582:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1583:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1584:.\Generated_Source\PSoC5/CapSense.c ****     *
1585:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1586:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 49


1587:.\Generated_Source\PSoC5/CapSense.c ****     *
1588:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1589:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1590:.\Generated_Source\PSoC5/CapSense.c ****     *
1591:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1592:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1593:.\Generated_Source\PSoC5/CapSense.c ****     {
 1149              		.loc 1 1593 0
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 8
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 80B5     		push	{r7, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 82B0     		sub	sp, sp, #8
 1158              		.cfi_def_cfa_offset 16
 1159 0004 00AF     		add	r7, sp, #0
 1160              		.cfi_def_cfa_register 7
 1161 0006 0346     		mov	r3, r0
 1162 0008 FB71     		strb	r3, [r7, #7]
1594:.\Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1595:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 1163              		.loc 1 1595 0
 1164 000a 1E4A     		ldr	r2, .L54
 1165 000c 1D4B     		ldr	r3, .L54
 1166 000e 1B78     		ldrb	r3, [r3]
 1167 0010 DBB2     		uxtb	r3, r3
 1168 0012 23F00303 		bic	r3, r3, #3
 1169 0016 DBB2     		uxtb	r3, r3
 1170 0018 1370     		strb	r3, [r2]
1596:.\Generated_Source\PSoC5/CapSense.c ****         
1597:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1598:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1599:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1600:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1601:.\Generated_Source\PSoC5/CapSense.c ****         #else
1602:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 1171              		.loc 1 1602 0
 1172 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1173 001c 1A4A     		ldr	r2, .L54+4
 1174 001e 1278     		ldrb	r2, [r2]
 1175 0020 D2B2     		uxtb	r2, r2
 1176 0022 92B2     		uxth	r2, r2
 1177 0024 1202     		lsls	r2, r2, #8
 1178 0026 91B2     		uxth	r1, r2
 1179 0028 184A     		ldr	r2, .L54+8
 1180 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1603:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 1181              		.loc 1 1603 0
 1182 002e 184B     		ldr	r3, .L54+12
 1183 0030 1B78     		ldrb	r3, [r3]
 1184 0032 DBB2     		uxtb	r3, r3
 1185 0034 9AB2     		uxth	r2, r3
 1186 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1187 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1188 003a 1448     		ldr	r0, .L54+8
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 50


 1189 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1190 0040 0A43     		orrs	r2, r2, r1
 1191 0042 91B2     		uxth	r1, r2
 1192 0044 114A     		ldr	r2, .L54+8
 1193 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1604:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1194              		.loc 1 1604 0
 1195 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1605:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
 1196              		.loc 1 1605 0
 1197 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1198 004e 0F49     		ldr	r1, .L54+8
 1199 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1604:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1200              		.loc 1 1604 0
 1201 0054 D243     		mvns	r2, r2
 1202 0056 91B2     		uxth	r1, r2
 1203 0058 0C4A     		ldr	r2, .L54+8
 1204 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1606:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1607:.\Generated_Source\PSoC5/CapSense.c ****         
1608:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1609:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 1205              		.loc 1 1609 0
 1206 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1207 0060 1846     		mov	r0, r3
 1208 0062 FFF7FEFF 		bl	CapSense_DisableSensor
1610:.\Generated_Source\PSoC5/CapSense.c ****         
1611:.\Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1612:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1613:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 1209              		.loc 1 1613 0
 1210 0066 0020     		movs	r0, #0
 1211 0068 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
1614:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1615:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1616:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1617:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1618:.\Generated_Source\PSoC5/CapSense.c ****         #else
1619:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1620:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1621:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1622:.\Generated_Source\PSoC5/CapSense.c ****             
1623:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1624:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1625:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1626:.\Generated_Source\PSoC5/CapSense.c ****         #else
1627:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 1212              		.loc 1 1627 0
 1213 006c 094A     		ldr	r2, .L54+16
 1214 006e 094B     		ldr	r3, .L54+16
 1215 0070 1B78     		ldrb	r3, [r3]
 1216 0072 DBB2     		uxtb	r3, r3
 1217 0074 43F00103 		orr	r3, r3, #1
 1218 0078 DBB2     		uxtb	r3, r3
 1219 007a 1370     		strb	r3, [r2]
1628:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 51


1629:.\Generated_Source\PSoC5/CapSense.c ****     }
 1220              		.loc 1 1629 0
 1221 007c 0837     		adds	r7, r7, #8
 1222              		.cfi_def_cfa_offset 8
 1223 007e BD46     		mov	sp, r7
 1224              		.cfi_def_cfa_register 13
 1225              		@ sp needed
 1226 0080 80BD     		pop	{r7, pc}
 1227              	.L55:
 1228 0082 00BF     		.align	2
 1229              	.L54:
 1230 0084 7B650040 		.word	1073767803
 1231 0088 18640040 		.word	1073767448
 1232 008c 00000000 		.word	CapSense_sensorRaw
 1233 0090 08640040 		.word	1073767432
 1234 0094 70580040 		.word	1073764464
 1235              		.cfi_endproc
 1236              	.LFE14:
 1237              		.size	CapSense_PostScan, .-CapSense_PostScan
 1238              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 1239              		.align	2
 1240              		.global	CapSense_SetPrescaler
 1241              		.thumb
 1242              		.thumb_func
 1243              		.type	CapSense_SetPrescaler, %function
 1244              	CapSense_SetPrescaler:
 1245              	.LFB15:
1630:.\Generated_Source\PSoC5/CapSense.c ****     
1631:.\Generated_Source\PSoC5/CapSense.c **** #else
1632:.\Generated_Source\PSoC5/CapSense.c **** 
1633:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1634:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1635:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1636:.\Generated_Source\PSoC5/CapSense.c ****     *
1637:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1638:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1639:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1640:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1641:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1642:.\Generated_Source\PSoC5/CapSense.c ****     *
1643:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1644:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1645:.\Generated_Source\PSoC5/CapSense.c ****     *
1646:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1647:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1648:.\Generated_Source\PSoC5/CapSense.c ****     *
1649:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1650:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1651:.\Generated_Source\PSoC5/CapSense.c ****     *
1652:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1653:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1654:.\Generated_Source\PSoC5/CapSense.c ****     *
1655:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1656:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1657:.\Generated_Source\PSoC5/CapSense.c ****     {
1658:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1659:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 52


1660:.\Generated_Source\PSoC5/CapSense.c ****         {
1661:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1662:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1663:.\Generated_Source\PSoC5/CapSense.c ****         }
1664:.\Generated_Source\PSoC5/CapSense.c ****         
1665:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1666:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1667:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1668:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1669:.\Generated_Source\PSoC5/CapSense.c ****         #else
1670:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1671:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1672:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1673:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1674:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1675:.\Generated_Source\PSoC5/CapSense.c ****         
1676:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1677:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1678:.\Generated_Source\PSoC5/CapSense.c ****         
1679:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1680:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1681:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1682:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1683:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1684:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1685:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1686:.\Generated_Source\PSoC5/CapSense.c ****         #else
1687:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1688:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1689:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1690:.\Generated_Source\PSoC5/CapSense.c ****         
1691:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1692:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1693:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1694:.\Generated_Source\PSoC5/CapSense.c ****         #else
1695:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1696:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1697:.\Generated_Source\PSoC5/CapSense.c ****     }
1698:.\Generated_Source\PSoC5/CapSense.c ****     
1699:.\Generated_Source\PSoC5/CapSense.c ****     
1700:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1701:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1702:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1703:.\Generated_Source\PSoC5/CapSense.c ****     *
1704:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1705:.\Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1706:.\Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1707:.\Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1708:.\Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1709:.\Generated_Source\PSoC5/CapSense.c ****     *
1710:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1711:.\Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1712:.\Generated_Source\PSoC5/CapSense.c ****     *
1713:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1714:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1715:.\Generated_Source\PSoC5/CapSense.c ****     *
1716:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 53


1717:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1718:.\Generated_Source\PSoC5/CapSense.c ****     *
1719:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1720:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1721:.\Generated_Source\PSoC5/CapSense.c ****     *
1722:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1723:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1724:.\Generated_Source\PSoC5/CapSense.c ****     {
1725:.\Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1726:.\Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1727:.\Generated_Source\PSoC5/CapSense.c ****         {
1728:.\Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1729:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1730:.\Generated_Source\PSoC5/CapSense.c ****         }
1731:.\Generated_Source\PSoC5/CapSense.c ****         
1732:.\Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1733:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1734:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1735:.\Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1736:.\Generated_Source\PSoC5/CapSense.c ****         #else
1737:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1738:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1739:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1740:.\Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1741:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1742:.\Generated_Source\PSoC5/CapSense.c ****         
1743:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1744:.\Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1745:.\Generated_Source\PSoC5/CapSense.c ****         
1746:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1747:.\Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1748:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1749:.\Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1750:.\Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1751:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1752:.\Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1753:.\Generated_Source\PSoC5/CapSense.c ****         #else
1754:.\Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1755:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1756:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1757:.\Generated_Source\PSoC5/CapSense.c **** 
1758:.\Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1759:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1760:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1761:.\Generated_Source\PSoC5/CapSense.c ****         #else
1762:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1763:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1764:.\Generated_Source\PSoC5/CapSense.c ****     }
1765:.\Generated_Source\PSoC5/CapSense.c ****     
1766:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1767:.\Generated_Source\PSoC5/CapSense.c **** 
1768:.\Generated_Source\PSoC5/CapSense.c **** 
1769:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1770:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1771:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1772:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1773:.\Generated_Source\PSoC5/CapSense.c ****     *
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 54


1774:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1775:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1776:.\Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1777:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1778:.\Generated_Source\PSoC5/CapSense.c ****     *
1779:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1780:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1781:.\Generated_Source\PSoC5/CapSense.c ****     *
1782:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1783:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1784:.\Generated_Source\PSoC5/CapSense.c ****     *
1785:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1786:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1787:.\Generated_Source\PSoC5/CapSense.c ****     {
1788:.\Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1789:.\Generated_Source\PSoC5/CapSense.c ****         
1790:.\Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1791:.\Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1792:.\Generated_Source\PSoC5/CapSense.c ****         {
1793:.\Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1794:.\Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1795:.\Generated_Source\PSoC5/CapSense.c ****         }
1796:.\Generated_Source\PSoC5/CapSense.c ****     }
1797:.\Generated_Source\PSoC5/CapSense.c ****     
1798:.\Generated_Source\PSoC5/CapSense.c ****     
1799:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1800:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1801:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1802:.\Generated_Source\PSoC5/CapSense.c ****     *
1803:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1804:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1805:.\Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1806:.\Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1807:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1808:.\Generated_Source\PSoC5/CapSense.c ****     * 
1809:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1810:.\Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1811:.\Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1812:.\Generated_Source\PSoC5/CapSense.c ****     *
1813:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1814:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1815:.\Generated_Source\PSoC5/CapSense.c ****     *
1816:.\Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1817:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1818:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1819:.\Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1820:.\Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1821:.\Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1822:.\Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1823:.\Generated_Source\PSoC5/CapSense.c ****     *
1824:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1825:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1826:.\Generated_Source\PSoC5/CapSense.c ****     *
1827:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1828:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1829:.\Generated_Source\PSoC5/CapSense.c ****     {
1830:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 55


1831:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1832:.\Generated_Source\PSoC5/CapSense.c ****             
1833:.\Generated_Source\PSoC5/CapSense.c ****         #else
1834:.\Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1835:.\Generated_Source\PSoC5/CapSense.c ****             {
1836:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1837:.\Generated_Source\PSoC5/CapSense.c ****             }
1838:.\Generated_Source\PSoC5/CapSense.c ****             else
1839:.\Generated_Source\PSoC5/CapSense.c ****             {
1840:.\Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1841:.\Generated_Source\PSoC5/CapSense.c ****             }
1842:.\Generated_Source\PSoC5/CapSense.c ****     
1843:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1844:.\Generated_Source\PSoC5/CapSense.c ****     }
1845:.\Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1846:.\Generated_Source\PSoC5/CapSense.c **** 
1847:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1848:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1849:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1850:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1851:.\Generated_Source\PSoC5/CapSense.c ****     *
1852:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1853:.\Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1854:.\Generated_Source\PSoC5/CapSense.c ****     *
1855:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1856:.\Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1857:.\Generated_Source\PSoC5/CapSense.c ****     *
1858:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1859:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1860:.\Generated_Source\PSoC5/CapSense.c ****     *
1861:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1862:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1863:.\Generated_Source\PSoC5/CapSense.c ****     {
 1246              		.loc 1 1863 0
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 8
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250              		@ link register save eliminated.
 1251 0000 80B4     		push	{r7}
 1252              		.cfi_def_cfa_offset 4
 1253              		.cfi_offset 7, -4
 1254 0002 83B0     		sub	sp, sp, #12
 1255              		.cfi_def_cfa_offset 16
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 0346     		mov	r3, r0
 1259 0008 FB71     		strb	r3, [r7, #7]
1864:.\Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1865:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1866:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 1260              		.loc 1 1866 0
 1261 000a 064A     		ldr	r2, .L57
 1262 000c FB79     		ldrb	r3, [r7, #7]
 1263 000e 1370     		strb	r3, [r2]
1867:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1264              		.loc 1 1867 0
 1265 0010 054A     		ldr	r2, .L57+4
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 56


 1266 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1267 0014 5B08     		lsrs	r3, r3, #1
 1268 0016 DBB2     		uxtb	r3, r3
 1269 0018 1370     		strb	r3, [r2]
1868:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1869:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1870:.\Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1871:.\Generated_Source\PSoC5/CapSense.c ****         #else
1872:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1873:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1874:.\Generated_Source\PSoC5/CapSense.c ****     }
 1270              		.loc 1 1874 0
 1271 001a 0C37     		adds	r7, r7, #12
 1272              		.cfi_def_cfa_offset 4
 1273 001c BD46     		mov	sp, r7
 1274              		.cfi_def_cfa_register 13
 1275              		@ sp needed
 1276 001e 5DF8047B 		ldr	r7, [sp], #4
 1277              		.cfi_restore 7
 1278              		.cfi_def_cfa_offset 0
 1279 0022 7047     		bx	lr
 1280              	.L58:
 1281              		.align	2
 1282              	.L57:
 1283 0024 2A650040 		.word	1073767722
 1284 0028 3A650040 		.word	1073767738
 1285              		.cfi_endproc
 1286              	.LFE15:
 1287              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 1288              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 1289              		.align	2
 1290              		.global	CapSense_GetPrescaler
 1291              		.thumb
 1292              		.thumb_func
 1293              		.type	CapSense_GetPrescaler, %function
 1294              	CapSense_GetPrescaler:
 1295              	.LFB16:
1875:.\Generated_Source\PSoC5/CapSense.c **** 
1876:.\Generated_Source\PSoC5/CapSense.c **** 
1877:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1878:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1879:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1880:.\Generated_Source\PSoC5/CapSense.c ****     *
1881:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1882:.\Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1883:.\Generated_Source\PSoC5/CapSense.c ****     *
1884:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1885:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1886:.\Generated_Source\PSoC5/CapSense.c ****     *
1887:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1888:.\Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1889:.\Generated_Source\PSoC5/CapSense.c ****     *
1890:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1891:.\Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1892:.\Generated_Source\PSoC5/CapSense.c ****     {
 1296              		.loc 1 1892 0
 1297              		.cfi_startproc
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 57


 1298              		@ args = 0, pretend = 0, frame = 8
 1299              		@ frame_needed = 1, uses_anonymous_args = 0
 1300              		@ link register save eliminated.
 1301 0000 80B4     		push	{r7}
 1302              		.cfi_def_cfa_offset 4
 1303              		.cfi_offset 7, -4
 1304 0002 83B0     		sub	sp, sp, #12
 1305              		.cfi_def_cfa_offset 16
 1306 0004 00AF     		add	r7, sp, #0
 1307              		.cfi_def_cfa_register 7
1893:.\Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
 1308              		.loc 1 1893 0
 1309 0006 0023     		movs	r3, #0
 1310 0008 FB71     		strb	r3, [r7, #7]
1894:.\Generated_Source\PSoC5/CapSense.c **** 
1895:.\Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1896:.\Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1897:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 1311              		.loc 1 1897 0
 1312 000a 054B     		ldr	r3, .L61
 1313 000c 1B78     		ldrb	r3, [r3]
 1314 000e FB71     		strb	r3, [r7, #7]
1898:.\Generated_Source\PSoC5/CapSense.c ****             
1899:.\Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1900:.\Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1901:.\Generated_Source\PSoC5/CapSense.c ****             
1902:.\Generated_Source\PSoC5/CapSense.c ****         #else
1903:.\Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1904:.\Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1905:.\Generated_Source\PSoC5/CapSense.c ****         
1906:.\Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
 1315              		.loc 1 1906 0
 1316 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1907:.\Generated_Source\PSoC5/CapSense.c ****     }
 1317              		.loc 1 1907 0
 1318 0012 1846     		mov	r0, r3
 1319 0014 0C37     		adds	r7, r7, #12
 1320              		.cfi_def_cfa_offset 4
 1321 0016 BD46     		mov	sp, r7
 1322              		.cfi_def_cfa_register 13
 1323              		@ sp needed
 1324 0018 5DF8047B 		ldr	r7, [sp], #4
 1325              		.cfi_restore 7
 1326              		.cfi_def_cfa_offset 0
 1327 001c 7047     		bx	lr
 1328              	.L62:
 1329 001e 00BF     		.align	2
 1330              	.L61:
 1331 0020 2A650040 		.word	1073767722
 1332              		.cfi_endproc
 1333              	.LFE16:
 1334              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 1335              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 1336              		.align	2
 1337              		.global	CapSense_SetScanSpeed
 1338              		.thumb
 1339              		.thumb_func
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 58


 1340              		.type	CapSense_SetScanSpeed, %function
 1341              	CapSense_SetScanSpeed:
 1342              	.LFB17:
1908:.\Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1909:.\Generated_Source\PSoC5/CapSense.c **** 
1910:.\Generated_Source\PSoC5/CapSense.c **** 
1911:.\Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1912:.\Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1913:.\Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1914:.\Generated_Source\PSoC5/CapSense.c **** *
1915:.\Generated_Source\PSoC5/CapSense.c **** * Summary:
1916:.\Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1917:.\Generated_Source\PSoC5/CapSense.c **** *
1918:.\Generated_Source\PSoC5/CapSense.c **** * Parameters:
1919:.\Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1920:.\Generated_Source\PSoC5/CapSense.c **** *
1921:.\Generated_Source\PSoC5/CapSense.c **** * Return:
1922:.\Generated_Source\PSoC5/CapSense.c **** *  None
1923:.\Generated_Source\PSoC5/CapSense.c **** *
1924:.\Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1925:.\Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1926:.\Generated_Source\PSoC5/CapSense.c **** {
 1343              		.loc 1 1926 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 8
 1346              		@ frame_needed = 1, uses_anonymous_args = 0
 1347              		@ link register save eliminated.
 1348 0000 80B4     		push	{r7}
 1349              		.cfi_def_cfa_offset 4
 1350              		.cfi_offset 7, -4
 1351 0002 83B0     		sub	sp, sp, #12
 1352              		.cfi_def_cfa_offset 16
 1353 0004 00AF     		add	r7, sp, #0
 1354              		.cfi_def_cfa_register 7
 1355 0006 0346     		mov	r3, r0
 1356 0008 FB71     		strb	r3, [r7, #7]
1927:.\Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 1357              		.loc 1 1927 0
 1358 000a 044A     		ldr	r2, .L64
 1359 000c FB79     		ldrb	r3, [r7, #7]
 1360 000e 1370     		strb	r3, [r2]
1928:.\Generated_Source\PSoC5/CapSense.c **** }
 1361              		.loc 1 1928 0
 1362 0010 0C37     		adds	r7, r7, #12
 1363              		.cfi_def_cfa_offset 4
 1364 0012 BD46     		mov	sp, r7
 1365              		.cfi_def_cfa_register 13
 1366              		@ sp needed
 1367 0014 5DF8047B 		ldr	r7, [sp], #4
 1368              		.cfi_restore 7
 1369              		.cfi_def_cfa_offset 0
 1370 0018 7047     		bx	lr
 1371              	.L65:
 1372 001a 00BF     		.align	2
 1373              	.L64:
 1374 001c 88650040 		.word	1073767816
 1375              		.cfi_endproc
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 59


 1376              	.LFE17:
 1377              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 1378              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 1379              		.align	2
 1380              		.global	CapSense_SetAnalogSwitchesSource
 1381              		.thumb
 1382              		.thumb_func
 1383              		.type	CapSense_SetAnalogSwitchesSource, %function
 1384              	CapSense_SetAnalogSwitchesSource:
 1385              	.LFB18:
1929:.\Generated_Source\PSoC5/CapSense.c **** 
1930:.\Generated_Source\PSoC5/CapSense.c **** 
1931:.\Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1932:.\Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1933:.\Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1934:.\Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1935:.\Generated_Source\PSoC5/CapSense.c ****     *
1936:.\Generated_Source\PSoC5/CapSense.c ****     * Summary:
1937:.\Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1938:.\Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1939:.\Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1940:.\Generated_Source\PSoC5/CapSense.c ****     *
1941:.\Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1942:.\Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1943:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1944:.\Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1945:.\Generated_Source\PSoC5/CapSense.c ****     *
1946:.\Generated_Source\PSoC5/CapSense.c ****     * Return:
1947:.\Generated_Source\PSoC5/CapSense.c ****     *  None
1948:.\Generated_Source\PSoC5/CapSense.c ****     *
1949:.\Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1950:.\Generated_Source\PSoC5/CapSense.c ****     *  No
1951:.\Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1952:.\Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1953:.\Generated_Source\PSoC5/CapSense.c ****                       
1954:.\Generated_Source\PSoC5/CapSense.c ****     {
 1386              		.loc 1 1954 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 8
 1389              		@ frame_needed = 1, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 1391 0000 80B4     		push	{r7}
 1392              		.cfi_def_cfa_offset 4
 1393              		.cfi_offset 7, -4
 1394 0002 83B0     		sub	sp, sp, #12
 1395              		.cfi_def_cfa_offset 16
 1396 0004 00AF     		add	r7, sp, #0
 1397              		.cfi_def_cfa_register 7
 1398 0006 0346     		mov	r3, r0
 1399 0008 FB71     		strb	r3, [r7, #7]
1955:.\Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 1400              		.loc 1 1955 0
 1401 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1402 000c 012B     		cmp	r3, #1
 1403 000e 08D1     		bne	.L67
1956:.\Generated_Source\PSoC5/CapSense.c ****         {
1957:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 60


 1404              		.loc 1 1957 0
 1405 0010 0A4A     		ldr	r2, .L69
 1406 0012 0A4B     		ldr	r3, .L69
 1407 0014 1B78     		ldrb	r3, [r3]
 1408 0016 DBB2     		uxtb	r3, r3
 1409 0018 23F01003 		bic	r3, r3, #16
 1410 001c DBB2     		uxtb	r3, r3
 1411 001e 1370     		strb	r3, [r2]
 1412 0020 07E0     		b	.L66
 1413              	.L67:
1958:.\Generated_Source\PSoC5/CapSense.c ****         }
1959:.\Generated_Source\PSoC5/CapSense.c ****         else
1960:.\Generated_Source\PSoC5/CapSense.c ****         {
1961:.\Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
 1414              		.loc 1 1961 0
 1415 0022 064A     		ldr	r2, .L69
 1416 0024 054B     		ldr	r3, .L69
 1417 0026 1B78     		ldrb	r3, [r3]
 1418 0028 DBB2     		uxtb	r3, r3
 1419 002a 43F01003 		orr	r3, r3, #16
 1420 002e DBB2     		uxtb	r3, r3
 1421 0030 1370     		strb	r3, [r2]
 1422              	.L66:
1962:.\Generated_Source\PSoC5/CapSense.c ****         }
1963:.\Generated_Source\PSoC5/CapSense.c ****     }
 1423              		.loc 1 1963 0
 1424 0032 0C37     		adds	r7, r7, #12
 1425              		.cfi_def_cfa_offset 4
 1426 0034 BD46     		mov	sp, r7
 1427              		.cfi_def_cfa_register 13
 1428              		@ sp needed
 1429 0036 5DF8047B 		ldr	r7, [sp], #4
 1430              		.cfi_restore 7
 1431              		.cfi_def_cfa_offset 0
 1432 003a 7047     		bx	lr
 1433              	.L70:
 1434              		.align	2
 1435              	.L69:
 1436 003c 7B650040 		.word	1073767803
 1437              		.cfi_endproc
 1438              	.LFE18:
 1439              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 1440              		.text
 1441              	.Letext0:
 1442              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1443              		.section	.debug_info,"",%progbits
 1444              	.Ldebug_info0:
 1445 0000 1D050000 		.4byte	0x51d
 1446 0004 0400     		.2byte	0x4
 1447 0006 00000000 		.4byte	.Ldebug_abbrev0
 1448 000a 04       		.byte	0x4
 1449 000b 01       		.uleb128 0x1
 1450 000c 7A020000 		.4byte	.LASF59
 1451 0010 01       		.byte	0x1
 1452 0011 69040000 		.4byte	.LASF60
 1453 0015 36010000 		.4byte	.LASF61
 1454 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 61


 1455 001d 00000000 		.4byte	0
 1456 0021 00000000 		.4byte	.Ldebug_line0
 1457 0025 02       		.uleb128 0x2
 1458 0026 01       		.byte	0x1
 1459 0027 06       		.byte	0x6
 1460 0028 8A000000 		.4byte	.LASF0
 1461 002c 02       		.uleb128 0x2
 1462 002d 01       		.byte	0x1
 1463 002e 08       		.byte	0x8
 1464 002f 62030000 		.4byte	.LASF1
 1465 0033 02       		.uleb128 0x2
 1466 0034 02       		.byte	0x2
 1467 0035 05       		.byte	0x5
 1468 0036 8A030000 		.4byte	.LASF2
 1469 003a 02       		.uleb128 0x2
 1470 003b 02       		.byte	0x2
 1471 003c 07       		.byte	0x7
 1472 003d D5010000 		.4byte	.LASF3
 1473 0041 02       		.uleb128 0x2
 1474 0042 04       		.byte	0x4
 1475 0043 05       		.byte	0x5
 1476 0044 B7000000 		.4byte	.LASF4
 1477 0048 02       		.uleb128 0x2
 1478 0049 04       		.byte	0x4
 1479 004a 07       		.byte	0x7
 1480 004b 9D010000 		.4byte	.LASF5
 1481 004f 02       		.uleb128 0x2
 1482 0050 08       		.byte	0x8
 1483 0051 05       		.byte	0x5
 1484 0052 7C000000 		.4byte	.LASF6
 1485 0056 02       		.uleb128 0x2
 1486 0057 08       		.byte	0x8
 1487 0058 07       		.byte	0x7
 1488 0059 3F000000 		.4byte	.LASF7
 1489 005d 03       		.uleb128 0x3
 1490 005e 04       		.byte	0x4
 1491 005f 05       		.byte	0x5
 1492 0060 696E7400 		.ascii	"int\000"
 1493 0064 02       		.uleb128 0x2
 1494 0065 04       		.byte	0x4
 1495 0066 07       		.byte	0x7
 1496 0067 7A010000 		.4byte	.LASF8
 1497 006b 04       		.uleb128 0x4
 1498 006c C0000000 		.4byte	.LASF9
 1499 0070 02       		.byte	0x2
 1500 0071 3801     		.2byte	0x138
 1501 0073 2C000000 		.4byte	0x2c
 1502 0077 04       		.uleb128 0x4
 1503 0078 00000000 		.4byte	.LASF10
 1504 007c 02       		.byte	0x2
 1505 007d 3901     		.2byte	0x139
 1506 007f 3A000000 		.4byte	0x3a
 1507 0083 04       		.uleb128 0x4
 1508 0084 10010000 		.4byte	.LASF11
 1509 0088 02       		.byte	0x2
 1510 0089 3A01     		.2byte	0x13a
 1511 008b 48000000 		.4byte	0x48
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 62


 1512 008f 02       		.uleb128 0x2
 1513 0090 04       		.byte	0x4
 1514 0091 04       		.byte	0x4
 1515 0092 1E030000 		.4byte	.LASF12
 1516 0096 02       		.uleb128 0x2
 1517 0097 08       		.byte	0x8
 1518 0098 04       		.byte	0x4
 1519 0099 C6000000 		.4byte	.LASF13
 1520 009d 02       		.uleb128 0x2
 1521 009e 01       		.byte	0x1
 1522 009f 08       		.byte	0x8
 1523 00a0 B1030000 		.4byte	.LASF14
 1524 00a4 04       		.uleb128 0x4
 1525 00a5 2E030000 		.4byte	.LASF15
 1526 00a9 02       		.byte	0x2
 1527 00aa E201     		.2byte	0x1e2
 1528 00ac B0000000 		.4byte	0xb0
 1529 00b0 05       		.uleb128 0x5
 1530 00b1 6B000000 		.4byte	0x6b
 1531 00b5 04       		.uleb128 0x4
 1532 00b6 1E020000 		.4byte	.LASF16
 1533 00ba 02       		.byte	0x2
 1534 00bb E401     		.2byte	0x1e4
 1535 00bd C1000000 		.4byte	0xc1
 1536 00c1 05       		.uleb128 0x5
 1537 00c2 83000000 		.4byte	0x83
 1538 00c6 02       		.uleb128 0x2
 1539 00c7 04       		.byte	0x4
 1540 00c8 07       		.byte	0x7
 1541 00c9 41020000 		.4byte	.LASF17
 1542 00cd 06       		.uleb128 0x6
 1543 00ce 2C040000 		.4byte	.LASF18
 1544 00d2 01       		.byte	0x1
 1545 00d3 76       		.byte	0x76
 1546 00d4 00000000 		.4byte	.LFB0
 1547 00d8 30010000 		.4byte	.LFE0-.LFB0
 1548 00dc 01       		.uleb128 0x1
 1549 00dd 9C       		.byte	0x9c
 1550 00de F1000000 		.4byte	0xf1
 1551 00e2 07       		.uleb128 0x7
 1552 00e3 ED030000 		.4byte	.LASF20
 1553 00e7 01       		.byte	0x1
 1554 00e8 7D       		.byte	0x7d
 1555 00e9 6B000000 		.4byte	0x6b
 1556 00ed 02       		.uleb128 0x2
 1557 00ee 91       		.byte	0x91
 1558 00ef 77       		.sleb128 -9
 1559 00f0 00       		.byte	0
 1560 00f1 08       		.uleb128 0x8
 1561 00f2 56000000 		.4byte	.LASF19
 1562 00f6 01       		.byte	0x1
 1563 00f7 5701     		.2byte	0x157
 1564 00f9 00000000 		.4byte	.LFB1
 1565 00fd 98000000 		.4byte	.LFE1-.LFB1
 1566 0101 01       		.uleb128 0x1
 1567 0102 9C       		.byte	0x9c
 1568 0103 17010000 		.4byte	0x117
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 63


 1569 0107 09       		.uleb128 0x9
 1570 0108 ED030000 		.4byte	.LASF20
 1571 010c 01       		.byte	0x1
 1572 010d 5901     		.2byte	0x159
 1573 010f 6B000000 		.4byte	0x6b
 1574 0113 02       		.uleb128 0x2
 1575 0114 91       		.byte	0x91
 1576 0115 77       		.sleb128 -9
 1577 0116 00       		.byte	0
 1578 0117 0A       		.uleb128 0xa
 1579 0118 CC030000 		.4byte	.LASF21
 1580 011c 01       		.byte	0x1
 1581 011d F001     		.2byte	0x1f0
 1582 011f 00000000 		.4byte	.LFB2
 1583 0123 20000000 		.4byte	.LFE2-.LFB2
 1584 0127 01       		.uleb128 0x1
 1585 0128 9C       		.byte	0x9c
 1586 0129 0A       		.uleb128 0xa
 1587 012a 5B020000 		.4byte	.LASF22
 1588 012e 01       		.byte	0x1
 1589 012f 1502     		.2byte	0x215
 1590 0131 00000000 		.4byte	.LFB3
 1591 0135 94000000 		.4byte	.LFE3-.LFB3
 1592 0139 01       		.uleb128 0x1
 1593 013a 9C       		.byte	0x9c
 1594 013b 0B       		.uleb128 0xb
 1595 013c 33030000 		.4byte	.LASF31
 1596 0140 01       		.byte	0x1
 1597 0141 9F02     		.2byte	0x29f
 1598 0143 6B000000 		.4byte	0x6b
 1599 0147 00000000 		.4byte	.LFB4
 1600 014b 50000000 		.4byte	.LFE4-.LFB4
 1601 014f 01       		.uleb128 0x1
 1602 0150 9C       		.byte	0x9c
 1603 0151 83010000 		.4byte	0x183
 1604 0155 0C       		.uleb128 0xc
 1605 0156 36000000 		.4byte	.LASF25
 1606 015a 01       		.byte	0x1
 1607 015b 9F02     		.2byte	0x29f
 1608 015d 6B000000 		.4byte	0x6b
 1609 0161 02       		.uleb128 0x2
 1610 0162 91       		.byte	0x91
 1611 0163 6F       		.sleb128 -17
 1612 0164 0D       		.uleb128 0xd
 1613 0165 706F7300 		.ascii	"pos\000"
 1614 0169 01       		.byte	0x1
 1615 016a A102     		.2byte	0x2a1
 1616 016c 6B000000 		.4byte	0x6b
 1617 0170 02       		.uleb128 0x2
 1618 0171 91       		.byte	0x91
 1619 0172 77       		.sleb128 -9
 1620 0173 09       		.uleb128 0x9
 1621 0174 73020000 		.4byte	.LASF23
 1622 0178 01       		.byte	0x1
 1623 0179 A202     		.2byte	0x2a2
 1624 017b 6B000000 		.4byte	0x6b
 1625 017f 02       		.uleb128 0x2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 64


 1626 0180 91       		.byte	0x91
 1627 0181 76       		.sleb128 -10
 1628 0182 00       		.byte	0
 1629 0183 08       		.uleb128 0x8
 1630 0184 FE030000 		.4byte	.LASF24
 1631 0188 01       		.byte	0x1
 1632 0189 3903     		.2byte	0x339
 1633 018b 00000000 		.4byte	.LFB5
 1634 018f 4C000000 		.4byte	.LFE5-.LFB5
 1635 0193 01       		.uleb128 0x1
 1636 0194 9C       		.byte	0x9c
 1637 0195 B8010000 		.4byte	0x1b8
 1638 0199 0C       		.uleb128 0xc
 1639 019a 09020000 		.4byte	.LASF26
 1640 019e 01       		.byte	0x1
 1641 019f 3903     		.2byte	0x339
 1642 01a1 6B000000 		.4byte	0x6b
 1643 01a5 02       		.uleb128 0x2
 1644 01a6 91       		.byte	0x91
 1645 01a7 6F       		.sleb128 -17
 1646 01a8 09       		.uleb128 0x9
 1647 01a9 94030000 		.4byte	.LASF27
 1648 01ad 01       		.byte	0x1
 1649 01ae 3B03     		.2byte	0x33b
 1650 01b0 6B000000 		.4byte	0x6b
 1651 01b4 02       		.uleb128 0x2
 1652 01b5 91       		.byte	0x91
 1653 01b6 77       		.sleb128 -9
 1654 01b7 00       		.byte	0
 1655 01b8 08       		.uleb128 0x8
 1656 01b9 66010000 		.4byte	.LASF28
 1657 01bd 01       		.byte	0x1
 1658 01be A903     		.2byte	0x3a9
 1659 01c0 00000000 		.4byte	.LFB6
 1660 01c4 34000000 		.4byte	.LFE6-.LFB6
 1661 01c8 01       		.uleb128 0x1
 1662 01c9 9C       		.byte	0x9c
 1663 01ca DE010000 		.4byte	0x1de
 1664 01ce 0C       		.uleb128 0xc
 1665 01cf E8010000 		.4byte	.LASF29
 1666 01d3 01       		.byte	0x1
 1667 01d4 A903     		.2byte	0x3a9
 1668 01d6 6B000000 		.4byte	0x6b
 1669 01da 02       		.uleb128 0x2
 1670 01db 91       		.byte	0x91
 1671 01dc 77       		.sleb128 -9
 1672 01dd 00       		.byte	0
 1673 01de 0A       		.uleb128 0xa
 1674 01df 4D040000 		.4byte	.LASF30
 1675 01e3 01       		.byte	0x1
 1676 01e4 F603     		.2byte	0x3f6
 1677 01e6 00000000 		.4byte	.LFB7
 1678 01ea 54000000 		.4byte	.LFE7-.LFB7
 1679 01ee 01       		.uleb128 0x1
 1680 01ef 9C       		.byte	0x9c
 1681 01f0 0E       		.uleb128 0xe
 1682 01f1 0E020000 		.4byte	.LASF62
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 65


 1683 01f5 01       		.byte	0x1
 1684 01f6 2B04     		.2byte	0x42b
 1685 01f8 6B000000 		.4byte	0x6b
 1686 01fc 00000000 		.4byte	.LFB8
 1687 0200 20000000 		.4byte	.LFE8-.LFB8
 1688 0204 01       		.uleb128 0x1
 1689 0205 9C       		.byte	0x9c
 1690 0206 0B       		.uleb128 0xb
 1691 0207 F9000000 		.4byte	.LASF32
 1692 020b 01       		.byte	0x1
 1693 020c 4404     		.2byte	0x444
 1694 020e 77000000 		.4byte	0x77
 1695 0212 00000000 		.4byte	.LFB9
 1696 0216 24000000 		.4byte	.LFE9-.LFB9
 1697 021a 01       		.uleb128 0x1
 1698 021b 9C       		.byte	0x9c
 1699 021c 30020000 		.4byte	0x230
 1700 0220 0C       		.uleb128 0xc
 1701 0221 E8010000 		.4byte	.LASF29
 1702 0225 01       		.byte	0x1
 1703 0226 4404     		.2byte	0x444
 1704 0228 6B000000 		.4byte	0x6b
 1705 022c 02       		.uleb128 0x2
 1706 022d 91       		.byte	0x91
 1707 022e 77       		.sleb128 -9
 1708 022f 00       		.byte	0
 1709 0230 08       		.uleb128 0x8
 1710 0231 87010000 		.4byte	.LASF33
 1711 0235 01       		.byte	0x1
 1712 0236 5904     		.2byte	0x459
 1713 0238 00000000 		.4byte	.LFB10
 1714 023c 26000000 		.4byte	.LFE10-.LFB10
 1715 0240 01       		.uleb128 0x1
 1716 0241 9C       		.byte	0x9c
 1717 0242 54020000 		.4byte	0x254
 1718 0246 0D       		.uleb128 0xd
 1719 0247 6900     		.ascii	"i\000"
 1720 0249 01       		.byte	0x1
 1721 024a 5B04     		.2byte	0x45b
 1722 024c 6B000000 		.4byte	0x6b
 1723 0250 02       		.uleb128 0x2
 1724 0251 91       		.byte	0x91
 1725 0252 77       		.sleb128 -9
 1726 0253 00       		.byte	0
 1727 0254 08       		.uleb128 0x8
 1728 0255 CD000000 		.4byte	.LASF34
 1729 0259 01       		.byte	0x1
 1730 025a EF04     		.2byte	0x4ef
 1731 025c 00000000 		.4byte	.LFB11
 1732 0260 68000000 		.4byte	.LFE11-.LFB11
 1733 0264 01       		.uleb128 0x1
 1734 0265 9C       		.byte	0x9c
 1735 0266 98020000 		.4byte	0x298
 1736 026a 0C       		.uleb128 0xc
 1737 026b E8010000 		.4byte	.LASF29
 1738 026f 01       		.byte	0x1
 1739 0270 EF04     		.2byte	0x4ef
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 66


 1740 0272 6B000000 		.4byte	0x6b
 1741 0276 02       		.uleb128 0x2
 1742 0277 91       		.byte	0x91
 1743 0278 6F       		.sleb128 -17
 1744 0279 09       		.uleb128 0x9
 1745 027a 1C010000 		.4byte	.LASF35
 1746 027e 01       		.byte	0x1
 1747 027f F104     		.2byte	0x4f1
 1748 0281 6B000000 		.4byte	0x6b
 1749 0285 02       		.uleb128 0x2
 1750 0286 91       		.byte	0x91
 1751 0287 77       		.sleb128 -9
 1752 0288 09       		.uleb128 0x9
 1753 0289 17010000 		.4byte	.LASF36
 1754 028d 01       		.byte	0x1
 1755 028e F204     		.2byte	0x4f2
 1756 0290 6B000000 		.4byte	0x6b
 1757 0294 02       		.uleb128 0x2
 1758 0295 91       		.byte	0x91
 1759 0296 76       		.sleb128 -10
 1760 0297 00       		.byte	0
 1761 0298 08       		.uleb128 0x8
 1762 0299 4B030000 		.4byte	.LASF37
 1763 029d 01       		.byte	0x1
 1764 029e 4405     		.2byte	0x544
 1765 02a0 00000000 		.4byte	.LFB12
 1766 02a4 6C000000 		.4byte	.LFE12-.LFB12
 1767 02a8 01       		.uleb128 0x1
 1768 02a9 9C       		.byte	0x9c
 1769 02aa DC020000 		.4byte	0x2dc
 1770 02ae 0C       		.uleb128 0xc
 1771 02af E8010000 		.4byte	.LASF29
 1772 02b3 01       		.byte	0x1
 1773 02b4 4405     		.2byte	0x544
 1774 02b6 6B000000 		.4byte	0x6b
 1775 02ba 02       		.uleb128 0x2
 1776 02bb 91       		.byte	0x91
 1777 02bc 6F       		.sleb128 -17
 1778 02bd 09       		.uleb128 0x9
 1779 02be 1C010000 		.4byte	.LASF35
 1780 02c2 01       		.byte	0x1
 1781 02c3 4605     		.2byte	0x546
 1782 02c5 6B000000 		.4byte	0x6b
 1783 02c9 02       		.uleb128 0x2
 1784 02ca 91       		.byte	0x91
 1785 02cb 77       		.sleb128 -9
 1786 02cc 09       		.uleb128 0x9
 1787 02cd 17010000 		.4byte	.LASF36
 1788 02d1 01       		.byte	0x1
 1789 02d2 4705     		.2byte	0x547
 1790 02d4 6B000000 		.4byte	0x6b
 1791 02d8 02       		.uleb128 0x2
 1792 02d9 91       		.byte	0x91
 1793 02da 76       		.sleb128 -10
 1794 02db 00       		.byte	0
 1795 02dc 08       		.uleb128 0x8
 1796 02dd 1B040000 		.4byte	.LASF38
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 67


 1797 02e1 01       		.byte	0x1
 1798 02e2 9805     		.2byte	0x598
 1799 02e4 00000000 		.4byte	.LFB13
 1800 02e8 58000000 		.4byte	.LFE13-.LFB13
 1801 02ec 01       		.uleb128 0x1
 1802 02ed 9C       		.byte	0x9c
 1803 02ee 02030000 		.4byte	0x302
 1804 02f2 0C       		.uleb128 0xc
 1805 02f3 E8010000 		.4byte	.LASF29
 1806 02f7 01       		.byte	0x1
 1807 02f8 9805     		.2byte	0x598
 1808 02fa 6B000000 		.4byte	0x6b
 1809 02fe 02       		.uleb128 0x2
 1810 02ff 91       		.byte	0x91
 1811 0300 77       		.sleb128 -9
 1812 0301 00       		.byte	0
 1813 0302 08       		.uleb128 0x8
 1814 0303 DB030000 		.4byte	.LASF39
 1815 0307 01       		.byte	0x1
 1816 0308 3806     		.2byte	0x638
 1817 030a 00000000 		.4byte	.LFB14
 1818 030e 98000000 		.4byte	.LFE14-.LFB14
 1819 0312 01       		.uleb128 0x1
 1820 0313 9C       		.byte	0x9c
 1821 0314 28030000 		.4byte	0x328
 1822 0318 0C       		.uleb128 0xc
 1823 0319 E8010000 		.4byte	.LASF29
 1824 031d 01       		.byte	0x1
 1825 031e 3806     		.2byte	0x638
 1826 0320 6B000000 		.4byte	0x6b
 1827 0324 02       		.uleb128 0x2
 1828 0325 91       		.byte	0x91
 1829 0326 77       		.sleb128 -9
 1830 0327 00       		.byte	0
 1831 0328 0F       		.uleb128 0xf
 1832 0329 66000000 		.4byte	.LASF40
 1833 032d 01       		.byte	0x1
 1834 032e 4607     		.2byte	0x746
 1835 0330 00000000 		.4byte	.LFB15
 1836 0334 2C000000 		.4byte	.LFE15-.LFB15
 1837 0338 01       		.uleb128 0x1
 1838 0339 9C       		.byte	0x9c
 1839 033a 4E030000 		.4byte	0x34e
 1840 033e 0C       		.uleb128 0xc
 1841 033f 24030000 		.4byte	.LASF41
 1842 0343 01       		.byte	0x1
 1843 0344 4607     		.2byte	0x746
 1844 0346 6B000000 		.4byte	0x6b
 1845 034a 02       		.uleb128 0x2
 1846 034b 91       		.byte	0x91
 1847 034c 77       		.sleb128 -9
 1848 034d 00       		.byte	0
 1849 034e 0B       		.uleb128 0xb
 1850 034f 9B030000 		.4byte	.LASF42
 1851 0353 01       		.byte	0x1
 1852 0354 6307     		.2byte	0x763
 1853 0356 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 68


 1854 035a 00000000 		.4byte	.LFB16
 1855 035e 24000000 		.4byte	.LFE16-.LFB16
 1856 0362 01       		.uleb128 0x1
 1857 0363 9C       		.byte	0x9c
 1858 0364 78030000 		.4byte	0x378
 1859 0368 09       		.uleb128 0x9
 1860 0369 24030000 		.4byte	.LASF41
 1861 036d 01       		.byte	0x1
 1862 036e 6507     		.2byte	0x765
 1863 0370 6B000000 		.4byte	0x6b
 1864 0374 02       		.uleb128 0x2
 1865 0375 91       		.byte	0x91
 1866 0376 77       		.sleb128 -9
 1867 0377 00       		.byte	0
 1868 0378 0F       		.uleb128 0xf
 1869 0379 B6030000 		.4byte	.LASF43
 1870 037d 01       		.byte	0x1
 1871 037e 8507     		.2byte	0x785
 1872 0380 00000000 		.4byte	.LFB17
 1873 0384 20000000 		.4byte	.LFE17-.LFB17
 1874 0388 01       		.uleb128 0x1
 1875 0389 9C       		.byte	0x9c
 1876 038a 9E030000 		.4byte	0x39e
 1877 038e 0C       		.uleb128 0xc
 1878 038f 69020000 		.4byte	.LASF44
 1879 0393 01       		.byte	0x1
 1880 0394 8507     		.2byte	0x785
 1881 0396 6B000000 		.4byte	0x6b
 1882 039a 02       		.uleb128 0x2
 1883 039b 91       		.byte	0x91
 1884 039c 77       		.sleb128 -9
 1885 039d 00       		.byte	0
 1886 039e 0F       		.uleb128 0xf
 1887 039f 96000000 		.4byte	.LASF45
 1888 03a3 01       		.byte	0x1
 1889 03a4 A007     		.2byte	0x7a0
 1890 03a6 00000000 		.4byte	.LFB18
 1891 03aa 40000000 		.4byte	.LFE18-.LFB18
 1892 03ae 01       		.uleb128 0x1
 1893 03af 9C       		.byte	0x9c
 1894 03b0 C4030000 		.4byte	0x3c4
 1895 03b4 10       		.uleb128 0x10
 1896 03b5 73726300 		.ascii	"src\000"
 1897 03b9 01       		.byte	0x1
 1898 03ba A007     		.2byte	0x7a0
 1899 03bc 6B000000 		.4byte	0x6b
 1900 03c0 02       		.uleb128 0x2
 1901 03c1 91       		.byte	0x91
 1902 03c2 77       		.sleb128 -9
 1903 03c3 00       		.byte	0
 1904 03c4 07       		.uleb128 0x7
 1905 03c5 14000000 		.4byte	.LASF46
 1906 03c9 01       		.byte	0x1
 1907 03ca 15       		.byte	0x15
 1908 03cb 6B000000 		.4byte	0x6b
 1909 03cf 05       		.uleb128 0x5
 1910 03d0 03       		.byte	0x3
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 69


 1911 03d1 00000000 		.4byte	CapSense_initVar
 1912 03d5 11       		.uleb128 0x11
 1913 03d6 07000000 		.4byte	.LASF47
 1914 03da 01       		.byte	0x1
 1915 03db 18       		.byte	0x18
 1916 03dc B0000000 		.4byte	0xb0
 1917 03e0 05       		.uleb128 0x5
 1918 03e1 03       		.byte	0x3
 1919 03e2 00000000 		.4byte	CapSense_csv
 1920 03e6 11       		.uleb128 0x11
 1921 03e7 21010000 		.4byte	.LASF48
 1922 03eb 01       		.byte	0x1
 1923 03ec 19       		.byte	0x19
 1924 03ed B0000000 		.4byte	0xb0
 1925 03f1 05       		.uleb128 0x5
 1926 03f2 03       		.byte	0x3
 1927 03f3 00000000 		.4byte	CapSense_sensorIndex
 1928 03f7 12       		.uleb128 0x12
 1929 03f8 77000000 		.4byte	0x77
 1930 03fc 07040000 		.4byte	0x407
 1931 0400 13       		.uleb128 0x13
 1932 0401 C6000000 		.4byte	0xc6
 1933 0405 06       		.byte	0x6
 1934 0406 00       		.byte	0
 1935 0407 11       		.uleb128 0x11
 1936 0408 3A040000 		.4byte	.LASF49
 1937 040c 01       		.byte	0x1
 1938 040d 28       		.byte	0x28
 1939 040e F7030000 		.4byte	0x3f7
 1940 0412 05       		.uleb128 0x5
 1941 0413 03       		.byte	0x3
 1942 0414 00000000 		.4byte	CapSense_sensorRaw
 1943 0418 12       		.uleb128 0x12
 1944 0419 6B000000 		.4byte	0x6b
 1945 041d 28040000 		.4byte	0x428
 1946 0421 13       		.uleb128 0x13
 1947 0422 C6000000 		.4byte	0xc6
 1948 0426 00       		.byte	0
 1949 0427 00       		.byte	0
 1950 0428 11       		.uleb128 0x11
 1951 0429 EF010000 		.4byte	.LASF50
 1952 042d 01       		.byte	0x1
 1953 042e 2A       		.byte	0x2a
 1954 042f 18040000 		.4byte	0x418
 1955 0433 05       		.uleb128 0x5
 1956 0434 03       		.byte	0x3
 1957 0435 00000000 		.4byte	CapSense_sensorEnableMask
 1958 0439 12       		.uleb128 0x12
 1959 043a 49040000 		.4byte	0x449
 1960 043e 49040000 		.4byte	0x449
 1961 0442 13       		.uleb128 0x13
 1962 0443 C6000000 		.4byte	0xc6
 1963 0447 06       		.byte	0x6
 1964 0448 00       		.byte	0
 1965 0449 14       		.uleb128 0x14
 1966 044a 04       		.byte	0x4
 1967 044b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 70


 1968 044f 11       		.uleb128 0x11
 1969 0450 25000000 		.4byte	.LASF51
 1970 0454 01       		.byte	0x1
 1971 0455 2D       		.byte	0x2d
 1972 0456 60040000 		.4byte	0x460
 1973 045a 05       		.uleb128 0x5
 1974 045b 03       		.byte	0x3
 1975 045c 00000000 		.4byte	CapSense_pcTable
 1976 0460 15       		.uleb128 0x15
 1977 0461 39040000 		.4byte	0x439
 1978 0465 12       		.uleb128 0x12
 1979 0466 6B000000 		.4byte	0x6b
 1980 046a 75040000 		.4byte	0x475
 1981 046e 13       		.uleb128 0x13
 1982 046f C6000000 		.4byte	0xc6
 1983 0473 06       		.byte	0x6
 1984 0474 00       		.byte	0
 1985 0475 11       		.uleb128 0x11
 1986 0476 C2010000 		.4byte	.LASF52
 1987 047a 01       		.byte	0x1
 1988 047b 37       		.byte	0x37
 1989 047c 86040000 		.4byte	0x486
 1990 0480 05       		.uleb128 0x5
 1991 0481 03       		.byte	0x3
 1992 0482 00000000 		.4byte	CapSense_portTable
 1993 0486 15       		.uleb128 0x15
 1994 0487 65040000 		.4byte	0x465
 1995 048b 11       		.uleb128 0x11
 1996 048c AF010000 		.4byte	.LASF53
 1997 0490 01       		.byte	0x1
 1998 0491 41       		.byte	0x41
 1999 0492 9C040000 		.4byte	0x49c
 2000 0496 05       		.uleb128 0x5
 2001 0497 03       		.byte	0x3
 2002 0498 00000000 		.4byte	CapSense_maskTable
 2003 049c 15       		.uleb128 0x15
 2004 049d 65040000 		.4byte	0x465
 2005 04a1 12       		.uleb128 0x12
 2006 04a2 49040000 		.4byte	0x449
 2007 04a6 B1040000 		.4byte	0x4b1
 2008 04aa 13       		.uleb128 0x13
 2009 04ab C6000000 		.4byte	0xc6
 2010 04af 07       		.byte	0x7
 2011 04b0 00       		.byte	0
 2012 04b1 11       		.uleb128 0x11
 2013 04b2 4A020000 		.4byte	.LASF54
 2014 04b6 01       		.byte	0x1
 2015 04b7 4B       		.byte	0x4b
 2016 04b8 C2040000 		.4byte	0x4c2
 2017 04bc 05       		.uleb128 0x5
 2018 04bd 03       		.byte	0x3
 2019 04be 00000000 		.4byte	CapSense_csTable
 2020 04c2 15       		.uleb128 0x15
 2021 04c3 A1040000 		.4byte	0x4a1
 2022 04c7 11       		.uleb128 0x11
 2023 04c8 08030000 		.4byte	.LASF55
 2024 04cc 01       		.byte	0x1
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 71


 2025 04cd 51       		.byte	0x51
 2026 04ce 65040000 		.4byte	0x465
 2027 04d2 05       		.uleb128 0x5
 2028 04d3 03       		.byte	0x3
 2029 04d4 00000000 		.4byte	CapSense_idacSettings
 2030 04d8 12       		.uleb128 0x12
 2031 04d9 6B000000 		.4byte	0x6b
 2032 04dd E8040000 		.4byte	0x4e8
 2033 04e1 13       		.uleb128 0x13
 2034 04e2 C6000000 		.4byte	0xc6
 2035 04e6 02       		.byte	0x2
 2036 04e7 00       		.byte	0
 2037 04e8 11       		.uleb128 0x11
 2038 04e9 70030000 		.4byte	.LASF56
 2039 04ed 01       		.byte	0x1
 2040 04ee 55       		.byte	0x55
 2041 04ef D8040000 		.4byte	0x4d8
 2042 04f3 05       		.uleb128 0x5
 2043 04f4 03       		.byte	0x3
 2044 04f5 00000000 		.4byte	CapSense_widgetResolution
 2045 04f9 11       		.uleb128 0x11
 2046 04fa 24020000 		.4byte	.LASF57
 2047 04fe 01       		.byte	0x1
 2048 04ff 5B       		.byte	0x5b
 2049 0500 6B000000 		.4byte	0x6b
 2050 0504 05       		.uleb128 0x5
 2051 0505 03       		.byte	0x3
 2052 0506 00000000 		.4byte	CapSense_analogSwitchDivider
 2053 050a 11       		.uleb128 0x11
 2054 050b E3000000 		.4byte	.LASF58
 2055 050f 01       		.byte	0x1
 2056 0510 5D       		.byte	0x5d
 2057 0511 1B050000 		.4byte	0x51b
 2058 0515 05       		.uleb128 0x5
 2059 0516 03       		.byte	0x3
 2060 0517 00000000 		.4byte	CapSense_widgetNumber
 2061 051b 15       		.uleb128 0x15
 2062 051c 65040000 		.4byte	0x465
 2063 0520 00       		.byte	0
 2064              		.section	.debug_abbrev,"",%progbits
 2065              	.Ldebug_abbrev0:
 2066 0000 01       		.uleb128 0x1
 2067 0001 11       		.uleb128 0x11
 2068 0002 01       		.byte	0x1
 2069 0003 25       		.uleb128 0x25
 2070 0004 0E       		.uleb128 0xe
 2071 0005 13       		.uleb128 0x13
 2072 0006 0B       		.uleb128 0xb
 2073 0007 03       		.uleb128 0x3
 2074 0008 0E       		.uleb128 0xe
 2075 0009 1B       		.uleb128 0x1b
 2076 000a 0E       		.uleb128 0xe
 2077 000b 55       		.uleb128 0x55
 2078 000c 17       		.uleb128 0x17
 2079 000d 11       		.uleb128 0x11
 2080 000e 01       		.uleb128 0x1
 2081 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 72


 2082 0010 17       		.uleb128 0x17
 2083 0011 00       		.byte	0
 2084 0012 00       		.byte	0
 2085 0013 02       		.uleb128 0x2
 2086 0014 24       		.uleb128 0x24
 2087 0015 00       		.byte	0
 2088 0016 0B       		.uleb128 0xb
 2089 0017 0B       		.uleb128 0xb
 2090 0018 3E       		.uleb128 0x3e
 2091 0019 0B       		.uleb128 0xb
 2092 001a 03       		.uleb128 0x3
 2093 001b 0E       		.uleb128 0xe
 2094 001c 00       		.byte	0
 2095 001d 00       		.byte	0
 2096 001e 03       		.uleb128 0x3
 2097 001f 24       		.uleb128 0x24
 2098 0020 00       		.byte	0
 2099 0021 0B       		.uleb128 0xb
 2100 0022 0B       		.uleb128 0xb
 2101 0023 3E       		.uleb128 0x3e
 2102 0024 0B       		.uleb128 0xb
 2103 0025 03       		.uleb128 0x3
 2104 0026 08       		.uleb128 0x8
 2105 0027 00       		.byte	0
 2106 0028 00       		.byte	0
 2107 0029 04       		.uleb128 0x4
 2108 002a 16       		.uleb128 0x16
 2109 002b 00       		.byte	0
 2110 002c 03       		.uleb128 0x3
 2111 002d 0E       		.uleb128 0xe
 2112 002e 3A       		.uleb128 0x3a
 2113 002f 0B       		.uleb128 0xb
 2114 0030 3B       		.uleb128 0x3b
 2115 0031 05       		.uleb128 0x5
 2116 0032 49       		.uleb128 0x49
 2117 0033 13       		.uleb128 0x13
 2118 0034 00       		.byte	0
 2119 0035 00       		.byte	0
 2120 0036 05       		.uleb128 0x5
 2121 0037 35       		.uleb128 0x35
 2122 0038 00       		.byte	0
 2123 0039 49       		.uleb128 0x49
 2124 003a 13       		.uleb128 0x13
 2125 003b 00       		.byte	0
 2126 003c 00       		.byte	0
 2127 003d 06       		.uleb128 0x6
 2128 003e 2E       		.uleb128 0x2e
 2129 003f 01       		.byte	0x1
 2130 0040 3F       		.uleb128 0x3f
 2131 0041 19       		.uleb128 0x19
 2132 0042 03       		.uleb128 0x3
 2133 0043 0E       		.uleb128 0xe
 2134 0044 3A       		.uleb128 0x3a
 2135 0045 0B       		.uleb128 0xb
 2136 0046 3B       		.uleb128 0x3b
 2137 0047 0B       		.uleb128 0xb
 2138 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 73


 2139 0049 19       		.uleb128 0x19
 2140 004a 11       		.uleb128 0x11
 2141 004b 01       		.uleb128 0x1
 2142 004c 12       		.uleb128 0x12
 2143 004d 06       		.uleb128 0x6
 2144 004e 40       		.uleb128 0x40
 2145 004f 18       		.uleb128 0x18
 2146 0050 9642     		.uleb128 0x2116
 2147 0052 19       		.uleb128 0x19
 2148 0053 01       		.uleb128 0x1
 2149 0054 13       		.uleb128 0x13
 2150 0055 00       		.byte	0
 2151 0056 00       		.byte	0
 2152 0057 07       		.uleb128 0x7
 2153 0058 34       		.uleb128 0x34
 2154 0059 00       		.byte	0
 2155 005a 03       		.uleb128 0x3
 2156 005b 0E       		.uleb128 0xe
 2157 005c 3A       		.uleb128 0x3a
 2158 005d 0B       		.uleb128 0xb
 2159 005e 3B       		.uleb128 0x3b
 2160 005f 0B       		.uleb128 0xb
 2161 0060 49       		.uleb128 0x49
 2162 0061 13       		.uleb128 0x13
 2163 0062 02       		.uleb128 0x2
 2164 0063 18       		.uleb128 0x18
 2165 0064 00       		.byte	0
 2166 0065 00       		.byte	0
 2167 0066 08       		.uleb128 0x8
 2168 0067 2E       		.uleb128 0x2e
 2169 0068 01       		.byte	0x1
 2170 0069 3F       		.uleb128 0x3f
 2171 006a 19       		.uleb128 0x19
 2172 006b 03       		.uleb128 0x3
 2173 006c 0E       		.uleb128 0xe
 2174 006d 3A       		.uleb128 0x3a
 2175 006e 0B       		.uleb128 0xb
 2176 006f 3B       		.uleb128 0x3b
 2177 0070 05       		.uleb128 0x5
 2178 0071 27       		.uleb128 0x27
 2179 0072 19       		.uleb128 0x19
 2180 0073 11       		.uleb128 0x11
 2181 0074 01       		.uleb128 0x1
 2182 0075 12       		.uleb128 0x12
 2183 0076 06       		.uleb128 0x6
 2184 0077 40       		.uleb128 0x40
 2185 0078 18       		.uleb128 0x18
 2186 0079 9642     		.uleb128 0x2116
 2187 007b 19       		.uleb128 0x19
 2188 007c 01       		.uleb128 0x1
 2189 007d 13       		.uleb128 0x13
 2190 007e 00       		.byte	0
 2191 007f 00       		.byte	0
 2192 0080 09       		.uleb128 0x9
 2193 0081 34       		.uleb128 0x34
 2194 0082 00       		.byte	0
 2195 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 74


 2196 0084 0E       		.uleb128 0xe
 2197 0085 3A       		.uleb128 0x3a
 2198 0086 0B       		.uleb128 0xb
 2199 0087 3B       		.uleb128 0x3b
 2200 0088 05       		.uleb128 0x5
 2201 0089 49       		.uleb128 0x49
 2202 008a 13       		.uleb128 0x13
 2203 008b 02       		.uleb128 0x2
 2204 008c 18       		.uleb128 0x18
 2205 008d 00       		.byte	0
 2206 008e 00       		.byte	0
 2207 008f 0A       		.uleb128 0xa
 2208 0090 2E       		.uleb128 0x2e
 2209 0091 00       		.byte	0
 2210 0092 3F       		.uleb128 0x3f
 2211 0093 19       		.uleb128 0x19
 2212 0094 03       		.uleb128 0x3
 2213 0095 0E       		.uleb128 0xe
 2214 0096 3A       		.uleb128 0x3a
 2215 0097 0B       		.uleb128 0xb
 2216 0098 3B       		.uleb128 0x3b
 2217 0099 05       		.uleb128 0x5
 2218 009a 27       		.uleb128 0x27
 2219 009b 19       		.uleb128 0x19
 2220 009c 11       		.uleb128 0x11
 2221 009d 01       		.uleb128 0x1
 2222 009e 12       		.uleb128 0x12
 2223 009f 06       		.uleb128 0x6
 2224 00a0 40       		.uleb128 0x40
 2225 00a1 18       		.uleb128 0x18
 2226 00a2 9642     		.uleb128 0x2116
 2227 00a4 19       		.uleb128 0x19
 2228 00a5 00       		.byte	0
 2229 00a6 00       		.byte	0
 2230 00a7 0B       		.uleb128 0xb
 2231 00a8 2E       		.uleb128 0x2e
 2232 00a9 01       		.byte	0x1
 2233 00aa 3F       		.uleb128 0x3f
 2234 00ab 19       		.uleb128 0x19
 2235 00ac 03       		.uleb128 0x3
 2236 00ad 0E       		.uleb128 0xe
 2237 00ae 3A       		.uleb128 0x3a
 2238 00af 0B       		.uleb128 0xb
 2239 00b0 3B       		.uleb128 0x3b
 2240 00b1 05       		.uleb128 0x5
 2241 00b2 27       		.uleb128 0x27
 2242 00b3 19       		.uleb128 0x19
 2243 00b4 49       		.uleb128 0x49
 2244 00b5 13       		.uleb128 0x13
 2245 00b6 11       		.uleb128 0x11
 2246 00b7 01       		.uleb128 0x1
 2247 00b8 12       		.uleb128 0x12
 2248 00b9 06       		.uleb128 0x6
 2249 00ba 40       		.uleb128 0x40
 2250 00bb 18       		.uleb128 0x18
 2251 00bc 9742     		.uleb128 0x2117
 2252 00be 19       		.uleb128 0x19
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 75


 2253 00bf 01       		.uleb128 0x1
 2254 00c0 13       		.uleb128 0x13
 2255 00c1 00       		.byte	0
 2256 00c2 00       		.byte	0
 2257 00c3 0C       		.uleb128 0xc
 2258 00c4 05       		.uleb128 0x5
 2259 00c5 00       		.byte	0
 2260 00c6 03       		.uleb128 0x3
 2261 00c7 0E       		.uleb128 0xe
 2262 00c8 3A       		.uleb128 0x3a
 2263 00c9 0B       		.uleb128 0xb
 2264 00ca 3B       		.uleb128 0x3b
 2265 00cb 05       		.uleb128 0x5
 2266 00cc 49       		.uleb128 0x49
 2267 00cd 13       		.uleb128 0x13
 2268 00ce 02       		.uleb128 0x2
 2269 00cf 18       		.uleb128 0x18
 2270 00d0 00       		.byte	0
 2271 00d1 00       		.byte	0
 2272 00d2 0D       		.uleb128 0xd
 2273 00d3 34       		.uleb128 0x34
 2274 00d4 00       		.byte	0
 2275 00d5 03       		.uleb128 0x3
 2276 00d6 08       		.uleb128 0x8
 2277 00d7 3A       		.uleb128 0x3a
 2278 00d8 0B       		.uleb128 0xb
 2279 00d9 3B       		.uleb128 0x3b
 2280 00da 05       		.uleb128 0x5
 2281 00db 49       		.uleb128 0x49
 2282 00dc 13       		.uleb128 0x13
 2283 00dd 02       		.uleb128 0x2
 2284 00de 18       		.uleb128 0x18
 2285 00df 00       		.byte	0
 2286 00e0 00       		.byte	0
 2287 00e1 0E       		.uleb128 0xe
 2288 00e2 2E       		.uleb128 0x2e
 2289 00e3 00       		.byte	0
 2290 00e4 3F       		.uleb128 0x3f
 2291 00e5 19       		.uleb128 0x19
 2292 00e6 03       		.uleb128 0x3
 2293 00e7 0E       		.uleb128 0xe
 2294 00e8 3A       		.uleb128 0x3a
 2295 00e9 0B       		.uleb128 0xb
 2296 00ea 3B       		.uleb128 0x3b
 2297 00eb 05       		.uleb128 0x5
 2298 00ec 27       		.uleb128 0x27
 2299 00ed 19       		.uleb128 0x19
 2300 00ee 49       		.uleb128 0x49
 2301 00ef 13       		.uleb128 0x13
 2302 00f0 11       		.uleb128 0x11
 2303 00f1 01       		.uleb128 0x1
 2304 00f2 12       		.uleb128 0x12
 2305 00f3 06       		.uleb128 0x6
 2306 00f4 40       		.uleb128 0x40
 2307 00f5 18       		.uleb128 0x18
 2308 00f6 9742     		.uleb128 0x2117
 2309 00f8 19       		.uleb128 0x19
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 76


 2310 00f9 00       		.byte	0
 2311 00fa 00       		.byte	0
 2312 00fb 0F       		.uleb128 0xf
 2313 00fc 2E       		.uleb128 0x2e
 2314 00fd 01       		.byte	0x1
 2315 00fe 3F       		.uleb128 0x3f
 2316 00ff 19       		.uleb128 0x19
 2317 0100 03       		.uleb128 0x3
 2318 0101 0E       		.uleb128 0xe
 2319 0102 3A       		.uleb128 0x3a
 2320 0103 0B       		.uleb128 0xb
 2321 0104 3B       		.uleb128 0x3b
 2322 0105 05       		.uleb128 0x5
 2323 0106 27       		.uleb128 0x27
 2324 0107 19       		.uleb128 0x19
 2325 0108 11       		.uleb128 0x11
 2326 0109 01       		.uleb128 0x1
 2327 010a 12       		.uleb128 0x12
 2328 010b 06       		.uleb128 0x6
 2329 010c 40       		.uleb128 0x40
 2330 010d 18       		.uleb128 0x18
 2331 010e 9742     		.uleb128 0x2117
 2332 0110 19       		.uleb128 0x19
 2333 0111 01       		.uleb128 0x1
 2334 0112 13       		.uleb128 0x13
 2335 0113 00       		.byte	0
 2336 0114 00       		.byte	0
 2337 0115 10       		.uleb128 0x10
 2338 0116 05       		.uleb128 0x5
 2339 0117 00       		.byte	0
 2340 0118 03       		.uleb128 0x3
 2341 0119 08       		.uleb128 0x8
 2342 011a 3A       		.uleb128 0x3a
 2343 011b 0B       		.uleb128 0xb
 2344 011c 3B       		.uleb128 0x3b
 2345 011d 05       		.uleb128 0x5
 2346 011e 49       		.uleb128 0x49
 2347 011f 13       		.uleb128 0x13
 2348 0120 02       		.uleb128 0x2
 2349 0121 18       		.uleb128 0x18
 2350 0122 00       		.byte	0
 2351 0123 00       		.byte	0
 2352 0124 11       		.uleb128 0x11
 2353 0125 34       		.uleb128 0x34
 2354 0126 00       		.byte	0
 2355 0127 03       		.uleb128 0x3
 2356 0128 0E       		.uleb128 0xe
 2357 0129 3A       		.uleb128 0x3a
 2358 012a 0B       		.uleb128 0xb
 2359 012b 3B       		.uleb128 0x3b
 2360 012c 0B       		.uleb128 0xb
 2361 012d 49       		.uleb128 0x49
 2362 012e 13       		.uleb128 0x13
 2363 012f 3F       		.uleb128 0x3f
 2364 0130 19       		.uleb128 0x19
 2365 0131 02       		.uleb128 0x2
 2366 0132 18       		.uleb128 0x18
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 77


 2367 0133 00       		.byte	0
 2368 0134 00       		.byte	0
 2369 0135 12       		.uleb128 0x12
 2370 0136 01       		.uleb128 0x1
 2371 0137 01       		.byte	0x1
 2372 0138 49       		.uleb128 0x49
 2373 0139 13       		.uleb128 0x13
 2374 013a 01       		.uleb128 0x1
 2375 013b 13       		.uleb128 0x13
 2376 013c 00       		.byte	0
 2377 013d 00       		.byte	0
 2378 013e 13       		.uleb128 0x13
 2379 013f 21       		.uleb128 0x21
 2380 0140 00       		.byte	0
 2381 0141 49       		.uleb128 0x49
 2382 0142 13       		.uleb128 0x13
 2383 0143 2F       		.uleb128 0x2f
 2384 0144 0B       		.uleb128 0xb
 2385 0145 00       		.byte	0
 2386 0146 00       		.byte	0
 2387 0147 14       		.uleb128 0x14
 2388 0148 0F       		.uleb128 0xf
 2389 0149 00       		.byte	0
 2390 014a 0B       		.uleb128 0xb
 2391 014b 0B       		.uleb128 0xb
 2392 014c 49       		.uleb128 0x49
 2393 014d 13       		.uleb128 0x13
 2394 014e 00       		.byte	0
 2395 014f 00       		.byte	0
 2396 0150 15       		.uleb128 0x15
 2397 0151 26       		.uleb128 0x26
 2398 0152 00       		.byte	0
 2399 0153 49       		.uleb128 0x49
 2400 0154 13       		.uleb128 0x13
 2401 0155 00       		.byte	0
 2402 0156 00       		.byte	0
 2403 0157 00       		.byte	0
 2404              		.section	.debug_aranges,"",%progbits
 2405 0000 AC000000 		.4byte	0xac
 2406 0004 0200     		.2byte	0x2
 2407 0006 00000000 		.4byte	.Ldebug_info0
 2408 000a 04       		.byte	0x4
 2409 000b 00       		.byte	0
 2410 000c 0000     		.2byte	0
 2411 000e 0000     		.2byte	0
 2412 0010 00000000 		.4byte	.LFB0
 2413 0014 30010000 		.4byte	.LFE0-.LFB0
 2414 0018 00000000 		.4byte	.LFB1
 2415 001c 98000000 		.4byte	.LFE1-.LFB1
 2416 0020 00000000 		.4byte	.LFB2
 2417 0024 20000000 		.4byte	.LFE2-.LFB2
 2418 0028 00000000 		.4byte	.LFB3
 2419 002c 94000000 		.4byte	.LFE3-.LFB3
 2420 0030 00000000 		.4byte	.LFB4
 2421 0034 50000000 		.4byte	.LFE4-.LFB4
 2422 0038 00000000 		.4byte	.LFB5
 2423 003c 4C000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 78


 2424 0040 00000000 		.4byte	.LFB6
 2425 0044 34000000 		.4byte	.LFE6-.LFB6
 2426 0048 00000000 		.4byte	.LFB7
 2427 004c 54000000 		.4byte	.LFE7-.LFB7
 2428 0050 00000000 		.4byte	.LFB8
 2429 0054 20000000 		.4byte	.LFE8-.LFB8
 2430 0058 00000000 		.4byte	.LFB9
 2431 005c 24000000 		.4byte	.LFE9-.LFB9
 2432 0060 00000000 		.4byte	.LFB10
 2433 0064 26000000 		.4byte	.LFE10-.LFB10
 2434 0068 00000000 		.4byte	.LFB11
 2435 006c 68000000 		.4byte	.LFE11-.LFB11
 2436 0070 00000000 		.4byte	.LFB12
 2437 0074 6C000000 		.4byte	.LFE12-.LFB12
 2438 0078 00000000 		.4byte	.LFB13
 2439 007c 58000000 		.4byte	.LFE13-.LFB13
 2440 0080 00000000 		.4byte	.LFB14
 2441 0084 98000000 		.4byte	.LFE14-.LFB14
 2442 0088 00000000 		.4byte	.LFB15
 2443 008c 2C000000 		.4byte	.LFE15-.LFB15
 2444 0090 00000000 		.4byte	.LFB16
 2445 0094 24000000 		.4byte	.LFE16-.LFB16
 2446 0098 00000000 		.4byte	.LFB17
 2447 009c 20000000 		.4byte	.LFE17-.LFB17
 2448 00a0 00000000 		.4byte	.LFB18
 2449 00a4 40000000 		.4byte	.LFE18-.LFB18
 2450 00a8 00000000 		.4byte	0
 2451 00ac 00000000 		.4byte	0
 2452              		.section	.debug_ranges,"",%progbits
 2453              	.Ldebug_ranges0:
 2454 0000 00000000 		.4byte	.LFB0
 2455 0004 30010000 		.4byte	.LFE0
 2456 0008 00000000 		.4byte	.LFB1
 2457 000c 98000000 		.4byte	.LFE1
 2458 0010 00000000 		.4byte	.LFB2
 2459 0014 20000000 		.4byte	.LFE2
 2460 0018 00000000 		.4byte	.LFB3
 2461 001c 94000000 		.4byte	.LFE3
 2462 0020 00000000 		.4byte	.LFB4
 2463 0024 50000000 		.4byte	.LFE4
 2464 0028 00000000 		.4byte	.LFB5
 2465 002c 4C000000 		.4byte	.LFE5
 2466 0030 00000000 		.4byte	.LFB6
 2467 0034 34000000 		.4byte	.LFE6
 2468 0038 00000000 		.4byte	.LFB7
 2469 003c 54000000 		.4byte	.LFE7
 2470 0040 00000000 		.4byte	.LFB8
 2471 0044 20000000 		.4byte	.LFE8
 2472 0048 00000000 		.4byte	.LFB9
 2473 004c 24000000 		.4byte	.LFE9
 2474 0050 00000000 		.4byte	.LFB10
 2475 0054 26000000 		.4byte	.LFE10
 2476 0058 00000000 		.4byte	.LFB11
 2477 005c 68000000 		.4byte	.LFE11
 2478 0060 00000000 		.4byte	.LFB12
 2479 0064 6C000000 		.4byte	.LFE12
 2480 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 79


 2481 006c 58000000 		.4byte	.LFE13
 2482 0070 00000000 		.4byte	.LFB14
 2483 0074 98000000 		.4byte	.LFE14
 2484 0078 00000000 		.4byte	.LFB15
 2485 007c 2C000000 		.4byte	.LFE15
 2486 0080 00000000 		.4byte	.LFB16
 2487 0084 24000000 		.4byte	.LFE16
 2488 0088 00000000 		.4byte	.LFB17
 2489 008c 20000000 		.4byte	.LFE17
 2490 0090 00000000 		.4byte	.LFB18
 2491 0094 40000000 		.4byte	.LFE18
 2492 0098 00000000 		.4byte	0
 2493 009c 00000000 		.4byte	0
 2494              		.section	.debug_line,"",%progbits
 2495              	.Ldebug_line0:
 2496 0000 4C020000 		.section	.debug_str,"MS",%progbits,1
 2496      02004700 
 2496      00000201 
 2496      FB0E0D00 
 2496      01010101 
 2497              	.LASF10:
 2498 0000 75696E74 		.ascii	"uint16\000"
 2498      313600
 2499              	.LASF47:
 2500 0007 43617053 		.ascii	"CapSense_csv\000"
 2500      656E7365 
 2500      5F637376 
 2500      00
 2501              	.LASF46:
 2502 0014 43617053 		.ascii	"CapSense_initVar\000"
 2502      656E7365 
 2502      5F696E69 
 2502      74566172 
 2502      00
 2503              	.LASF51:
 2504 0025 43617053 		.ascii	"CapSense_pcTable\000"
 2504      656E7365 
 2504      5F706354 
 2504      61626C65 
 2504      00
 2505              	.LASF25:
 2506 0036 736E7349 		.ascii	"snsIndex\000"
 2506      6E646578 
 2506      00
 2507              	.LASF7:
 2508 003f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2508      206C6F6E 
 2508      6720756E 
 2508      7369676E 
 2508      65642069 
 2509              	.LASF19:
 2510 0056 43617053 		.ascii	"CapSense_Enable\000"
 2510      656E7365 
 2510      5F456E61 
 2510      626C6500 
 2511              	.LASF40:
 2512 0066 43617053 		.ascii	"CapSense_SetPrescaler\000"
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 80


 2512      656E7365 
 2512      5F536574 
 2512      50726573 
 2512      63616C65 
 2513              	.LASF6:
 2514 007c 6C6F6E67 		.ascii	"long long int\000"
 2514      206C6F6E 
 2514      6720696E 
 2514      7400
 2515              	.LASF0:
 2516 008a 7369676E 		.ascii	"signed char\000"
 2516      65642063 
 2516      68617200 
 2517              	.LASF45:
 2518 0096 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2518      656E7365 
 2518      5F536574 
 2518      416E616C 
 2518      6F675377 
 2519              	.LASF4:
 2520 00b7 6C6F6E67 		.ascii	"long int\000"
 2520      20696E74 
 2520      00
 2521              	.LASF9:
 2522 00c0 75696E74 		.ascii	"uint8\000"
 2522      3800
 2523              	.LASF13:
 2524 00c6 646F7562 		.ascii	"double\000"
 2524      6C6500
 2525              	.LASF34:
 2526 00cd 43617053 		.ascii	"CapSense_EnableSensor\000"
 2526      656E7365 
 2526      5F456E61 
 2526      626C6553 
 2526      656E736F 
 2527              	.LASF58:
 2528 00e3 43617053 		.ascii	"CapSense_widgetNumber\000"
 2528      656E7365 
 2528      5F776964 
 2528      6765744E 
 2528      756D6265 
 2529              	.LASF32:
 2530 00f9 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2530      656E7365 
 2530      5F526561 
 2530      6453656E 
 2530      736F7252 
 2531              	.LASF11:
 2532 0110 75696E74 		.ascii	"uint32\000"
 2532      333200
 2533              	.LASF36:
 2534 0117 6D61736B 		.ascii	"mask\000"
 2534      00
 2535              	.LASF35:
 2536 011c 706F7274 		.ascii	"port\000"
 2536      00
 2537              	.LASF48:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 81


 2538 0121 43617053 		.ascii	"CapSense_sensorIndex\000"
 2538      656E7365 
 2538      5F73656E 
 2538      736F7249 
 2538      6E646578 
 2539              	.LASF61:
 2540 0136 443A5C50 		.ascii	"D:\\Projects\\ESD\\PSoC\\Workspace\\light_1506.cyds"
 2540      726F6A65 
 2540      6374735C 
 2540      4553445C 
 2540      50536F43 
 2541 0164 6E00     		.ascii	"n\000"
 2542              	.LASF28:
 2543 0166 43617053 		.ascii	"CapSense_ScanSensor\000"
 2543      656E7365 
 2543      5F536361 
 2543      6E53656E 
 2543      736F7200 
 2544              	.LASF8:
 2545 017a 756E7369 		.ascii	"unsigned int\000"
 2545      676E6564 
 2545      20696E74 
 2545      00
 2546              	.LASF33:
 2547 0187 43617053 		.ascii	"CapSense_ClearSensors\000"
 2547      656E7365 
 2547      5F436C65 
 2547      61725365 
 2547      6E736F72 
 2548              	.LASF5:
 2549 019d 6C6F6E67 		.ascii	"long unsigned int\000"
 2549      20756E73 
 2549      69676E65 
 2549      6420696E 
 2549      7400
 2550              	.LASF53:
 2551 01af 43617053 		.ascii	"CapSense_maskTable\000"
 2551      656E7365 
 2551      5F6D6173 
 2551      6B546162 
 2551      6C6500
 2552              	.LASF52:
 2553 01c2 43617053 		.ascii	"CapSense_portTable\000"
 2553      656E7365 
 2553      5F706F72 
 2553      74546162 
 2553      6C6500
 2554              	.LASF3:
 2555 01d5 73686F72 		.ascii	"short unsigned int\000"
 2555      7420756E 
 2555      7369676E 
 2555      65642069 
 2555      6E7400
 2556              	.LASF29:
 2557 01e8 73656E73 		.ascii	"sensor\000"
 2557      6F7200
 2558              	.LASF50:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 82


 2559 01ef 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2559      656E7365 
 2559      5F73656E 
 2559      736F7245 
 2559      6E61626C 
 2560              	.LASF26:
 2561 0209 736C6F74 		.ascii	"slot\000"
 2561      00
 2562              	.LASF62:
 2563 020e 43617053 		.ascii	"CapSense_IsBusy\000"
 2563      656E7365 
 2563      5F497342 
 2563      75737900 
 2564              	.LASF16:
 2565 021e 72656733 		.ascii	"reg32\000"
 2565      3200
 2566              	.LASF57:
 2567 0224 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2567      656E7365 
 2567      5F616E61 
 2567      6C6F6753 
 2567      77697463 
 2568              	.LASF17:
 2569 0241 73697A65 		.ascii	"sizetype\000"
 2569      74797065 
 2569      00
 2570              	.LASF54:
 2571 024a 43617053 		.ascii	"CapSense_csTable\000"
 2571      656E7365 
 2571      5F637354 
 2571      61626C65 
 2571      00
 2572              	.LASF22:
 2573 025b 43617053 		.ascii	"CapSense_Stop\000"
 2573      656E7365 
 2573      5F53746F 
 2573      7000
 2574              	.LASF44:
 2575 0269 7363616E 		.ascii	"scanSpeed\000"
 2575      53706565 
 2575      6400
 2576              	.LASF23:
 2577 0273 656E4D61 		.ascii	"enMask\000"
 2577      736B00
 2578              	.LASF59:
 2579 027a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2579      4320342E 
 2579      392E3320 
 2579      32303135 
 2579      30333033 
 2580 02ad 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2580      20726576 
 2580      6973696F 
 2580      6E203232 
 2580      31323230 
 2581 02e0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2581      66756E63 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 83


 2581      74696F6E 
 2581      2D736563 
 2581      74696F6E 
 2582              	.LASF55:
 2583 0308 43617053 		.ascii	"CapSense_idacSettings\000"
 2583      656E7365 
 2583      5F696461 
 2583      63536574 
 2583      74696E67 
 2584              	.LASF12:
 2585 031e 666C6F61 		.ascii	"float\000"
 2585      7400
 2586              	.LASF41:
 2587 0324 70726573 		.ascii	"prescaler\000"
 2587      63616C65 
 2587      7200
 2588              	.LASF15:
 2589 032e 72656738 		.ascii	"reg8\000"
 2589      00
 2590              	.LASF31:
 2591 0333 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2591      656E7365 
 2591      5F46696E 
 2591      644E6578 
 2591      7453656E 
 2592              	.LASF37:
 2593 034b 43617053 		.ascii	"CapSense_DisableSensor\000"
 2593      656E7365 
 2593      5F446973 
 2593      61626C65 
 2593      53656E73 
 2594              	.LASF1:
 2595 0362 756E7369 		.ascii	"unsigned char\000"
 2595      676E6564 
 2595      20636861 
 2595      7200
 2596              	.LASF56:
 2597 0370 43617053 		.ascii	"CapSense_widgetResolution\000"
 2597      656E7365 
 2597      5F776964 
 2597      67657452 
 2597      65736F6C 
 2598              	.LASF2:
 2599 038a 73686F72 		.ascii	"short int\000"
 2599      7420696E 
 2599      7400
 2600              	.LASF27:
 2601 0394 77696467 		.ascii	"widget\000"
 2601      657400
 2602              	.LASF42:
 2603 039b 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2603      656E7365 
 2603      5F476574 
 2603      50726573 
 2603      63616C65 
 2604              	.LASF14:
 2605 03b1 63686172 		.ascii	"char\000"
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 84


 2605      00
 2606              	.LASF43:
 2607 03b6 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2607      656E7365 
 2607      5F536574 
 2607      5363616E 
 2607      53706565 
 2608              	.LASF21:
 2609 03cc 43617053 		.ascii	"CapSense_Start\000"
 2609      656E7365 
 2609      5F537461 
 2609      727400
 2610              	.LASF39:
 2611 03db 43617053 		.ascii	"CapSense_PostScan\000"
 2611      656E7365 
 2611      5F506F73 
 2611      74536361 
 2611      6E00
 2612              	.LASF20:
 2613 03ed 656E6162 		.ascii	"enableInterrupts\000"
 2613      6C65496E 
 2613      74657272 
 2613      75707473 
 2613      00
 2614              	.LASF24:
 2615 03fe 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2615      656E7365 
 2615      5F536574 
 2615      5363616E 
 2615      536C6F74 
 2616              	.LASF38:
 2617 041b 43617053 		.ascii	"CapSense_PreScan\000"
 2617      656E7365 
 2617      5F507265 
 2617      5363616E 
 2617      00
 2618              	.LASF18:
 2619 042c 43617053 		.ascii	"CapSense_Init\000"
 2619      656E7365 
 2619      5F496E69 
 2619      7400
 2620              	.LASF49:
 2621 043a 43617053 		.ascii	"CapSense_sensorRaw\000"
 2621      656E7365 
 2621      5F73656E 
 2621      736F7252 
 2621      617700
 2622              	.LASF30:
 2623 044d 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2623      656E7365 
 2623      5F536361 
 2623      6E456E61 
 2623      626C6564 
 2624              	.LASF60:
 2625 0469 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense.c\000"
 2625      6E657261 
 2625      7465645F 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cc6wPvzh.s 			page 85


 2625      536F7572 
 2625      63655C50 
 2626              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
