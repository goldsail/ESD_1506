ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global _printf_float
  19              		.section	.rodata
  20              		.align	2
  21              	.LC1:
  22 0000 57616974 		.ascii	"Waiting for \000"
  22      696E6720 
  22      666F7220 
  22      00
  23 000d 000000   		.align	2
  24              	.LC2:
  25 0010 636F6E6E 		.ascii	"connection\000"
  25      65637469 
  25      6F6E00
  26 001b 00       		.align	2
  27              	.LC3:
  28 001c 20202020 		.ascii	"                \000"
  28      20202020 
  28      20202020 
  28      20202020 
  28      00
  29 002d 000000   		.align	2
  30              	.LC4:
  31 0030 42746E30 		.ascii	"Btn0 Btn1 Slider\000"
  31      2042746E 
  31      3120536C 
  31      69646572 
  31      00
  32              		.global	__aeabi_ui2f
  33              		.global	__aeabi_fdiv
  34              		.global	__aeabi_fmul
  35              		.global	__aeabi_f2uiz
  36 0041 000000   		.align	2
  37              	.LC5:
  38 0044 4F6E2000 		.ascii	"On \000"
  39              		.align	2
  40              	.LC6:
  41 0048 4F666600 		.ascii	"Off\000"
  42              		.align	2
  43              	.LC7:
  44 004c 2D2D2D2D 		.ascii	"----\000"
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 2


  44      00
  45 0051 000000   		.align	2
  46              	.LC8:
  47 0054 20202020 		.ascii	"    \000"
  47      00
  48              		.thumb
  49 0059 000000   		.align	2
  50              	.LC0:
  51 005c 7878780D 		.ascii	"xxx\015\012\000"
  51      0A00
  52 0062 0000     		.section	.text.main,"ax",%progbits
  53              		.align	2
  54              		.global	main
  55              		.thumb
  56              		.thumb_func
  57              		.type	main, %function
  58              	main:
  59              	.LFB63:
  60              		.file 1 ".\\main.c"
   1:.\main.c      **** /******************************************************************************
   2:.\main.c      **** * File Name: Main.c
   3:.\main.c      **** * Version 1.1
   4:.\main.c      **** *
   5:.\main.c      **** * Description:
   6:.\main.c      **** * This file contains the main function for the CapSense test.
   7:.\main.c      **** *
   8:.\main.c      **** * Note:
   9:.\main.c      **** *
  10:.\main.c      **** * Code tested with:
  11:.\main.c      **** * PSoC Creator: 3.0
  12:.\main.c      **** * Device Tested With: CY8C5868AXI-LP035
  13:.\main.c      **** * Compiler    : ARMGCC 4.4.1, ARM RVDS Generic , ARM MDK Generic
  14:.\main.c      **** *
  15:.\main.c      **** ********************************************************************************
  16:.\main.c      **** * Copyright (2013), Cypress Semiconductor Corporation. All Rights Reserved.
  17:.\main.c      **** ********************************************************************************
  18:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation (Cypress)
  19:.\main.c      **** * and is protected by and subject to worldwide patent protection (United
  20:.\main.c      **** * States and foreign), United States copyright laws and international treaty
  21:.\main.c      **** * provisions. Cypress hereby grants to licensee a personal, non-exclusive,
  22:.\main.c      **** * non-transferable license to copy, use, modify, create derivative works of,
  23:.\main.c      **** * and compile the Cypress Source Code and derivative works for the sole
  24:.\main.c      **** * purpose of creating custom software in support of licensee product to be
  25:.\main.c      **** * used only in conjunction with a Cypress integrated circuit as specified in
  26:.\main.c      **** * the applicable agreement. Any reproduction, modification, translation,
  27:.\main.c      **** * compilation, or representation of this software except as specified above 
  28:.\main.c      **** * is prohibited without the express written permission of Cypress.
  29:.\main.c      **** *
  30:.\main.c      **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH 
  31:.\main.c      **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  32:.\main.c      **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  33:.\main.c      **** * Cypress reserves the right to make changes without further notice to the 
  34:.\main.c      **** * materials described herein. Cypress does not assume any liability arising out 
  35:.\main.c      **** * of the application or use of any product or circuit described herein. Cypress 
  36:.\main.c      **** * does not authorize its products for use as critical components in life-support 
  37:.\main.c      **** * systems where a malfunction or failure may reasonably be expected to result in 
  38:.\main.c      **** * significant injury to the user. The inclusion of Cypress' product in a life-
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 3


  39:.\main.c      **** * support systems application implies that the manufacturer assumes all risk of 
  40:.\main.c      **** * such use and in doing so indemnifies Cypress against all charges. 
  41:.\main.c      **** *
  42:.\main.c      **** * Use of this Software may be limited by and subject to the applicable Cypress
  43:.\main.c      **** * software license agreement. 
  44:.\main.c      **** *******************************************************************************/
  45:.\main.c      **** 
  46:.\main.c      **** /******************************************************************************
  47:.\main.c      **** *                           THEORY OF OPERATION
  48:.\main.c      **** * This project demonstrates the capsense application using on board 5 segment 
  49:.\main.c      **** * capsense slider and 2 capsense buttons. The button state is displayed on the LCD
  50:.\main.c      **** * as on or off. Finger position on the slider is displayed as 0 - 100%. If no 
  51:.\main.c      **** * finger is there the slider position is displayed as "----".
  52:.\main.c      **** *
  53:.\main.c      **** * Hardware connection on the Kit
  54:.\main.c      **** * Slider - P5[0] - P5[4]
  55:.\main.c      **** * Button1 - P5[5]
  56:.\main.c      **** * Button2 - P5[6]
  57:.\main.c      **** * LCD 2[0-6]
  58:.\main.c      **** ******************************************************************************/ 
  59:.\main.c      **** #include <device.h>
  60:.\main.c      **** #include <project.h>
  61:.\main.c      **** 
  62:.\main.c      **** #include "stdio.h"
  63:.\main.c      **** 
  64:.\main.c      **** #if defined (__GNUC__)
  65:.\main.c      ****     /* Add an explicit reference to the floating point printf library */
  66:.\main.c      ****     /* to allow the usage of floating point conversion specifiers. */
  67:.\main.c      ****     /* This is not linked in by default with the newlib-nano library. */
  68:.\main.c      ****     asm (".global _printf_float");
  69:.\main.c      **** #endif
  70:.\main.c      **** 
  71:.\main.c      **** /* Define constants for capsense button and slider */
  72:.\main.c      **** #define ON           (1)
  73:.\main.c      **** #define OFF          (0)
  74:.\main.c      **** #define NO_FINGER    (0xFF)
  75:.\main.c      **** 
  76:.\main.c      **** int main()
  77:.\main.c      **** {
  61              		.loc 1 77 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 16
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 84B0     		sub	sp, sp, #16
  70              		.cfi_def_cfa_offset 24
  71 0004 00AF     		add	r7, sp, #0
  72              		.cfi_def_cfa_register 7
  78:.\main.c      ****     uint8 buffer[5] = "xxx\r\n";
  73              		.loc 1 78 0
  74 0006 854A     		ldr	r2, .L12
  75 0008 3B46     		mov	r3, r7
  76 000a 92E80300 		ldmia	r2, {r0, r1}
  77 000e 1860     		str	r0, [r3]
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 4


  78 0010 0433     		adds	r3, r3, #4
  79 0012 1970     		strb	r1, [r3]
  79:.\main.c      ****     uint8 statusButton0 = OFF;
  80              		.loc 1 79 0
  81 0014 0023     		movs	r3, #0
  82 0016 7B72     		strb	r3, [r7, #9]
  80:.\main.c      ****     uint8 statusButton1 = OFF;
  83              		.loc 1 80 0
  84 0018 0023     		movs	r3, #0
  85 001a 3B72     		strb	r3, [r7, #8]
  81:.\main.c      ****     uint16 sliderPosition = NO_FINGER;
  86              		.loc 1 81 0
  87 001c FF23     		movs	r3, #255
  88 001e FB80     		strh	r3, [r7, #6]	@ movhi
  82:.\main.c      ****     uint16 lastPosition = NO_FINGER;
  89              		.loc 1 82 0
  90 0020 FF23     		movs	r3, #255
  91 0022 FB81     		strh	r3, [r7, #14]	@ movhi
  83:.\main.c      ****     
  84:.\main.c      ****     uint16 lastFlux = 50;
  92              		.loc 1 84 0
  93 0024 3223     		movs	r3, #50
  94 0026 BB81     		strh	r3, [r7, #12]	@ movhi
  85:.\main.c      ****     uint16 count = 0;
  95              		.loc 1 85 0
  96 0028 0023     		movs	r3, #0
  97 002a 7B81     		strh	r3, [r7, #10]	@ movhi
  86:.\main.c      ****     
  87:.\main.c      ****     CYGlobalIntEnable; 
  98              		.loc 1 87 0
  99              	@ 87 ".\main.c" 1
 100 002c 62B6     		CPSIE   i
 101              	@ 0 "" 2
  88:.\main.c      ****     
  89:.\main.c      ****     PWM_Start();
 102              		.loc 1 89 0
 103              		.thumb
 104 002e FFF7FEFF 		bl	PWM_Start
  90:.\main.c      **** 
  91:.\main.c      ****     LCD_Start();
 105              		.loc 1 91 0
 106 0032 FFF7FEFF 		bl	LCD_Start
  92:.\main.c      ****     LCD_Position(0,0);
 107              		.loc 1 92 0
 108 0036 0020     		movs	r0, #0
 109 0038 0021     		movs	r1, #0
 110 003a FFF7FEFF 		bl	LCD_Position
  93:.\main.c      ****     LCD_PrintString("Waiting for ");
 111              		.loc 1 93 0
 112 003e 7848     		ldr	r0, .L12+4
 113 0040 FFF7FEFF 		bl	LCD_PrintString
  94:.\main.c      ****     LCD_Position(1,0);
 114              		.loc 1 94 0
 115 0044 0120     		movs	r0, #1
 116 0046 0021     		movs	r1, #0
 117 0048 FFF7FEFF 		bl	LCD_Position
  95:.\main.c      ****     LCD_PrintString("connection");
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 5


 118              		.loc 1 95 0
 119 004c 7548     		ldr	r0, .L12+8
 120 004e FFF7FEFF 		bl	LCD_PrintString
  96:.\main.c      **** 
  97:.\main.c      ****     /* Start capsense and initialize baselines and enable scan */
  98:.\main.c      ****     CapSense_Start();
 121              		.loc 1 98 0
 122 0052 FFF7FEFF 		bl	CapSense_Start
  99:.\main.c      ****     CapSense_InitializeAllBaselines();
 123              		.loc 1 99 0
 124 0056 FFF7FEFF 		bl	CapSense_InitializeAllBaselines
 100:.\main.c      ****     
 101:.\main.c      ****     USBUART_1_Start(0u, USBUART_1_3V_OPERATION);
 125              		.loc 1 101 0
 126 005a 0020     		movs	r0, #0
 127 005c 0021     		movs	r1, #0
 128 005e FFF7FEFF 		bl	USBUART_1_Start
 102:.\main.c      ****     /* Wait for Device to enumerate */
 103:.\main.c      ****     while(!USBUART_1_GetConfiguration());
 129              		.loc 1 103 0
 130 0062 00BF     		nop
 131              	.L2:
 132              		.loc 1 103 0 is_stmt 0 discriminator 1
 133 0064 FFF7FEFF 		bl	USBUART_1_GetConfiguration
 134 0068 0346     		mov	r3, r0
 135 006a 002B     		cmp	r3, #0
 136 006c FAD0     		beq	.L2
 104:.\main.c      ****     
 105:.\main.c      ****     LCD_Position(0,0);
 137              		.loc 1 105 0 is_stmt 1
 138 006e 0020     		movs	r0, #0
 139 0070 0021     		movs	r1, #0
 140 0072 FFF7FEFF 		bl	LCD_Position
 106:.\main.c      ****     LCD_PrintString("                ");
 141              		.loc 1 106 0
 142 0076 6C48     		ldr	r0, .L12+12
 143 0078 FFF7FEFF 		bl	LCD_PrintString
 107:.\main.c      ****     LCD_Position(1,0);
 144              		.loc 1 107 0
 145 007c 0120     		movs	r0, #1
 146 007e 0021     		movs	r1, #0
 147 0080 FFF7FEFF 		bl	LCD_Position
 108:.\main.c      ****     LCD_PrintString("                ");
 148              		.loc 1 108 0
 149 0084 6848     		ldr	r0, .L12+12
 150 0086 FFF7FEFF 		bl	LCD_PrintString
 109:.\main.c      ****     LCD_Position(0,0);
 151              		.loc 1 109 0
 152 008a 0020     		movs	r0, #0
 153 008c 0021     		movs	r1, #0
 154 008e FFF7FEFF 		bl	LCD_Position
 110:.\main.c      ****     LCD_PrintString("Btn0 Btn1 Slider");
 155              		.loc 1 110 0
 156 0092 6648     		ldr	r0, .L12+16
 157 0094 FFF7FEFF 		bl	LCD_PrintString
 111:.\main.c      ****     
 112:.\main.c      ****     PWM_WriteCompare(0);
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 6


 158              		.loc 1 112 0
 159 0098 0020     		movs	r0, #0
 160 009a FFF7FEFF 		bl	PWM_WriteCompare
 113:.\main.c      **** 
 114:.\main.c      ****     /* Enumeration is done, enable OUT endpoint for receive data from Host */
 115:.\main.c      ****     USBUART_1_CDC_Init();
 161              		.loc 1 115 0
 162 009e FFF7FEFF 		bl	USBUART_1_CDC_Init
 163              	.L11:
 116:.\main.c      ****     
 117:.\main.c      **** 
 118:.\main.c      ****     while(1)
 119:.\main.c      ****     {
 120:.\main.c      ****         CyDelay(200);
 164              		.loc 1 120 0
 165 00a2 C820     		movs	r0, #200
 166 00a4 FFF7FEFF 		bl	CyDelay
 121:.\main.c      ****         count++;
 167              		.loc 1 121 0
 168 00a8 7B89     		ldrh	r3, [r7, #10]
 169 00aa 0133     		adds	r3, r3, #1
 170 00ac 7B81     		strh	r3, [r7, #10]	@ movhi
 122:.\main.c      ****         PWM_WriteCompare((uint8)((float)lastFlux / 100 * 255));
 171              		.loc 1 122 0
 172 00ae BB89     		ldrh	r3, [r7, #12]
 173 00b0 1846     		mov	r0, r3
 174 00b2 FFF7FEFF 		bl	__aeabi_ui2f
 175 00b6 0346     		mov	r3, r0
 176 00b8 1846     		mov	r0, r3
 177 00ba 5D49     		ldr	r1, .L12+20
 178 00bc FFF7FEFF 		bl	__aeabi_fdiv
 179 00c0 0346     		mov	r3, r0
 180 00c2 1846     		mov	r0, r3
 181 00c4 5B49     		ldr	r1, .L12+24
 182 00c6 FFF7FEFF 		bl	__aeabi_fmul
 183 00ca 0346     		mov	r3, r0
 184 00cc 1846     		mov	r0, r3
 185 00ce FFF7FEFF 		bl	__aeabi_f2uiz
 186 00d2 0346     		mov	r3, r0
 187 00d4 DBB2     		uxtb	r3, r3
 188 00d6 1846     		mov	r0, r3
 189 00d8 FFF7FEFF 		bl	PWM_WriteCompare
 123:.\main.c      ****         buffer[0] = '0' + (lastFlux / 100 % 10);
 190              		.loc 1 123 0
 191 00dc BB89     		ldrh	r3, [r7, #12]
 192 00de 564A     		ldr	r2, .L12+28
 193 00e0 A2FB0323 		umull	r2, r3, r2, r3
 194 00e4 5B09     		lsrs	r3, r3, #5
 195 00e6 9AB2     		uxth	r2, r3
 196 00e8 544B     		ldr	r3, .L12+32
 197 00ea A3FB0213 		umull	r1, r3, r3, r2
 198 00ee D908     		lsrs	r1, r3, #3
 199 00f0 0B46     		mov	r3, r1
 200 00f2 9B00     		lsls	r3, r3, #2
 201 00f4 0B44     		add	r3, r3, r1
 202 00f6 5B00     		lsls	r3, r3, #1
 203 00f8 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 7


 204 00fa 9BB2     		uxth	r3, r3
 205 00fc DBB2     		uxtb	r3, r3
 206 00fe 3033     		adds	r3, r3, #48
 207 0100 DBB2     		uxtb	r3, r3
 208 0102 3B70     		strb	r3, [r7]
 124:.\main.c      ****         buffer[1] = '0' + (lastFlux / 10 % 10);
 209              		.loc 1 124 0
 210 0104 BB89     		ldrh	r3, [r7, #12]
 211 0106 4D4A     		ldr	r2, .L12+32
 212 0108 A2FB0323 		umull	r2, r3, r2, r3
 213 010c DB08     		lsrs	r3, r3, #3
 214 010e 9AB2     		uxth	r2, r3
 215 0110 4A4B     		ldr	r3, .L12+32
 216 0112 A3FB0213 		umull	r1, r3, r3, r2
 217 0116 D908     		lsrs	r1, r3, #3
 218 0118 0B46     		mov	r3, r1
 219 011a 9B00     		lsls	r3, r3, #2
 220 011c 0B44     		add	r3, r3, r1
 221 011e 5B00     		lsls	r3, r3, #1
 222 0120 D31A     		subs	r3, r2, r3
 223 0122 9BB2     		uxth	r3, r3
 224 0124 DBB2     		uxtb	r3, r3
 225 0126 3033     		adds	r3, r3, #48
 226 0128 DBB2     		uxtb	r3, r3
 227 012a 7B70     		strb	r3, [r7, #1]
 125:.\main.c      ****         buffer[2] = '0' + (lastFlux / 1 % 10);
 228              		.loc 1 125 0
 229 012c BA89     		ldrh	r2, [r7, #12]
 230 012e 434B     		ldr	r3, .L12+32
 231 0130 A3FB0213 		umull	r1, r3, r3, r2
 232 0134 D908     		lsrs	r1, r3, #3
 233 0136 0B46     		mov	r3, r1
 234 0138 9B00     		lsls	r3, r3, #2
 235 013a 0B44     		add	r3, r3, r1
 236 013c 5B00     		lsls	r3, r3, #1
 237 013e D31A     		subs	r3, r2, r3
 238 0140 9BB2     		uxth	r3, r3
 239 0142 DBB2     		uxtb	r3, r3
 240 0144 3033     		adds	r3, r3, #48
 241 0146 DBB2     		uxtb	r3, r3
 242 0148 BB70     		strb	r3, [r7, #2]
 126:.\main.c      ****         
 127:.\main.c      ****         // while(USBUART_1_CDCIsReady() == 0u);    /* Wait till component is ready to send more dat
 128:.\main.c      ****         if (count % 2 == 0)
 243              		.loc 1 128 0
 244 014a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 245 014c 03F00103 		and	r3, r3, #1
 246 0150 9BB2     		uxth	r3, r3
 247 0152 002B     		cmp	r3, #0
 248 0154 04D1     		bne	.L3
 129:.\main.c      ****         {
 130:.\main.c      ****             USBUART_1_PutData(buffer, 5);       /* Send data back to PC */
 249              		.loc 1 130 0
 250 0156 3B46     		mov	r3, r7
 251 0158 1846     		mov	r0, r3
 252 015a 0521     		movs	r1, #5
 253 015c FFF7FEFF 		bl	USBUART_1_PutData
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 8


 254              	.L3:
 131:.\main.c      ****         }
 132:.\main.c      ****         
 133:.\main.c      ****         
 134:.\main.c      ****         
 135:.\main.c      ****         /* Update baseline for all the sensors */
 136:.\main.c      ****         CapSense_UpdateEnabledBaselines();
 255              		.loc 1 136 0
 256 0160 FFF7FEFF 		bl	CapSense_UpdateEnabledBaselines
 137:.\main.c      **** 		
 138:.\main.c      **** 	    CapSense_ScanEnabledWidgets();
 257              		.loc 1 138 0
 258 0164 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 139:.\main.c      **** 		/* If scanning is completed update the baseline count and check if sensor is active */  
 140:.\main.c      ****         while(CapSense_IsBusy() != 0)
 259              		.loc 1 140 0
 260 0168 52E0     		b	.L4
 261              	.L10:
 141:.\main.c      ****         {
 142:.\main.c      **** 
 143:.\main.c      ****             /* Test if button widget is active */
 144:.\main.c      ****             statusButton0 = CapSense_CheckIsWidgetActive(CapSense_BUTTON0__BTN);
 262              		.loc 1 144 0
 263 016a 0120     		movs	r0, #1
 264 016c FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 265 0170 0346     		mov	r3, r0
 266 0172 7B72     		strb	r3, [r7, #9]
 145:.\main.c      ****             statusButton1 = CapSense_CheckIsWidgetActive(CapSense_BUTTON1__BTN);
 267              		.loc 1 145 0
 268 0174 0220     		movs	r0, #2
 269 0176 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 270 017a 0346     		mov	r3, r0
 271 017c 3B72     		strb	r3, [r7, #8]
 146:.\main.c      ****             sliderPosition =(uint8)CapSense_GetCentroidPos(CapSense_LINEARSLIDER0__LS);
 272              		.loc 1 146 0
 273 017e 0020     		movs	r0, #0
 274 0180 FFF7FEFF 		bl	CapSense_GetCentroidPos
 275 0184 0346     		mov	r3, r0
 276 0186 DBB2     		uxtb	r3, r3
 277 0188 FB80     		strh	r3, [r7, #6]	@ movhi
 147:.\main.c      **** 
 148:.\main.c      ****             /* Display button 1 status on LCD */
 149:.\main.c      ****             LCD_Position(1,0);
 278              		.loc 1 149 0
 279 018a 0120     		movs	r0, #1
 280 018c 0021     		movs	r1, #0
 281 018e FFF7FEFF 		bl	LCD_Position
 150:.\main.c      ****             if( statusButton0 == ON )
 282              		.loc 1 150 0
 283 0192 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 284 0194 012B     		cmp	r3, #1
 285 0196 03D1     		bne	.L5
 151:.\main.c      ****             {
 152:.\main.c      ****                 LCD_PrintString("On ");
 286              		.loc 1 152 0
 287 0198 2948     		ldr	r0, .L12+36
 288 019a FFF7FEFF 		bl	LCD_PrintString
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 9


 289 019e 02E0     		b	.L6
 290              	.L5:
 153:.\main.c      ****             }
 154:.\main.c      ****             else
 155:.\main.c      ****             {
 156:.\main.c      ****                 LCD_PrintString("Off");
 291              		.loc 1 156 0
 292 01a0 2848     		ldr	r0, .L12+40
 293 01a2 FFF7FEFF 		bl	LCD_PrintString
 294              	.L6:
 157:.\main.c      ****             }
 158:.\main.c      **** 
 159:.\main.c      ****             /* Display button 1 status on LCD */
 160:.\main.c      ****             LCD_Position(1,5);
 295              		.loc 1 160 0
 296 01a6 0120     		movs	r0, #1
 297 01a8 0521     		movs	r1, #5
 298 01aa FFF7FEFF 		bl	LCD_Position
 161:.\main.c      ****             if( statusButton1 == ON )
 299              		.loc 1 161 0
 300 01ae 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 301 01b0 012B     		cmp	r3, #1
 302 01b2 03D1     		bne	.L7
 162:.\main.c      ****             {
 163:.\main.c      ****                 LCD_PrintString("On ");
 303              		.loc 1 163 0
 304 01b4 2248     		ldr	r0, .L12+36
 305 01b6 FFF7FEFF 		bl	LCD_PrintString
 306 01ba 02E0     		b	.L8
 307              	.L7:
 164:.\main.c      ****             }
 165:.\main.c      ****             else
 166:.\main.c      ****             {
 167:.\main.c      ****                 LCD_PrintString("Off");
 308              		.loc 1 167 0
 309 01bc 2148     		ldr	r0, .L12+40
 310 01be FFF7FEFF 		bl	LCD_PrintString
 311              	.L8:
 168:.\main.c      ****             }
 169:.\main.c      **** 
 170:.\main.c      **** 		    LCD_Position(1,10);
 312              		.loc 1 170 0
 313 01c2 0120     		movs	r0, #1
 314 01c4 0A21     		movs	r1, #10
 315 01c6 FFF7FEFF 		bl	LCD_Position
 171:.\main.c      ****             
 172:.\main.c      **** 		    if(sliderPosition == NO_FINGER)
 316              		.loc 1 172 0
 317 01ca FB88     		ldrh	r3, [r7, #6]
 318 01cc FF2B     		cmp	r3, #255
 319 01ce 05D1     		bne	.L9
 173:.\main.c      ****             {
 174:.\main.c      ****                 LCD_PrintString("----");
 320              		.loc 1 174 0
 321 01d0 1D48     		ldr	r0, .L12+44
 322 01d2 FFF7FEFF 		bl	LCD_PrintString
 175:.\main.c      **** 				lastPosition = NO_FINGER;
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 10


 323              		.loc 1 175 0
 324 01d6 FF23     		movs	r3, #255
 325 01d8 FB81     		strh	r3, [r7, #14]	@ movhi
 326 01da 19E0     		b	.L4
 327              	.L9:
 176:.\main.c      ****             }
 177:.\main.c      ****             
 178:.\main.c      ****             /* Finger detected on the slider */
 179:.\main.c      ****             else
 180:.\main.c      ****             {
 181:.\main.c      ****                 /* If finger position on the slider is changed then update the LCD */
 182:.\main.c      ****                 if(sliderPosition != lastPosition)
 328              		.loc 1 182 0
 329 01dc FA88     		ldrh	r2, [r7, #6]
 330 01de FB89     		ldrh	r3, [r7, #14]
 331 01e0 9A42     		cmp	r2, r3
 332 01e2 15D0     		beq	.L4
 183:.\main.c      ****                 {
 184:.\main.c      ****                     LCD_Position(1,10);
 333              		.loc 1 184 0
 334 01e4 0120     		movs	r0, #1
 335 01e6 0A21     		movs	r1, #10
 336 01e8 FFF7FEFF 		bl	LCD_Position
 185:.\main.c      ****                     LCD_PrintString("    ");
 337              		.loc 1 185 0
 338 01ec 1748     		ldr	r0, .L12+48
 339 01ee FFF7FEFF 		bl	LCD_PrintString
 186:.\main.c      ****                     LCD_Position(1,10);
 340              		.loc 1 186 0
 341 01f2 0120     		movs	r0, #1
 342 01f4 0A21     		movs	r1, #10
 343 01f6 FFF7FEFF 		bl	LCD_Position
 187:.\main.c      ****                     LCD_PrintNumber(sliderPosition);
 344              		.loc 1 187 0
 345 01fa FB88     		ldrh	r3, [r7, #6]
 346 01fc 1846     		mov	r0, r3
 347 01fe FFF7FEFF 		bl	LCD_PrintNumber
 188:.\main.c      ****                     LCD_PutChar('%');
 348              		.loc 1 188 0
 349 0202 2520     		movs	r0, #37
 350 0204 FFF7FEFF 		bl	LCD_PutChar
 189:.\main.c      ****                     lastPosition = sliderPosition; 
 351              		.loc 1 189 0
 352 0208 FB88     		ldrh	r3, [r7, #6]	@ movhi
 353 020a FB81     		strh	r3, [r7, #14]	@ movhi
 190:.\main.c      ****                     lastFlux = sliderPosition;
 354              		.loc 1 190 0
 355 020c FB88     		ldrh	r3, [r7, #6]	@ movhi
 356 020e BB81     		strh	r3, [r7, #12]	@ movhi
 357              	.L4:
 140:.\main.c      ****         {
 358              		.loc 1 140 0
 359 0210 FFF7FEFF 		bl	CapSense_IsBusy
 360 0214 0346     		mov	r3, r0
 361 0216 002B     		cmp	r3, #0
 362 0218 A7D1     		bne	.L10
 191:.\main.c      ****                 }
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 11


 192:.\main.c      ****             }
 193:.\main.c      ****         }
 194:.\main.c      ****     }    
 363              		.loc 1 194 0
 364 021a 42E7     		b	.L11
 365              	.L13:
 366              		.align	2
 367              	.L12:
 368 021c 5C000000 		.word	.LC0
 369 0220 00000000 		.word	.LC1
 370 0224 10000000 		.word	.LC2
 371 0228 1C000000 		.word	.LC3
 372 022c 30000000 		.word	.LC4
 373 0230 0000C842 		.word	1120403456
 374 0234 00007F43 		.word	1132396544
 375 0238 1F85EB51 		.word	1374389535
 376 023c CDCCCCCC 		.word	-858993459
 377 0240 44000000 		.word	.LC5
 378 0244 48000000 		.word	.LC6
 379 0248 4C000000 		.word	.LC7
 380 024c 54000000 		.word	.LC8
 381              		.cfi_endproc
 382              	.LFE63:
 383              		.size	main, .-main
 384              		.text
 385              	.Letext0:
 386              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 387              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 388              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 389              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 390              		.section	.debug_info,"",%progbits
 391              	.Ldebug_info0:
 392 0000 4F010000 		.4byte	0x14f
 393 0004 0400     		.2byte	0x4
 394 0006 00000000 		.4byte	.Ldebug_abbrev0
 395 000a 04       		.byte	0x4
 396 000b 01       		.uleb128 0x1
 397 000c F6000000 		.4byte	.LASF24
 398 0010 01       		.byte	0x1
 399 0011 B4000000 		.4byte	.LASF25
 400 0015 33000000 		.4byte	.LASF26
 401 0019 00000000 		.4byte	.Ldebug_ranges0+0
 402 001d 00000000 		.4byte	0
 403 0021 00000000 		.4byte	.Ldebug_line0
 404 0025 02       		.uleb128 0x2
 405 0026 01       		.byte	0x1
 406 0027 06       		.byte	0x6
 407 0028 9E010000 		.4byte	.LASF0
 408 002c 02       		.uleb128 0x2
 409 002d 01       		.byte	0x1
 410 002e 08       		.byte	0x8
 411 002f D4000000 		.4byte	.LASF1
 412 0033 02       		.uleb128 0x2
 413 0034 02       		.byte	0x2
 414 0035 05       		.byte	0x5
 415 0036 BA010000 		.4byte	.LASF2
 416 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 12


 417 003b 02       		.byte	0x2
 418 003c 07       		.byte	0x7
 419 003d 0E000000 		.4byte	.LASF3
 420 0041 03       		.uleb128 0x3
 421 0042 AA010000 		.4byte	.LASF9
 422 0046 02       		.byte	0x2
 423 0047 3F       		.byte	0x3f
 424 0048 4C000000 		.4byte	0x4c
 425 004c 02       		.uleb128 0x2
 426 004d 04       		.byte	0x4
 427 004e 05       		.byte	0x5
 428 004f ED000000 		.4byte	.LASF4
 429 0053 02       		.uleb128 0x2
 430 0054 04       		.byte	0x4
 431 0055 07       		.byte	0x7
 432 0056 A2000000 		.4byte	.LASF5
 433 005a 02       		.uleb128 0x2
 434 005b 08       		.byte	0x8
 435 005c 05       		.byte	0x5
 436 005d 00000000 		.4byte	.LASF6
 437 0061 02       		.uleb128 0x2
 438 0062 08       		.byte	0x8
 439 0063 07       		.byte	0x7
 440 0064 BD000000 		.4byte	.LASF7
 441 0068 04       		.uleb128 0x4
 442 0069 04       		.byte	0x4
 443 006a 05       		.byte	0x5
 444 006b 696E7400 		.ascii	"int\000"
 445 006f 02       		.uleb128 0x2
 446 0070 04       		.byte	0x4
 447 0071 07       		.byte	0x7
 448 0072 21000000 		.4byte	.LASF8
 449 0076 03       		.uleb128 0x3
 450 0077 CB010000 		.4byte	.LASF10
 451 007b 03       		.byte	0x3
 452 007c 2C       		.byte	0x2c
 453 007d 41000000 		.4byte	0x41
 454 0081 05       		.uleb128 0x5
 455 0082 8B010000 		.4byte	.LASF11
 456 0086 04       		.byte	0x4
 457 0087 3801     		.2byte	0x138
 458 0089 2C000000 		.4byte	0x2c
 459 008d 05       		.uleb128 0x5
 460 008e C4010000 		.4byte	.LASF12
 461 0092 04       		.byte	0x4
 462 0093 3901     		.2byte	0x139
 463 0095 3A000000 		.4byte	0x3a
 464 0099 02       		.uleb128 0x2
 465 009a 04       		.byte	0x4
 466 009b 04       		.byte	0x4
 467 009c B4010000 		.4byte	.LASF13
 468 00a0 02       		.uleb128 0x2
 469 00a1 08       		.byte	0x8
 470 00a2 04       		.byte	0x4
 471 00a3 84010000 		.4byte	.LASF14
 472 00a7 02       		.uleb128 0x2
 473 00a8 01       		.byte	0x1
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 13


 474 00a9 08       		.byte	0x8
 475 00aa E2000000 		.4byte	.LASF15
 476 00ae 02       		.uleb128 0x2
 477 00af 04       		.byte	0x4
 478 00b0 07       		.byte	0x7
 479 00b1 E7010000 		.4byte	.LASF16
 480 00b5 06       		.uleb128 0x6
 481 00b6 2E000000 		.4byte	.LASF27
 482 00ba 01       		.byte	0x1
 483 00bb 4C       		.byte	0x4c
 484 00bc 68000000 		.4byte	0x68
 485 00c0 00000000 		.4byte	.LFB63
 486 00c4 50020000 		.4byte	.LFE63-.LFB63
 487 00c8 01       		.uleb128 0x1
 488 00c9 9C       		.byte	0x9c
 489 00ca 31010000 		.4byte	0x131
 490 00ce 07       		.uleb128 0x7
 491 00cf D3010000 		.4byte	.LASF17
 492 00d3 01       		.byte	0x1
 493 00d4 4E       		.byte	0x4e
 494 00d5 31010000 		.4byte	0x131
 495 00d9 02       		.uleb128 0x2
 496 00da 91       		.byte	0x91
 497 00db 68       		.sleb128 -24
 498 00dc 07       		.uleb128 0x7
 499 00dd 6E000000 		.4byte	.LASF18
 500 00e1 01       		.byte	0x1
 501 00e2 4F       		.byte	0x4f
 502 00e3 81000000 		.4byte	0x81
 503 00e7 02       		.uleb128 0x2
 504 00e8 91       		.byte	0x91
 505 00e9 71       		.sleb128 -15
 506 00ea 07       		.uleb128 0x7
 507 00eb 7C000000 		.4byte	.LASF19
 508 00ef 01       		.byte	0x1
 509 00f0 50       		.byte	0x50
 510 00f1 81000000 		.4byte	0x81
 511 00f5 02       		.uleb128 0x2
 512 00f6 91       		.byte	0x91
 513 00f7 70       		.sleb128 -16
 514 00f8 07       		.uleb128 0x7
 515 00f9 8A000000 		.4byte	.LASF20
 516 00fd 01       		.byte	0x1
 517 00fe 51       		.byte	0x51
 518 00ff 8D000000 		.4byte	0x8d
 519 0103 02       		.uleb128 0x2
 520 0104 91       		.byte	0x91
 521 0105 6E       		.sleb128 -18
 522 0106 07       		.uleb128 0x7
 523 0107 DA010000 		.4byte	.LASF21
 524 010b 01       		.byte	0x1
 525 010c 52       		.byte	0x52
 526 010d 8D000000 		.4byte	0x8d
 527 0111 02       		.uleb128 0x2
 528 0112 91       		.byte	0x91
 529 0113 76       		.sleb128 -10
 530 0114 07       		.uleb128 0x7
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 14


 531 0115 99000000 		.4byte	.LASF22
 532 0119 01       		.byte	0x1
 533 011a 54       		.byte	0x54
 534 011b 8D000000 		.4byte	0x8d
 535 011f 02       		.uleb128 0x2
 536 0120 91       		.byte	0x91
 537 0121 74       		.sleb128 -12
 538 0122 07       		.uleb128 0x7
 539 0123 E7000000 		.4byte	.LASF23
 540 0127 01       		.byte	0x1
 541 0128 55       		.byte	0x55
 542 0129 8D000000 		.4byte	0x8d
 543 012d 02       		.uleb128 0x2
 544 012e 91       		.byte	0x91
 545 012f 72       		.sleb128 -14
 546 0130 00       		.byte	0
 547 0131 08       		.uleb128 0x8
 548 0132 81000000 		.4byte	0x81
 549 0136 41010000 		.4byte	0x141
 550 013a 09       		.uleb128 0x9
 551 013b AE000000 		.4byte	0xae
 552 013f 04       		.byte	0x4
 553 0140 00       		.byte	0
 554 0141 0A       		.uleb128 0xa
 555 0142 91010000 		.4byte	.LASF28
 556 0146 05       		.byte	0x5
 557 0147 5506     		.2byte	0x655
 558 0149 4D010000 		.4byte	0x14d
 559 014d 0B       		.uleb128 0xb
 560 014e 76000000 		.4byte	0x76
 561 0152 00       		.byte	0
 562              		.section	.debug_abbrev,"",%progbits
 563              	.Ldebug_abbrev0:
 564 0000 01       		.uleb128 0x1
 565 0001 11       		.uleb128 0x11
 566 0002 01       		.byte	0x1
 567 0003 25       		.uleb128 0x25
 568 0004 0E       		.uleb128 0xe
 569 0005 13       		.uleb128 0x13
 570 0006 0B       		.uleb128 0xb
 571 0007 03       		.uleb128 0x3
 572 0008 0E       		.uleb128 0xe
 573 0009 1B       		.uleb128 0x1b
 574 000a 0E       		.uleb128 0xe
 575 000b 55       		.uleb128 0x55
 576 000c 17       		.uleb128 0x17
 577 000d 11       		.uleb128 0x11
 578 000e 01       		.uleb128 0x1
 579 000f 10       		.uleb128 0x10
 580 0010 17       		.uleb128 0x17
 581 0011 00       		.byte	0
 582 0012 00       		.byte	0
 583 0013 02       		.uleb128 0x2
 584 0014 24       		.uleb128 0x24
 585 0015 00       		.byte	0
 586 0016 0B       		.uleb128 0xb
 587 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 15


 588 0018 3E       		.uleb128 0x3e
 589 0019 0B       		.uleb128 0xb
 590 001a 03       		.uleb128 0x3
 591 001b 0E       		.uleb128 0xe
 592 001c 00       		.byte	0
 593 001d 00       		.byte	0
 594 001e 03       		.uleb128 0x3
 595 001f 16       		.uleb128 0x16
 596 0020 00       		.byte	0
 597 0021 03       		.uleb128 0x3
 598 0022 0E       		.uleb128 0xe
 599 0023 3A       		.uleb128 0x3a
 600 0024 0B       		.uleb128 0xb
 601 0025 3B       		.uleb128 0x3b
 602 0026 0B       		.uleb128 0xb
 603 0027 49       		.uleb128 0x49
 604 0028 13       		.uleb128 0x13
 605 0029 00       		.byte	0
 606 002a 00       		.byte	0
 607 002b 04       		.uleb128 0x4
 608 002c 24       		.uleb128 0x24
 609 002d 00       		.byte	0
 610 002e 0B       		.uleb128 0xb
 611 002f 0B       		.uleb128 0xb
 612 0030 3E       		.uleb128 0x3e
 613 0031 0B       		.uleb128 0xb
 614 0032 03       		.uleb128 0x3
 615 0033 08       		.uleb128 0x8
 616 0034 00       		.byte	0
 617 0035 00       		.byte	0
 618 0036 05       		.uleb128 0x5
 619 0037 16       		.uleb128 0x16
 620 0038 00       		.byte	0
 621 0039 03       		.uleb128 0x3
 622 003a 0E       		.uleb128 0xe
 623 003b 3A       		.uleb128 0x3a
 624 003c 0B       		.uleb128 0xb
 625 003d 3B       		.uleb128 0x3b
 626 003e 05       		.uleb128 0x5
 627 003f 49       		.uleb128 0x49
 628 0040 13       		.uleb128 0x13
 629 0041 00       		.byte	0
 630 0042 00       		.byte	0
 631 0043 06       		.uleb128 0x6
 632 0044 2E       		.uleb128 0x2e
 633 0045 01       		.byte	0x1
 634 0046 3F       		.uleb128 0x3f
 635 0047 19       		.uleb128 0x19
 636 0048 03       		.uleb128 0x3
 637 0049 0E       		.uleb128 0xe
 638 004a 3A       		.uleb128 0x3a
 639 004b 0B       		.uleb128 0xb
 640 004c 3B       		.uleb128 0x3b
 641 004d 0B       		.uleb128 0xb
 642 004e 49       		.uleb128 0x49
 643 004f 13       		.uleb128 0x13
 644 0050 11       		.uleb128 0x11
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 16


 645 0051 01       		.uleb128 0x1
 646 0052 12       		.uleb128 0x12
 647 0053 06       		.uleb128 0x6
 648 0054 40       		.uleb128 0x40
 649 0055 18       		.uleb128 0x18
 650 0056 9642     		.uleb128 0x2116
 651 0058 19       		.uleb128 0x19
 652 0059 01       		.uleb128 0x1
 653 005a 13       		.uleb128 0x13
 654 005b 00       		.byte	0
 655 005c 00       		.byte	0
 656 005d 07       		.uleb128 0x7
 657 005e 34       		.uleb128 0x34
 658 005f 00       		.byte	0
 659 0060 03       		.uleb128 0x3
 660 0061 0E       		.uleb128 0xe
 661 0062 3A       		.uleb128 0x3a
 662 0063 0B       		.uleb128 0xb
 663 0064 3B       		.uleb128 0x3b
 664 0065 0B       		.uleb128 0xb
 665 0066 49       		.uleb128 0x49
 666 0067 13       		.uleb128 0x13
 667 0068 02       		.uleb128 0x2
 668 0069 18       		.uleb128 0x18
 669 006a 00       		.byte	0
 670 006b 00       		.byte	0
 671 006c 08       		.uleb128 0x8
 672 006d 01       		.uleb128 0x1
 673 006e 01       		.byte	0x1
 674 006f 49       		.uleb128 0x49
 675 0070 13       		.uleb128 0x13
 676 0071 01       		.uleb128 0x1
 677 0072 13       		.uleb128 0x13
 678 0073 00       		.byte	0
 679 0074 00       		.byte	0
 680 0075 09       		.uleb128 0x9
 681 0076 21       		.uleb128 0x21
 682 0077 00       		.byte	0
 683 0078 49       		.uleb128 0x49
 684 0079 13       		.uleb128 0x13
 685 007a 2F       		.uleb128 0x2f
 686 007b 0B       		.uleb128 0xb
 687 007c 00       		.byte	0
 688 007d 00       		.byte	0
 689 007e 0A       		.uleb128 0xa
 690 007f 34       		.uleb128 0x34
 691 0080 00       		.byte	0
 692 0081 03       		.uleb128 0x3
 693 0082 0E       		.uleb128 0xe
 694 0083 3A       		.uleb128 0x3a
 695 0084 0B       		.uleb128 0xb
 696 0085 3B       		.uleb128 0x3b
 697 0086 05       		.uleb128 0x5
 698 0087 49       		.uleb128 0x49
 699 0088 13       		.uleb128 0x13
 700 0089 3F       		.uleb128 0x3f
 701 008a 19       		.uleb128 0x19
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 17


 702 008b 3C       		.uleb128 0x3c
 703 008c 19       		.uleb128 0x19
 704 008d 00       		.byte	0
 705 008e 00       		.byte	0
 706 008f 0B       		.uleb128 0xb
 707 0090 35       		.uleb128 0x35
 708 0091 00       		.byte	0
 709 0092 49       		.uleb128 0x49
 710 0093 13       		.uleb128 0x13
 711 0094 00       		.byte	0
 712 0095 00       		.byte	0
 713 0096 00       		.byte	0
 714              		.section	.debug_aranges,"",%progbits
 715 0000 1C000000 		.4byte	0x1c
 716 0004 0200     		.2byte	0x2
 717 0006 00000000 		.4byte	.Ldebug_info0
 718 000a 04       		.byte	0x4
 719 000b 00       		.byte	0
 720 000c 0000     		.2byte	0
 721 000e 0000     		.2byte	0
 722 0010 00000000 		.4byte	.LFB63
 723 0014 50020000 		.4byte	.LFE63-.LFB63
 724 0018 00000000 		.4byte	0
 725 001c 00000000 		.4byte	0
 726              		.section	.debug_ranges,"",%progbits
 727              	.Ldebug_ranges0:
 728 0000 00000000 		.4byte	.LFB63
 729 0004 50020000 		.4byte	.LFE63
 730 0008 00000000 		.4byte	0
 731 000c 00000000 		.4byte	0
 732              		.section	.debug_line,"",%progbits
 733              	.Ldebug_line0:
 734 0000 AB010000 		.section	.debug_str,"MS",%progbits,1
 734      02004901 
 734      00000201 
 734      FB0E0D00 
 734      01010101 
 735              	.LASF6:
 736 0000 6C6F6E67 		.ascii	"long long int\000"
 736      206C6F6E 
 736      6720696E 
 736      7400
 737              	.LASF3:
 738 000e 73686F72 		.ascii	"short unsigned int\000"
 738      7420756E 
 738      7369676E 
 738      65642069 
 738      6E7400
 739              	.LASF8:
 740 0021 756E7369 		.ascii	"unsigned int\000"
 740      676E6564 
 740      20696E74 
 740      00
 741              	.LASF27:
 742 002e 6D61696E 		.ascii	"main\000"
 742      00
 743              	.LASF26:
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 18


 744 0033 443A5C50 		.ascii	"D:\\Projects\\ESD\\tasks_1506\\PSoC\\Workspace\\lig"
 744      726F6A65 
 744      6374735C 
 744      4553445C 
 744      7461736B 
 745 0060 68745F31 		.ascii	"ht_1506.cydsn\000"
 745      3530362E 
 745      63796473 
 745      6E00
 746              	.LASF18:
 747 006e 73746174 		.ascii	"statusButton0\000"
 747      75734275 
 747      74746F6E 
 747      3000
 748              	.LASF19:
 749 007c 73746174 		.ascii	"statusButton1\000"
 749      75734275 
 749      74746F6E 
 749      3100
 750              	.LASF20:
 751 008a 736C6964 		.ascii	"sliderPosition\000"
 751      6572506F 
 751      73697469 
 751      6F6E00
 752              	.LASF22:
 753 0099 6C617374 		.ascii	"lastFlux\000"
 753      466C7578 
 753      00
 754              	.LASF5:
 755 00a2 6C6F6E67 		.ascii	"long unsigned int\000"
 755      20756E73 
 755      69676E65 
 755      6420696E 
 755      7400
 756              	.LASF25:
 757 00b4 2E5C6D61 		.ascii	".\\main.c\000"
 757      696E2E63 
 757      00
 758              	.LASF7:
 759 00bd 6C6F6E67 		.ascii	"long long unsigned int\000"
 759      206C6F6E 
 759      6720756E 
 759      7369676E 
 759      65642069 
 760              	.LASF1:
 761 00d4 756E7369 		.ascii	"unsigned char\000"
 761      676E6564 
 761      20636861 
 761      7200
 762              	.LASF15:
 763 00e2 63686172 		.ascii	"char\000"
 763      00
 764              	.LASF23:
 765 00e7 636F756E 		.ascii	"count\000"
 765      7400
 766              	.LASF4:
 767 00ed 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 19


 767      20696E74 
 767      00
 768              	.LASF24:
 769 00f6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 769      4320342E 
 769      392E3320 
 769      32303135 
 769      30333033 
 770 0129 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 770      20726576 
 770      6973696F 
 770      6E203232 
 770      31323230 
 771 015c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 771      66756E63 
 771      74696F6E 
 771      2D736563 
 771      74696F6E 
 772              	.LASF14:
 773 0184 646F7562 		.ascii	"double\000"
 773      6C6500
 774              	.LASF11:
 775 018b 75696E74 		.ascii	"uint8\000"
 775      3800
 776              	.LASF28:
 777 0191 49544D5F 		.ascii	"ITM_RxBuffer\000"
 777      52784275 
 777      66666572 
 777      00
 778              	.LASF0:
 779 019e 7369676E 		.ascii	"signed char\000"
 779      65642063 
 779      68617200 
 780              	.LASF9:
 781 01aa 5F5F696E 		.ascii	"__int32_t\000"
 781      7433325F 
 781      7400
 782              	.LASF13:
 783 01b4 666C6F61 		.ascii	"float\000"
 783      7400
 784              	.LASF2:
 785 01ba 73686F72 		.ascii	"short int\000"
 785      7420696E 
 785      7400
 786              	.LASF12:
 787 01c4 75696E74 		.ascii	"uint16\000"
 787      313600
 788              	.LASF10:
 789 01cb 696E7433 		.ascii	"int32_t\000"
 789      325F7400 
 790              	.LASF17:
 791 01d3 62756666 		.ascii	"buffer\000"
 791      657200
 792              	.LASF21:
 793 01da 6C617374 		.ascii	"lastPosition\000"
 793      506F7369 
 793      74696F6E 
ARM GAS  C:\Users\kingi\AppData\Local\Temp\cckpkT91.s 			page 20


 793      00
 794              	.LASF16:
 795 01e7 73697A65 		.ascii	"sizetype\000"
 795      74797065 
 795      00
 796              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
